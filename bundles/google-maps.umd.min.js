!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common"),require("rxjs"),require("rxjs/operators")):"function"==typeof define&&define.amd?define("@angular/google-maps",["exports","@angular/core","@angular/common","rxjs","rxjs/operators"],e):e(((t=t||self).ng=t.ng||{},t.ng.googleMaps={}),t.ng.core,t.ng.common,t.rxjs,t.rxjs.operators)}(this,(function(t,e,i,n,o){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */var r=function(){return(r=Object.assign||function t(e){for(var i,n=1,o=arguments.length;n<o;n++)for(var r in i=arguments[n])Object.prototype.hasOwnProperty.call(i,r)&&(e[r]=i[r]);return e}).apply(this,arguments)};function a(t,e,i,n){var o,r=arguments.length,a=r<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,i,n);else for(var s=t.length-1;s>=0;s--)(o=t[s])&&(a=(r<3?o(a):r>3?o(e,i,a):o(e,i))||a);return r>3&&a&&Object.defineProperty(e,i,a),a}function s(t,e){return function(i,n){e(i,n,t)}}function p(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}function g(t,e){var i="function"==typeof Symbol&&t[Symbol.iterator];if(!i)return t;var n,o,r=i.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(n=r.next()).done;)a.push(n.value)}catch(t){o={error:t}}finally{try{n&&!n.done&&(i=r.return)&&i.call(r)}finally{if(o)throw o.error}}return a}
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
var l=function(){function t(t){this._ngZone=t,this._pending=[],this._listeners=[]}return t.prototype._clearListeners=function(){var t,e;try{for(var i=function n(t){var e="function"==typeof Symbol&&Symbol.iterator,i=e&&t[e],n=0;if(i)return i.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}(this._listeners),o=i.next();!o.done;o=i.next())o.value.remove()}catch(e){t={error:e}}finally{try{o&&!o.done&&(e=i.return)&&e.call(i)}finally{if(t)throw t.error}}this._listeners=[]},t.prototype.getLazyEmitter=function(t){var e=this,i=new n.Observable((function(n){if(e._target){var o=e._target.addListener(t,(function(t){e._ngZone.run((function(){return n.next(t)}))}));return e._listeners.push(o),function(){return o.remove()}}e._pending.push({observable:i,observer:n})}));return i},t.prototype.setTarget=function(t){t!==this._target&&(this._target&&(this._clearListeners(),this._pending=[]),this._target=t,this._pending.forEach((function(t){return t.observable.subscribe(t.observer)})),this._pending=[])},t.prototype.destroy=function(){this._clearListeners(),this._pending=[],this._target=void 0},t}(),h={center:{lat:37.421995,lng:-122.084092},zoom:17},u="500px",c="500px",d=function(){function t(t,e,o){if(this._elementRef=t,this._ngZone=e,this._eventManager=new l(this._ngZone),this._options=new n.BehaviorSubject(h),this._center=new n.BehaviorSubject(void 0),this._zoom=new n.BehaviorSubject(void 0),this._destroy=new n.Subject,this.height=u,this.width=c,this.boundsChanged=this._eventManager.getLazyEmitter("bounds_changed"),this.centerChanged=this._eventManager.getLazyEmitter("center_changed"),this.mapClick=this._eventManager.getLazyEmitter("click"),this.mapDblclick=this._eventManager.getLazyEmitter("dblclick"),this.mapDrag=this._eventManager.getLazyEmitter("drag"),this.mapDragend=this._eventManager.getLazyEmitter("dragend"),this.mapDragstart=this._eventManager.getLazyEmitter("dragstart"),this.headingChanged=this._eventManager.getLazyEmitter("heading_changed"),this.idle=this._eventManager.getLazyEmitter("idle"),this.maptypeidChanged=this._eventManager.getLazyEmitter("maptypeid_changed"),this.mapMousemove=this._eventManager.getLazyEmitter("mousemove"),this.mapMouseout=this._eventManager.getLazyEmitter("mouseout"),this.mapMouseover=this._eventManager.getLazyEmitter("mouseover"),this.projectionChanged=this._eventManager.getLazyEmitter("projection_changed"),this.mapRightclick=this._eventManager.getLazyEmitter("rightclick"),this.tilesloaded=this._eventManager.getLazyEmitter("tilesloaded"),this.tiltChanged=this._eventManager.getLazyEmitter("tilt_changed"),this.zoomChanged=this._eventManager.getLazyEmitter("zoom_changed"),this._isBrowser=o?i.isPlatformBrowser(o):"object"==typeof window&&!!window,this._isBrowser&&!window.google)throw Error("Namespace google not found, cannot construct embedded google map. Please install the Google Maps JavaScript API: https://developers.google.com/maps/documentation/javascript/tutorial#Loading_the_Maps_API")}return Object.defineProperty(t.prototype,"center",{set:function(t){this._center.next(t)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"zoom",{set:function(t){this._zoom.next(t)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"options",{set:function(t){this._options.next(t||h)},enumerable:!1,configurable:!0}),t.prototype.ngOnChanges=function(){this._setSize(),this.googleMap&&this.mapTypeId&&this.googleMap.setMapTypeId(this.mapTypeId)},t.prototype.ngOnInit=function(){var t=this;this._isBrowser&&(this._mapEl=this._elementRef.nativeElement.querySelector(".map-container"),this._setSize(),this._googleMapChanges=this._initializeMap(this._combineOptions()),this._googleMapChanges.subscribe((function(e){t.googleMap=e,t._eventManager.setTarget(t.googleMap)})),this._watchForOptionsChanges(),this._watchForCenterChanges(),this._watchForZoomChanges())},t.prototype.ngOnDestroy=function(){this._eventManager.destroy(),this._destroy.next(),this._destroy.complete()},t.prototype.fitBounds=function(t,e){this._assertInitialized(),this.googleMap.fitBounds(t,e)},t.prototype.panBy=function(t,e){this._assertInitialized(),this.googleMap.panBy(t,e)},t.prototype.panTo=function(t){this._assertInitialized(),this.googleMap.panTo(t)},t.prototype.panToBounds=function(t,e){this._assertInitialized(),this.googleMap.panToBounds(t,e)},t.prototype.getBounds=function(){return this._assertInitialized(),this.googleMap.getBounds()||null},t.prototype.getCenter=function(){return this._assertInitialized(),this.googleMap.getCenter()},t.prototype.getClickableIcons=function(){return this._assertInitialized(),this.googleMap.getClickableIcons()},t.prototype.getHeading=function(){return this._assertInitialized(),this.googleMap.getHeading()},t.prototype.getMapTypeId=function(){return this._assertInitialized(),this.googleMap.getMapTypeId()},t.prototype.getProjection=function(){return this._assertInitialized(),this.googleMap.getProjection()},t.prototype.getStreetView=function(){return this._assertInitialized(),this.googleMap.getStreetView()},t.prototype.getTilt=function(){return this._assertInitialized(),this.googleMap.getTilt()},t.prototype.getZoom=function(){return this._assertInitialized(),this.googleMap.getZoom()},Object.defineProperty(t.prototype,"controls",{get:function(){return this._assertInitialized(),this.googleMap.controls},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"data",{get:function(){return this._assertInitialized(),this.googleMap.data},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"mapTypes",{get:function(){return this._assertInitialized(),this.googleMap.mapTypes},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"overlayMapTypes",{get:function(){return this._assertInitialized(),this.googleMap.overlayMapTypes},enumerable:!1,configurable:!0}),t.prototype._setSize=function(){if(this._mapEl){var t=this._mapEl.style;t.height=b(this.height)||u,t.width=b(this.width)||c}},t.prototype._combineOptions=function(){var t=this;return n.combineLatest([this._options,this._center,this._zoom]).pipe(o.map((function(e){var i=g(e,3),n=i[0],o=i[1],a=i[2];return r(r({},n),{center:o||n.center,zoom:void 0!==a?a:n.zoom,mapTypeId:t.mapTypeId})})))},t.prototype._initializeMap=function(t){var e=this;return t.pipe(o.take(1),o.map((function(t){return e._ngZone.runOutsideAngular((function(){return new google.maps.Map(e._mapEl,t)}))})),o.shareReplay(1))},t.prototype._watchForOptionsChanges=function(){n.combineLatest([this._googleMapChanges,this._options]).pipe(o.takeUntil(this._destroy)).subscribe((function(t){var e=g(t,2);e[0].setOptions(e[1])}))},t.prototype._watchForCenterChanges=function(){n.combineLatest([this._googleMapChanges,this._center]).pipe(o.takeUntil(this._destroy)).subscribe((function(t){var e=g(t,2),i=e[1];i&&e[0].setCenter(i)}))},t.prototype._watchForZoomChanges=function(){n.combineLatest([this._googleMapChanges,this._zoom]).pipe(o.takeUntil(this._destroy)).subscribe((function(t){var e=g(t,2),i=e[1];void 0!==i&&e[0].setZoom(i)}))},t.prototype._assertInitialized=function(){if(!this.googleMap)throw Error("Cannot access Google Map information before the API has been initialized. Please wait for the API to load before trying to interact with it.")},a([e.Input(),p("design:type",Object)],t.prototype,"height",void 0),a([e.Input(),p("design:type",Object)],t.prototype,"width",void 0),a([e.Input(),p("design:type",Object)],t.prototype,"mapTypeId",void 0),a([e.Input(),p("design:type",Object),p("design:paramtypes",[Object])],t.prototype,"center",null),a([e.Input(),p("design:type",Number),p("design:paramtypes",[Number])],t.prototype,"zoom",null),a([e.Input(),p("design:type",Object),p("design:paramtypes",[Object])],t.prototype,"options",null),a([e.Output(),p("design:type",n.Observable)],t.prototype,"boundsChanged",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"centerChanged",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"mapClick",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"mapDblclick",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"mapDrag",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"mapDragend",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"mapDragstart",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"headingChanged",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"idle",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"maptypeidChanged",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"mapMousemove",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"mapMouseout",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"mapMouseover",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"projectionChanged",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"mapRightclick",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"tilesloaded",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"tiltChanged",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"zoomChanged",void 0),a([e.Component({selector:"google-map",changeDetection:e.ChangeDetectionStrategy.OnPush,template:'<div class="map-container"></div><ng-content></ng-content>',encapsulation:e.ViewEncapsulation.None}),s(2,e.Optional()),s(2,e.Inject(e.PLATFORM_ID)),p("design:paramtypes",[e.ElementRef,e.NgZone,Object])],t)}(),y=/([A-Za-z%]+)$/;
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function b(t){return null==t?"":y.test(t)?t:t+"px"}
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var _=function(){function t(t,e){this._map=t,this._ngZone=e,this._eventManager=new l(this._ngZone),this._options=new n.BehaviorSubject({}),this._center=new n.BehaviorSubject(void 0),this._radius=new n.BehaviorSubject(void 0),this._destroyed=new n.Subject,this.centerChanged=this._eventManager.getLazyEmitter("center_changed"),this.circleClick=this._eventManager.getLazyEmitter("click"),this.circleDblclick=this._eventManager.getLazyEmitter("dblclick"),this.circleDrag=this._eventManager.getLazyEmitter("drag"),this.circleDragend=this._eventManager.getLazyEmitter("dragend"),this.circleDragstart=this._eventManager.getLazyEmitter("dragstart"),this.circleMousedown=this._eventManager.getLazyEmitter("mousedown"),this.circleMousemove=this._eventManager.getLazyEmitter("mousemove"),this.circleMouseout=this._eventManager.getLazyEmitter("mouseout"),this.circleMouseover=this._eventManager.getLazyEmitter("mouseover"),this.circleMouseup=this._eventManager.getLazyEmitter("mouseup"),this.radiusChanged=this._eventManager.getLazyEmitter("radius_changed"),this.circleRightclick=this._eventManager.getLazyEmitter("rightclick")}return Object.defineProperty(t.prototype,"options",{set:function(t){this._options.next(t||{})},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"center",{set:function(t){this._center.next(t)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"radius",{set:function(t){this._radius.next(t)},enumerable:!1,configurable:!0}),t.prototype.ngOnInit=function(){var t=this;this._map._isBrowser&&(this._combineOptions().pipe(o.take(1)).subscribe((function(e){t._ngZone.runOutsideAngular((function(){t.circle=new google.maps.Circle(e)})),t._assertInitialized(),t.circle.setMap(t._map.googleMap),t._eventManager.setTarget(t.circle)})),this._watchForOptionsChanges(),this._watchForCenterChanges(),this._watchForRadiusChanges())},t.prototype.ngOnDestroy=function(){this._eventManager.destroy(),this._destroyed.next(),this._destroyed.complete(),this.circle&&this.circle.setMap(null)},t.prototype.getBounds=function(){return this._assertInitialized(),this.circle.getBounds()},t.prototype.getCenter=function(){return this._assertInitialized(),this.circle.getCenter()},t.prototype.getDraggable=function(){return this._assertInitialized(),this.circle.getDraggable()},t.prototype.getEditable=function(){return this._assertInitialized(),this.circle.getEditable()},t.prototype.getRadius=function(){return this._assertInitialized(),this.circle.getRadius()},t.prototype.getVisible=function(){return this._assertInitialized(),this.circle.getVisible()},t.prototype._combineOptions=function(){return n.combineLatest([this._options,this._center,this._radius]).pipe(o.map((function(t){var e=g(t,3),i=e[0],n=e[1],o=e[2];return r(r({},i),{center:n||i.center,radius:void 0!==o?o:i.radius})})))},t.prototype._watchForOptionsChanges=function(){var t=this;this._options.pipe(o.takeUntil(this._destroyed)).subscribe((function(e){t._assertInitialized(),t.circle.setOptions(e)}))},t.prototype._watchForCenterChanges=function(){var t=this;this._center.pipe(o.takeUntil(this._destroyed)).subscribe((function(e){e&&(t._assertInitialized(),t.circle.setCenter(e))}))},t.prototype._watchForRadiusChanges=function(){var t=this;this._radius.pipe(o.takeUntil(this._destroyed)).subscribe((function(e){void 0!==e&&(t._assertInitialized(),t.circle.setRadius(e))}))},t.prototype._assertInitialized=function(){if(!this._map.googleMap)throw Error("Cannot access Google Map information before the API has been initialized. Please wait for the API to load before trying to interact with it.");if(!this.circle)throw Error("Cannot interact with a Google Map Circle before it has been initialized. Please wait for the Circle to load before trying to interact with it.")},a([e.Input(),p("design:type",Object),p("design:paramtypes",[Object])],t.prototype,"options",null),a([e.Input(),p("design:type",Object),p("design:paramtypes",[Object])],t.prototype,"center",null),a([e.Input(),p("design:type",Number),p("design:paramtypes",[Number])],t.prototype,"radius",null),a([e.Output(),p("design:type",n.Observable)],t.prototype,"centerChanged",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"circleClick",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"circleDblclick",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"circleDrag",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"circleDragend",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"circleDragstart",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"circleMousedown",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"circleMousemove",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"circleMouseout",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"circleMouseover",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"circleMouseup",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"radiusChanged",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"circleRightclick",void 0),a([e.Directive({selector:"map-circle"}),p("design:paramtypes",[d,e.NgZone])],t)}(),v=function(){function t(t,e){this._map=t,this._ngZone=e,this._eventManager=new l(this._ngZone),this._opacity=new n.BehaviorSubject(1),this._url=new n.BehaviorSubject(""),this._destroyed=new n.Subject,this.clickable=!1,this.mapClick=this._eventManager.getLazyEmitter("click"),this.mapDblclick=this._eventManager.getLazyEmitter("dblclick")}return Object.defineProperty(t.prototype,"url",{set:function(t){this._url.next(t)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"opacity",{set:function(t){this._opacity.next(t)},enumerable:!1,configurable:!0}),t.prototype.ngOnInit=function(){var t=this;if(!this.bounds)throw Error("Image bounds are required");this._map._isBrowser&&(this._combineOptions().pipe(o.take(1)).subscribe((function(e){t._ngZone.runOutsideAngular((function(){t.groundOverlay=new google.maps.GroundOverlay(t._url.getValue(),t.bounds,e)})),t._assertInitialized(),t.groundOverlay.setMap(t._map.googleMap),t._eventManager.setTarget(t.groundOverlay)})),this._watchForOpacityChanges(),this._watchForUrlChanges())},t.prototype.ngOnDestroy=function(){this._eventManager.destroy(),this._destroyed.next(),this._destroyed.complete(),this.groundOverlay&&this.groundOverlay.setMap(null)},t.prototype.getBounds=function(){return this._assertInitialized(),this.groundOverlay.getBounds()},t.prototype.getOpacity=function(){return this._assertInitialized(),this.groundOverlay.getOpacity()},t.prototype.getUrl=function(){return this._assertInitialized(),this.groundOverlay.getUrl()},t.prototype._combineOptions=function(){var t=this;return this._opacity.pipe(o.map((function(e){return{clickable:t.clickable,opacity:e}})))},t.prototype._watchForOpacityChanges=function(){var t=this;this._opacity.pipe(o.takeUntil(this._destroyed)).subscribe((function(e){e&&(t._assertInitialized(),t.groundOverlay.setOpacity(e))}))},t.prototype._watchForUrlChanges=function(){var t=this;this._url.pipe(o.takeUntil(this._destroyed)).subscribe((function(e){t._assertInitialized();var i=t.groundOverlay;i.set("url",e),i.setMap(null),i.setMap(t._map.googleMap)}))},t.prototype._assertInitialized=function(){if(!this._map.googleMap)throw Error("Cannot access Google Map information before the API has been initialized. Please wait for the API to load before trying to interact with it.");if(!this.groundOverlay)throw Error("Cannot interact with a Google Map GroundOverlay before it has been initialized. Please wait for the GroundOverlay to load before trying to interact with it.")},a([e.Input(),p("design:type",String),p("design:paramtypes",[String])],t.prototype,"url",null),a([e.Input(),p("design:type",Object)],t.prototype,"bounds",void 0),a([e.Input(),p("design:type",Boolean)],t.prototype,"clickable",void 0),a([e.Input(),p("design:type",Number),p("design:paramtypes",[Number])],t.prototype,"opacity",null),a([e.Output(),p("design:type",n.Observable)],t.prototype,"mapClick",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"mapDblclick",void 0),a([e.Directive({selector:"map-ground-overlay"}),p("design:paramtypes",[d,e.NgZone])],t)}(),m=function(){function t(t,e,i){this._googleMap=t,this._elementRef=e,this._ngZone=i,this._eventManager=new l(this._ngZone),this._options=new n.BehaviorSubject({}),this._position=new n.BehaviorSubject(void 0),this._destroy=new n.Subject,this.closeclick=this._eventManager.getLazyEmitter("closeclick"),this.contentChanged=this._eventManager.getLazyEmitter("content_changed"),this.domready=this._eventManager.getLazyEmitter("domready"),this.positionChanged=this._eventManager.getLazyEmitter("position_changed"),this.zindexChanged=this._eventManager.getLazyEmitter("zindex_changed")}return Object.defineProperty(t.prototype,"options",{set:function(t){this._options.next(t||{})},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"position",{set:function(t){this._position.next(t)},enumerable:!1,configurable:!0}),t.prototype.ngOnInit=function(){var t=this;this._googleMap._isBrowser&&(this._combineOptions().pipe(o.take(1)).subscribe((function(e){t._ngZone.runOutsideAngular((function(){t.infoWindow=new google.maps.InfoWindow(e)})),t._eventManager.setTarget(t.infoWindow)})),this._watchForOptionsChanges(),this._watchForPositionChanges())},t.prototype.ngOnDestroy=function(){this._eventManager.destroy(),this._destroy.next(),this._destroy.complete(),this.infoWindow&&this.close()},t.prototype.close=function(){this._assertInitialized(),this.infoWindow.close()},t.prototype.getContent=function(){return this._assertInitialized(),this.infoWindow.getContent()},t.prototype.getPosition=function(){return this._assertInitialized(),this.infoWindow.getPosition()},t.prototype.getZIndex=function(){return this._assertInitialized(),this.infoWindow.getZIndex()},t.prototype.open=function(t){this._assertInitialized(),this._elementRef.nativeElement.style.display="",this.infoWindow.open(this._googleMap.googleMap,t?t.getAnchor():void 0)},t.prototype._combineOptions=function(){var t=this;return n.combineLatest([this._options,this._position]).pipe(o.map((function(e){var i=g(e,2),n=i[0],o=i[1];return r(r({},n),{position:o||n.position,content:t._elementRef.nativeElement})})))},t.prototype._watchForOptionsChanges=function(){var t=this;this._options.pipe(o.takeUntil(this._destroy)).subscribe((function(e){t._assertInitialized(),t.infoWindow.setOptions(e)}))},t.prototype._watchForPositionChanges=function(){var t=this;this._position.pipe(o.takeUntil(this._destroy)).subscribe((function(e){e&&(t._assertInitialized(),t.infoWindow.setPosition(e))}))},t.prototype._assertInitialized=function(){if(!this._googleMap.googleMap)throw Error("Cannot access Google Map information before the API has been initialized. Please wait for the API to load before trying to interact with it.");if(!this.infoWindow)throw Error("Cannot interact with a Google Map Info Window before it has been initialized. Please wait for the Info Window to load before trying to interact with it.")},a([e.Input(),p("design:type",Object),p("design:paramtypes",[Object])],t.prototype,"options",null),a([e.Input(),p("design:type",Object),p("design:paramtypes",[Object])],t.prototype,"position",null),a([e.Output(),p("design:type",n.Observable)],t.prototype,"closeclick",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"contentChanged",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"domready",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"positionChanged",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"zindexChanged",void 0),a([e.Directive({selector:"map-info-window",host:{style:"display: none"}}),p("design:paramtypes",[d,e.ElementRef,e.NgZone])],t)}(),f={position:{lat:37.421995,lng:-122.084092}},O=function(){function t(t,e){this._googleMap=t,this._ngZone=e,this._eventManager=new l(this._ngZone),this._options=new n.BehaviorSubject(f),this._title=new n.BehaviorSubject(void 0),this._position=new n.BehaviorSubject(void 0),this._label=new n.BehaviorSubject(void 0),this._clickable=new n.BehaviorSubject(void 0),this._destroy=new n.Subject,this.animationChanged=this._eventManager.getLazyEmitter("animation_changed"),this.mapClick=this._eventManager.getLazyEmitter("click"),this.clickableChanged=this._eventManager.getLazyEmitter("clickable_changed"),this.cursorChanged=this._eventManager.getLazyEmitter("cursor_changed"),this.mapDblclick=this._eventManager.getLazyEmitter("dblclick"),this.mapDrag=this._eventManager.getLazyEmitter("drag"),this.mapDragend=this._eventManager.getLazyEmitter("dragend"),this.draggableChanged=this._eventManager.getLazyEmitter("draggable_changed"),this.mapDragstart=this._eventManager.getLazyEmitter("dragstart"),this.flatChanged=this._eventManager.getLazyEmitter("flat_changed"),this.iconChanged=this._eventManager.getLazyEmitter("icon_changed"),this.mapMousedown=this._eventManager.getLazyEmitter("mousedown"),this.mapMouseout=this._eventManager.getLazyEmitter("mouseout"),this.mapMouseover=this._eventManager.getLazyEmitter("mouseover"),this.mapMouseup=this._eventManager.getLazyEmitter("mouseup"),this.positionChanged=this._eventManager.getLazyEmitter("position_changed"),this.mapRightclick=this._eventManager.getLazyEmitter("rightclick"),this.shapeChanged=this._eventManager.getLazyEmitter("shape_changed"),this.titleChanged=this._eventManager.getLazyEmitter("title_changed"),this.visibleChanged=this._eventManager.getLazyEmitter("visible_changed"),this.zindexChanged=this._eventManager.getLazyEmitter("zindex_changed")}return Object.defineProperty(t.prototype,"options",{set:function(t){this._options.next(t||f)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"title",{set:function(t){this._title.next(t)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"position",{set:function(t){this._position.next(t)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"label",{set:function(t){this._label.next(t)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"clickable",{set:function(t){this._clickable.next(t)},enumerable:!1,configurable:!0}),t.prototype.ngOnInit=function(){var t=this;this._googleMap._isBrowser&&(this._combineOptions().pipe(o.take(1)).subscribe((function(e){t._ngZone.runOutsideAngular((function(){return t.marker=new google.maps.Marker(e)})),t._assertInitialized(),t.marker.setMap(t._googleMap.googleMap),t._eventManager.setTarget(t.marker)})),this._watchForOptionsChanges(),this._watchForTitleChanges(),this._watchForPositionChanges(),this._watchForLabelChanges(),this._watchForClickableChanges())},t.prototype.ngOnDestroy=function(){this._destroy.next(),this._destroy.complete(),this._eventManager.destroy(),this.marker&&this.marker.setMap(null)},t.prototype.getAnimation=function(){return this._assertInitialized(),this.marker.getAnimation()||null},t.prototype.getClickable=function(){return this._assertInitialized(),this.marker.getClickable()},t.prototype.getCursor=function(){return this._assertInitialized(),this.marker.getCursor()||null},t.prototype.getDraggable=function(){return this._assertInitialized(),!!this.marker.getDraggable()},t.prototype.getIcon=function(){return this._assertInitialized(),this.marker.getIcon()||null},t.prototype.getLabel=function(){return this._assertInitialized(),this.marker.getLabel()||null},t.prototype.getOpacity=function(){return this._assertInitialized(),this.marker.getOpacity()||null},t.prototype.getPosition=function(){return this._assertInitialized(),this.marker.getPosition()||null},t.prototype.getShape=function(){return this._assertInitialized(),this.marker.getShape()||null},t.prototype.getTitle=function(){return this._assertInitialized(),this.marker.getTitle()||null},t.prototype.getVisible=function(){return this._assertInitialized(),this.marker.getVisible()},t.prototype.getZIndex=function(){return this._assertInitialized(),this.marker.getZIndex()||null},t.prototype.getAnchor=function(){return this._assertInitialized(),this.marker},t.prototype._combineOptions=function(){var t=this;return n.combineLatest([this._options,this._title,this._position,this._label,this._clickable]).pipe(o.map((function(e){var i=g(e,5),n=i[0],o=i[1],a=i[2],s=i[3],p=i[4];return r(r({},n),{title:o||n.title,position:a||n.position,label:s||n.label,clickable:void 0!==p?p:n.clickable,map:t._googleMap.googleMap})})))},t.prototype._watchForOptionsChanges=function(){var t=this;this._options.pipe(o.takeUntil(this._destroy)).subscribe((function(e){t.marker&&(t._assertInitialized(),t.marker.setOptions(e))}))},t.prototype._watchForTitleChanges=function(){var t=this;this._title.pipe(o.takeUntil(this._destroy)).subscribe((function(e){t.marker&&void 0!==e&&(t._assertInitialized(),t.marker.setTitle(e))}))},t.prototype._watchForPositionChanges=function(){var t=this;this._position.pipe(o.takeUntil(this._destroy)).subscribe((function(e){t.marker&&e&&(t._assertInitialized(),t.marker.setPosition(e))}))},t.prototype._watchForLabelChanges=function(){var t=this;this._label.pipe(o.takeUntil(this._destroy)).subscribe((function(e){t.marker&&void 0!==e&&(t._assertInitialized(),t.marker.setLabel(e))}))},t.prototype._watchForClickableChanges=function(){var t=this;this._clickable.pipe(o.takeUntil(this._destroy)).subscribe((function(e){t.marker&&void 0!==e&&(t._assertInitialized(),t.marker.setClickable(e))}))},t.prototype._assertInitialized=function(){if(!this._googleMap.googleMap)throw Error("Cannot access Google Map information before the API has been initialized. Please wait for the API to load before trying to interact with it.");if(!this.marker)throw Error("Cannot interact with a Google Map Marker before it has been initialized. Please wait for the Marker to load before trying to interact with it.")},a([e.Input(),p("design:type",Object),p("design:paramtypes",[Object])],t.prototype,"options",null),a([e.Input(),p("design:type",String),p("design:paramtypes",[String])],t.prototype,"title",null),a([e.Input(),p("design:type",Object),p("design:paramtypes",[Object])],t.prototype,"position",null),a([e.Input(),p("design:type",Object),p("design:paramtypes",[Object])],t.prototype,"label",null),a([e.Input(),p("design:type",Boolean),p("design:paramtypes",[Boolean])],t.prototype,"clickable",null),a([e.Output(),p("design:type",n.Observable)],t.prototype,"animationChanged",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"mapClick",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"clickableChanged",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"cursorChanged",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"mapDblclick",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"mapDrag",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"mapDragend",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"draggableChanged",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"mapDragstart",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"flatChanged",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"iconChanged",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"mapMousedown",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"mapMouseout",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"mapMouseover",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"mapMouseup",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"positionChanged",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"mapRightclick",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"shapeChanged",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"titleChanged",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"visibleChanged",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"zindexChanged",void 0),a([e.Component({selector:"map-marker",template:"<ng-content></ng-content>",changeDetection:e.ChangeDetectionStrategy.OnPush,encapsulation:e.ViewEncapsulation.None}),p("design:paramtypes",[d,e.NgZone])],t)}(),M=function(){function t(t,e){this._map=t,this._ngZone=e,this._eventManager=new l(this._ngZone),this._options=new n.BehaviorSubject({}),this._paths=new n.BehaviorSubject(void 0),this._destroyed=new n.Subject,this.polygonClick=this._eventManager.getLazyEmitter("click"),this.polygonDblclick=this._eventManager.getLazyEmitter("dblclick"),this.polygonDrag=this._eventManager.getLazyEmitter("drag"),this.polygonDragend=this._eventManager.getLazyEmitter("dragend"),this.polygonDragstart=this._eventManager.getLazyEmitter("dragstart"),this.polygonMousedown=this._eventManager.getLazyEmitter("mousedown"),this.polygonMousemove=this._eventManager.getLazyEmitter("mousemove"),this.polygonMouseout=this._eventManager.getLazyEmitter("mouseout"),this.polygonMouseover=this._eventManager.getLazyEmitter("mouseover"),this.polygonMouseup=this._eventManager.getLazyEmitter("mouseup"),this.polygonRightclick=this._eventManager.getLazyEmitter("rightclick")}return Object.defineProperty(t.prototype,"options",{set:function(t){this._options.next(t||{})},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"paths",{set:function(t){this._paths.next(t)},enumerable:!1,configurable:!0}),t.prototype.ngOnInit=function(){var t=this;this._map._isBrowser&&(this._combineOptions().pipe(o.take(1)).subscribe((function(e){t._ngZone.runOutsideAngular((function(){t.polygon=new google.maps.Polygon(e)})),t._assertInitialized(),t.polygon.setMap(t._map.googleMap),t._eventManager.setTarget(t.polygon)})),this._watchForOptionsChanges(),this._watchForPathChanges())},t.prototype.ngOnDestroy=function(){this._eventManager.destroy(),this._destroyed.next(),this._destroyed.complete(),this.polygon&&this.polygon.setMap(null)},t.prototype.getDraggable=function(){return this._assertInitialized(),this.polygon.getDraggable()},t.prototype.getEditable=function(){return this._assertInitialized(),this.polygon.getEditable()},t.prototype.getPath=function(){return this._assertInitialized(),this.polygon.getPath()},t.prototype.getPaths=function(){return this._assertInitialized(),this.polygon.getPaths()},t.prototype.getVisible=function(){return this._assertInitialized(),this.polygon.getVisible()},t.prototype._combineOptions=function(){return n.combineLatest([this._options,this._paths]).pipe(o.map((function(t){var e=g(t,2),i=e[0],n=e[1];return r(r({},i),{paths:n||i.paths})})))},t.prototype._watchForOptionsChanges=function(){var t=this;this._options.pipe(o.takeUntil(this._destroyed)).subscribe((function(e){t._assertInitialized(),t.polygon.setOptions(e)}))},t.prototype._watchForPathChanges=function(){var t=this;this._paths.pipe(o.takeUntil(this._destroyed)).subscribe((function(e){e&&(t._assertInitialized(),t.polygon.setPaths(e))}))},t.prototype._assertInitialized=function(){if(!this._map.googleMap)throw Error("Cannot access Google Map information before the API has been initialized. Please wait for the API to load before trying to interact with it.");if(!this.polygon)throw Error("Cannot interact with a Google Map Polygon before it has been initialized. Please wait for the Polygon to load before trying to interact with it.")},a([e.Input(),p("design:type",Object),p("design:paramtypes",[Object])],t.prototype,"options",null),a([e.Input(),p("design:type",Object),p("design:paramtypes",[Object])],t.prototype,"paths",null),a([e.Output(),p("design:type",n.Observable)],t.prototype,"polygonClick",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"polygonDblclick",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"polygonDrag",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"polygonDragend",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"polygonDragstart",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"polygonMousedown",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"polygonMousemove",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"polygonMouseout",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"polygonMouseover",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"polygonMouseup",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"polygonRightclick",void 0),a([e.Directive({selector:"map-polygon"}),p("design:paramtypes",[d,e.NgZone])],t)}(),z=function(){function t(t,e){this._map=t,this._ngZone=e,this._eventManager=new l(this._ngZone),this._options=new n.BehaviorSubject({}),this._path=new n.BehaviorSubject(void 0),this._destroyed=new n.Subject,this.polylineClick=this._eventManager.getLazyEmitter("click"),this.polylineDblclick=this._eventManager.getLazyEmitter("dblclick"),this.polylineDrag=this._eventManager.getLazyEmitter("drag"),this.polylineDragend=this._eventManager.getLazyEmitter("dragend"),this.polylineDragstart=this._eventManager.getLazyEmitter("dragstart"),this.polylineMousedown=this._eventManager.getLazyEmitter("mousedown"),this.polylineMousemove=this._eventManager.getLazyEmitter("mousemove"),this.polylineMouseout=this._eventManager.getLazyEmitter("mouseout"),this.polylineMouseover=this._eventManager.getLazyEmitter("mouseover"),this.polylineMouseup=this._eventManager.getLazyEmitter("mouseup"),this.polylineRightclick=this._eventManager.getLazyEmitter("rightclick")}return Object.defineProperty(t.prototype,"options",{set:function(t){this._options.next(t||{})},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"path",{set:function(t){this._path.next(t)},enumerable:!1,configurable:!0}),t.prototype.ngOnInit=function(){var t=this;this._map._isBrowser&&(this._combineOptions().pipe(o.take(1)).subscribe((function(e){t._ngZone.runOutsideAngular((function(){return t.polyline=new google.maps.Polyline(e)})),t._assertInitialized(),t.polyline.setMap(t._map.googleMap),t._eventManager.setTarget(t.polyline)})),this._watchForOptionsChanges(),this._watchForPathChanges())},t.prototype.ngOnDestroy=function(){this._eventManager.destroy(),this._destroyed.next(),this._destroyed.complete(),this.polyline&&this.polyline.setMap(null)},t.prototype.getDraggable=function(){return this._assertInitialized(),this.polyline.getDraggable()},t.prototype.getEditable=function(){return this._assertInitialized(),this.polyline.getEditable()},t.prototype.getPath=function(){return this._assertInitialized(),this.polyline.getPath()},t.prototype.getVisible=function(){return this._assertInitialized(),this.polyline.getVisible()},t.prototype._combineOptions=function(){return n.combineLatest([this._options,this._path]).pipe(o.map((function(t){var e=g(t,2),i=e[0],n=e[1];return r(r({},i),{path:n||i.path})})))},t.prototype._watchForOptionsChanges=function(){var t=this;this._options.pipe(o.takeUntil(this._destroyed)).subscribe((function(e){t._assertInitialized(),t.polyline.setOptions(e)}))},t.prototype._watchForPathChanges=function(){var t=this;this._path.pipe(o.takeUntil(this._destroyed)).subscribe((function(e){e&&(t._assertInitialized(),t.polyline.setPath(e))}))},t.prototype._assertInitialized=function(){if(!this._map.googleMap)throw Error("Cannot access Google Map information before the API has been initialized. Please wait for the API to load before trying to interact with it.");if(!this.polyline)throw Error("Cannot interact with a Google Map Polyline before it has been initialized. Please wait for the Polyline to load before trying to interact with it.")},a([e.Input(),p("design:type",Object),p("design:paramtypes",[Object])],t.prototype,"options",null),a([e.Input(),p("design:type",Object),p("design:paramtypes",[Object])],t.prototype,"path",null),a([e.Output(),p("design:type",n.Observable)],t.prototype,"polylineClick",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"polylineDblclick",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"polylineDrag",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"polylineDragend",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"polylineDragstart",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"polylineMousedown",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"polylineMousemove",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"polylineMouseout",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"polylineMouseover",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"polylineMouseup",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"polylineRightclick",void 0),a([e.Directive({selector:"map-polyline"}),p("design:paramtypes",[d,e.NgZone])],t)}(),w=function(){function t(t,e){this._map=t,this._ngZone=e,this._eventManager=new l(this._ngZone),this._options=new n.BehaviorSubject({}),this._bounds=new n.BehaviorSubject(void 0),this._destroyed=new n.Subject,this.boundsChanged=this._eventManager.getLazyEmitter("bounds_changed"),this.rectangleClick=this._eventManager.getLazyEmitter("click"),this.rectangleDblclick=this._eventManager.getLazyEmitter("dblclick"),this.rectangleDrag=this._eventManager.getLazyEmitter("drag"),this.rectangleDragend=this._eventManager.getLazyEmitter("dragend"),this.rectangleDragstart=this._eventManager.getLazyEmitter("dragstart"),this.rectangleMousedown=this._eventManager.getLazyEmitter("mousedown"),this.rectangleMousemove=this._eventManager.getLazyEmitter("mousemove"),this.rectangleMouseout=this._eventManager.getLazyEmitter("mouseout"),this.rectangleMouseover=this._eventManager.getLazyEmitter("mouseover"),this.rectangleMouseup=this._eventManager.getLazyEmitter("mouseup"),this.rectangleRightclick=this._eventManager.getLazyEmitter("rightclick")}return Object.defineProperty(t.prototype,"options",{set:function(t){this._options.next(t||{})},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"bounds",{set:function(t){this._bounds.next(t)},enumerable:!1,configurable:!0}),t.prototype.ngOnInit=function(){var t=this;this._map._isBrowser&&(this._combineOptions().pipe(o.take(1)).subscribe((function(e){t._ngZone.runOutsideAngular((function(){t.rectangle=new google.maps.Rectangle(e)})),t._assertInitialized(),t.rectangle.setMap(t._map.googleMap),t._eventManager.setTarget(t.rectangle)})),this._watchForOptionsChanges(),this._watchForBoundsChanges())},t.prototype.ngOnDestroy=function(){this._eventManager.destroy(),this._destroyed.next(),this._destroyed.complete(),this.rectangle&&this.rectangle.setMap(null)},t.prototype.getBounds=function(){return this._assertInitialized(),this.rectangle.getBounds()},t.prototype.getDraggable=function(){return this._assertInitialized(),this.rectangle.getDraggable()},t.prototype.getEditable=function(){return this._assertInitialized(),this.rectangle.getEditable()},t.prototype.getVisible=function(){return this._assertInitialized(),this.rectangle.getVisible()},t.prototype._combineOptions=function(){return n.combineLatest([this._options,this._bounds]).pipe(o.map((function(t){var e=g(t,2),i=e[0],n=e[1];return r(r({},i),{bounds:n||i.bounds})})))},t.prototype._watchForOptionsChanges=function(){var t=this;this._options.pipe(o.takeUntil(this._destroyed)).subscribe((function(e){t._assertInitialized(),t.rectangle.setOptions(e)}))},t.prototype._watchForBoundsChanges=function(){var t=this;this._bounds.pipe(o.takeUntil(this._destroyed)).subscribe((function(e){e&&(t._assertInitialized(),t.rectangle.setBounds(e))}))},t.prototype._assertInitialized=function(){if(!this._map.googleMap)throw Error("Cannot access Google Map information before the API has been initialized. Please wait for the API to load before trying to interact with it.");if(!this.rectangle)throw Error("Cannot interact with a Google Map Rectangle before it has been initialized. Please wait for the Rectangle to load before trying to interact with it.")},a([e.Input(),p("design:type",Object),p("design:paramtypes",[Object])],t.prototype,"options",null),a([e.Input(),p("design:type",Object),p("design:paramtypes",[Object])],t.prototype,"bounds",null),a([e.Output(),p("design:type",n.Observable)],t.prototype,"boundsChanged",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"rectangleClick",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"rectangleDblclick",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"rectangleDrag",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"rectangleDragend",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"rectangleDragstart",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"rectangleMousedown",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"rectangleMousemove",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"rectangleMouseout",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"rectangleMouseover",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"rectangleMouseup",void 0),a([e.Output(),p("design:type",n.Observable)],t.prototype,"rectangleRightclick",void 0),a([e.Directive({selector:"map-rectangle"}),p("design:paramtypes",[d,e.NgZone])],t)}(),I=[d,_,v,m,O,M,z,w],C=a([e.NgModule({declarations:I,exports:I})],(function C(){}));
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
t.GoogleMap=d,t.GoogleMapsModule=C,t.MapCircle=_,t.MapGroundOverlay=v,t.MapInfoWindow=m,t.MapMarker=O,t.MapPolygon=M,t.MapPolyline=z,t.MapRectangle=w,Object.defineProperty(t,"__esModule",{value:!0})}));