{"version":3,"sources":["src/google-maps/google-maps.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","googleMaps","core","common","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","MapEventManager","_ngZone","_pending","_listeners","_clearListeners","e_1","_a","_b","__values","s","length","TypeError","_c","remove","e_1_1","return","getLazyEmitter","name","_this","observable","Observable","observer","_target","listener","addListener","event","run","setTarget","target","forEach","subscriber","subscribe","destroy","undefined","DEFAULT_OPTIONS","center","lat","lng","zoom","GoogleMap","_elementRef","platformId","_eventManager","_options","BehaviorSubject","_center","_zoom","_destroy","Subject","height","width","boundsChanged","centerChanged","mapClick","mapDblclick","mapDrag","mapDragend","mapDragstart","headingChanged","idle","maptypeidChanged","mapMousemove","mapMouseout","mapMouseover","projectionChanged","mapRightclick","tilesloaded","tiltChanged","zoomChanged","_isBrowser","isPlatformBrowser","window","defineProperty","set","enumerable","configurable","options","ngOnChanges","_setSize","googleMap","mapTypeId","setMapTypeId","ngOnInit","_mapEl","nativeElement","querySelector","_googleMapChanges","_initializeMap","_combineOptions","_watchForOptionsChanges","_watchForCenterChanges","_watchForZoomChanges","ngOnDestroy","complete","fitBounds","bounds","padding","_assertInitialized","panBy","x","y","panTo","latLng","panToBounds","latLngBounds","getBounds","getCenter","getClickableIcons","getHeading","getMapTypeId","getProjection","getStreetView","getTilt","getZoom","get","controls","data","mapTypes","overlayMapTypes","styles","style","coerceCssPixelValue","combineLatest","pipe","map","assign","optionsChanges","take","runOutsideAngular","google","maps","Map","shareReplay","takeUntil","setOptions","setCenter","setZoom","decorators","type","Component","args","selector","exportAs","changeDetection","ChangeDetectionStrategy","OnPush","template","encapsulation","ViewEncapsulation","None","ctorParameters","ElementRef","NgZone","Inject","PLATFORM_ID","propDecorators","Input","Output","cssUnitsPattern","test","MapBaseLayer","_map","_initializeObject","_setMap","_unsetMap","Error","Directive","MapBicyclingLayer","_super","apply","arguments","bicyclingLayer","BicyclingLayer","_assertLayerInitialized","setMap","MapCircle","_radius","_destroyed","circleClick","circleDblclick","circleDrag","circleDragend","circleDragstart","circleMousedown","circleMousemove","circleMouseout","circleMouseover","circleMouseup","radiusChanged","circleRightclick","radius","circle","Circle","_watchForRadiusChanges","getDraggable","getEditable","getRadius","getVisible","setRadius","MapGroundOverlay","_opacity","_url","clickable","url","opacity","groundOverlay","GroundOverlay","getValue","_watchForOpacityChanges","_watchForUrlChanges","getOpacity","getUrl","setOpacity","overlay","MapInfoWindow","_googleMap","_position","closeclick","contentChanged","domready","positionChanged","zindexChanged","position","infoWindow","InfoWindow","_watchForPositionChanges","close","getContent","getPosition","getZIndex","open","anchor","anchorObject","getAnchor","display","content","setPosition","host","MapKmlLayer","kmlClick","defaultviewportChanged","statusChanged","kmlLayer","KmlLayer","getDefaultViewport","getMetadata","getStatus","setUrl","DEFAULT_MARKER_OPTIONS","MapMarker","_title","_label","_clickable","animationChanged","clickableChanged","cursorChanged","draggableChanged","flatChanged","iconChanged","mapMousedown","mapMouseup","shapeChanged","titleChanged","visibleChanged","title","label","marker","Marker","_watchForTitleChanges","_watchForLabelChanges","_watchForClickableChanges","getAnimation","getClickable","getCursor","getIcon","getLabel","getShape","getTitle","setTitle","setLabel","setClickable","MapPolygon","_paths","polygonClick","polygonDblclick","polygonDrag","polygonDragend","polygonDragstart","polygonMousedown","polygonMousemove","polygonMouseout","polygonMouseover","polygonMouseup","polygonRightclick","paths","polygon","Polygon","_watchForPathChanges","getPath","getPaths","setPaths","MapPolyline","_path","polylineClick","polylineDblclick","polylineDrag","polylineDragend","polylineDragstart","polylineMousedown","polylineMousemove","polylineMouseout","polylineMouseover","polylineMouseup","polylineRightclick","path","polyline","Polyline","setPath","MapRectangle","_bounds","rectangleClick","rectangleDblclick","rectangleDrag","rectangleDragend","rectangleDragstart","rectangleMousedown","rectangleMousemove","rectangleMouseout","rectangleMouseover","rectangleMouseup","rectangleRightclick","rectangle","Rectangle","_watchForBoundsChanges","setBounds","MapTrafficLayer","_autoRefresh","autoRefresh","trafficLayer","TrafficLayer","_watchForAutoRefreshChanges","MapTransitLayer","transitLayer","TransitLayer","GoogleMapsModule","COMPONENTS","NgModule","declarations"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/google-maps', ['exports', '@angular/core', '@angular/common', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.googleMaps = {}), global.ng.core, global.ng.common, global.rxjs, global.rxjs.operators));\n}(this, (function (exports, core, common, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\n    Copyright (c) Microsoft Corporation.\n\n    Permission to use, copy, modify, and/or distribute this software for any\n    purpose with or without fee is hereby granted.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n    PERFORMANCE OF THIS SOFTWARE.\n    ***************************************************************************** */\n    /* global Reflect, Promise */\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b)\n                if (b.hasOwnProperty(p))\n                    d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    function __extends(d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    }\n    var __assign = function () {\n        __assign = Object.assign || function __assign(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s)\n                    if (Object.prototype.hasOwnProperty.call(s, p))\n                        t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign.apply(this, arguments);\n    };\n    function __rest(s, e) {\n        var t = {};\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n                t[p] = s[p];\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                    t[p[i]] = s[p[i]];\n            }\n        return t;\n    }\n    function __decorate(decorators, target, key, desc) {\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n            r = Reflect.decorate(decorators, target, key, desc);\n        else\n            for (var i = decorators.length - 1; i >= 0; i--)\n                if (d = decorators[i])\n                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\n    }\n    function __param(paramIndex, decorator) {\n        return function (target, key) { decorator(target, key, paramIndex); };\n    }\n    function __metadata(metadataKey, metadataValue) {\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\")\n            return Reflect.metadata(metadataKey, metadataValue);\n    }\n    function __awaiter(thisArg, _arguments, P, generator) {\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) { try {\n                step(generator.next(value));\n            }\n            catch (e) {\n                reject(e);\n            } }\n            function rejected(value) { try {\n                step(generator[\"throw\"](value));\n            }\n            catch (e) {\n                reject(e);\n            } }\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    }\n    function __generator(thisArg, body) {\n        var _ = { label: 0, sent: function () { if (t[0] & 1)\n                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () { return this; }), g;\n        function verb(n) { return function (v) { return step([n, v]); }; }\n        function step(op) {\n            if (f)\n                throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                        return t;\n                    if (y = 0, t)\n                        op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2])\n                                _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                }\n                catch (e) {\n                    op = [6, e];\n                    y = 0;\n                }\n                finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5)\n                throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    }\n    var __createBinding = Object.create ? (function (o, m, k, k2) {\n        if (k2 === undefined)\n            k2 = k;\n        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });\n    }) : (function (o, m, k, k2) {\n        if (k2 === undefined)\n            k2 = k;\n        o[k2] = m[k];\n    });\n    function __exportStar(m, exports) {\n        for (var p in m)\n            if (p !== \"default\" && !exports.hasOwnProperty(p))\n                __createBinding(exports, m, p);\n    }\n    function __values(o) {\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n        if (m)\n            return m.call(o);\n        if (o && typeof o.length === \"number\")\n            return {\n                next: function () {\n                    if (o && i >= o.length)\n                        o = void 0;\n                    return { value: o && o[i++], done: !o };\n                }\n            };\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n    }\n    function __read(o, n) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n        if (!m)\n            return o;\n        var i = m.call(o), r, ar = [], e;\n        try {\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)\n                ar.push(r.value);\n        }\n        catch (error) {\n            e = { error: error };\n        }\n        finally {\n            try {\n                if (r && !r.done && (m = i[\"return\"]))\n                    m.call(i);\n            }\n            finally {\n                if (e)\n                    throw e.error;\n            }\n        }\n        return ar;\n    }\n    function __spread() {\n        for (var ar = [], i = 0; i < arguments.length; i++)\n            ar = ar.concat(__read(arguments[i]));\n        return ar;\n    }\n    function __spreadArrays() {\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++)\n            s += arguments[i].length;\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n                r[k] = a[j];\n        return r;\n    }\n    ;\n    function __await(v) {\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\n    }\n    function __asyncGenerator(thisArg, _arguments, generator) {\n        if (!Symbol.asyncIterator)\n            throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n        function verb(n) { if (g[n])\n            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n        function resume(n, v) { try {\n            step(g[n](v));\n        }\n        catch (e) {\n            settle(q[0][3], e);\n        } }\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n        function fulfill(value) { resume(\"next\", value); }\n        function reject(value) { resume(\"throw\", value); }\n        function settle(f, v) { if (f(v), q.shift(), q.length)\n            resume(q[0][0], q[0][1]); }\n    }\n    function __asyncDelegator(o) {\n        var i, p;\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\n    }\n    function __asyncValues(o) {\n        if (!Symbol.asyncIterator)\n            throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n        var m = o[Symbol.asyncIterator], i;\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }\n    }\n    function __makeTemplateObject(cooked, raw) {\n        if (Object.defineProperty) {\n            Object.defineProperty(cooked, \"raw\", { value: raw });\n        }\n        else {\n            cooked.raw = raw;\n        }\n        return cooked;\n    }\n    ;\n    var __setModuleDefault = Object.create ? (function (o, v) {\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n    }) : function (o, v) {\n        o[\"default\"] = v;\n    };\n    function __importStar(mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (Object.hasOwnProperty.call(mod, k))\n                    __createBinding(result, mod, k);\n        __setModuleDefault(result, mod);\n        return result;\n    }\n    function __importDefault(mod) {\n        return (mod && mod.__esModule) ? mod : { default: mod };\n    }\n    function __classPrivateFieldGet(receiver, privateMap) {\n        if (!privateMap.has(receiver)) {\n            throw new TypeError(\"attempted to get private field on non-instance\");\n        }\n        return privateMap.get(receiver);\n    }\n    function __classPrivateFieldSet(receiver, privateMap, value) {\n        if (!privateMap.has(receiver)) {\n            throw new TypeError(\"attempted to set private field on non-instance\");\n        }\n        privateMap.set(receiver, value);\n        return value;\n    }\n\n    /** Manages event on a Google Maps object, ensuring that events are added only when necessary. */\n    var MapEventManager = /** @class */ (function () {\n        function MapEventManager(_ngZone) {\n            this._ngZone = _ngZone;\n            /** Pending listeners that were added before the target was set. */\n            this._pending = [];\n            this._listeners = [];\n        }\n        /** Clears all currently-registered event listeners. */\n        MapEventManager.prototype._clearListeners = function () {\n            var e_1, _a;\n            try {\n                for (var _b = __values(this._listeners), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var listener = _c.value;\n                    listener.remove();\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            this._listeners = [];\n        };\n        /** Gets an observable that adds an event listener to the map when a consumer subscribes to it. */\n        MapEventManager.prototype.getLazyEmitter = function (name) {\n            var _this = this;\n            var observable = new rxjs.Observable(function (observer) {\n                // If the target hasn't been initialized yet, cache the observer so it can be added later.\n                if (!_this._target) {\n                    _this._pending.push({ observable: observable, observer: observer });\n                    return undefined;\n                }\n                var listener = _this._target.addListener(name, function (event) {\n                    _this._ngZone.run(function () { return observer.next(event); });\n                });\n                _this._listeners.push(listener);\n                return function () { return listener.remove(); };\n            });\n            return observable;\n        };\n        /** Sets the current target that the manager should bind events to. */\n        MapEventManager.prototype.setTarget = function (target) {\n            if (target === this._target) {\n                return;\n            }\n            // Clear the listeners from the pre-existing target.\n            if (this._target) {\n                this._clearListeners();\n                this._pending = [];\n            }\n            this._target = target;\n            // Add the listeners that were bound before the map was initialized.\n            this._pending.forEach(function (subscriber) { return subscriber.observable.subscribe(subscriber.observer); });\n            this._pending = [];\n        };\n        /** Destroys the manager and clears the event listeners. */\n        MapEventManager.prototype.destroy = function () {\n            this._clearListeners();\n            this._pending = [];\n            this._target = undefined;\n        };\n        return MapEventManager;\n    }());\n\n    /** default options set to the Googleplex */\n    var DEFAULT_OPTIONS = {\n        center: { lat: 37.421995, lng: -122.084092 },\n        zoom: 17\n    };\n    /** Arbitrary default height for the map element */\n    var DEFAULT_HEIGHT = '500px';\n    /** Arbitrary default width for the map element */\n    var DEFAULT_WIDTH = '500px';\n    /**\n     * Angular component that renders a Google Map via the Google Maps JavaScript\n     * API.\n     * @see https://developers.google.com/maps/documentation/javascript/reference/\n     */\n    var GoogleMap = /** @class */ (function () {\n        function GoogleMap(_elementRef, _ngZone, platformId) {\n            this._elementRef = _elementRef;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._options = new rxjs.BehaviorSubject(DEFAULT_OPTIONS);\n            this._center = new rxjs.BehaviorSubject(undefined);\n            this._zoom = new rxjs.BehaviorSubject(undefined);\n            this._destroy = new rxjs.Subject();\n            /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\n            this.height = DEFAULT_HEIGHT;\n            /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\n            this.width = DEFAULT_WIDTH;\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n             */\n            this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n             */\n            this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n             */\n            this.mapClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n             */\n            this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n             */\n            this.mapDrag = this._eventManager.getLazyEmitter('drag');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n             */\n            this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n             */\n            this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n             */\n            this.headingChanged = this._eventManager.getLazyEmitter('heading_changed');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n             */\n            this.idle = this._eventManager.getLazyEmitter('idle');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n             */\n            this.maptypeidChanged = this._eventManager.getLazyEmitter('maptypeid_changed');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n             */\n            this.mapMousemove = this._eventManager.getLazyEmitter('mousemove');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n             */\n            this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n             */\n            this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n             */\n            this.projectionChanged = this._eventManager.getLazyEmitter('projection_changed');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n             */\n            this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n             */\n            this.tilesloaded = this._eventManager.getLazyEmitter('tilesloaded');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n             */\n            this.tiltChanged = this._eventManager.getLazyEmitter('tilt_changed');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n             */\n            this.zoomChanged = this._eventManager.getLazyEmitter('zoom_changed');\n            this._isBrowser = common.isPlatformBrowser(platformId);\n            if (this._isBrowser) {\n                var googleMapsWindow = window;\n                if (!googleMapsWindow.google && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throw Error('Namespace google not found, cannot construct embedded google ' +\n                        'map. Please install the Google Maps JavaScript API: ' +\n                        'https://developers.google.com/maps/documentation/javascript/' +\n                        'tutorial#Loading_the_Maps_API');\n                }\n            }\n        }\n        Object.defineProperty(GoogleMap.prototype, \"center\", {\n            set: function (center) {\n                this._center.next(center);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(GoogleMap.prototype, \"zoom\", {\n            set: function (zoom) {\n                this._zoom.next(zoom);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(GoogleMap.prototype, \"options\", {\n            set: function (options) {\n                this._options.next(options || DEFAULT_OPTIONS);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        GoogleMap.prototype.ngOnChanges = function () {\n            this._setSize();\n            if (this.googleMap && this.mapTypeId) {\n                this.googleMap.setMapTypeId(this.mapTypeId);\n            }\n        };\n        GoogleMap.prototype.ngOnInit = function () {\n            var _this = this;\n            // It should be a noop during server-side rendering.\n            if (this._isBrowser) {\n                this._mapEl = this._elementRef.nativeElement.querySelector('.map-container');\n                this._setSize();\n                this._googleMapChanges = this._initializeMap(this._combineOptions());\n                this._googleMapChanges.subscribe(function (googleMap) {\n                    _this.googleMap = googleMap;\n                    _this._eventManager.setTarget(_this.googleMap);\n                });\n                this._watchForOptionsChanges();\n                this._watchForCenterChanges();\n                this._watchForZoomChanges();\n            }\n        };\n        GoogleMap.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroy.next();\n            this._destroy.complete();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n         */\n        GoogleMap.prototype.fitBounds = function (bounds, padding) {\n            this._assertInitialized();\n            this.googleMap.fitBounds(bounds, padding);\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n         */\n        GoogleMap.prototype.panBy = function (x, y) {\n            this._assertInitialized();\n            this.googleMap.panBy(x, y);\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n         */\n        GoogleMap.prototype.panTo = function (latLng) {\n            this._assertInitialized();\n            this.googleMap.panTo(latLng);\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n         */\n        GoogleMap.prototype.panToBounds = function (latLngBounds, padding) {\n            this._assertInitialized();\n            this.googleMap.panToBounds(latLngBounds, padding);\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n         */\n        GoogleMap.prototype.getBounds = function () {\n            this._assertInitialized();\n            return this.googleMap.getBounds() || null;\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n         */\n        GoogleMap.prototype.getCenter = function () {\n            this._assertInitialized();\n            return this.googleMap.getCenter();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n         */\n        GoogleMap.prototype.getClickableIcons = function () {\n            this._assertInitialized();\n            return this.googleMap.getClickableIcons();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n         */\n        GoogleMap.prototype.getHeading = function () {\n            this._assertInitialized();\n            return this.googleMap.getHeading();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n         */\n        GoogleMap.prototype.getMapTypeId = function () {\n            this._assertInitialized();\n            return this.googleMap.getMapTypeId();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n         */\n        GoogleMap.prototype.getProjection = function () {\n            this._assertInitialized();\n            return this.googleMap.getProjection();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n         */\n        GoogleMap.prototype.getStreetView = function () {\n            this._assertInitialized();\n            return this.googleMap.getStreetView();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n         */\n        GoogleMap.prototype.getTilt = function () {\n            this._assertInitialized();\n            return this.googleMap.getTilt();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n         */\n        GoogleMap.prototype.getZoom = function () {\n            this._assertInitialized();\n            return this.googleMap.getZoom();\n        };\n        Object.defineProperty(GoogleMap.prototype, \"controls\", {\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n             */\n            get: function () {\n                this._assertInitialized();\n                return this.googleMap.controls;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(GoogleMap.prototype, \"data\", {\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n             */\n            get: function () {\n                this._assertInitialized();\n                return this.googleMap.data;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(GoogleMap.prototype, \"mapTypes\", {\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n             */\n            get: function () {\n                this._assertInitialized();\n                return this.googleMap.mapTypes;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(GoogleMap.prototype, \"overlayMapTypes\", {\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n             */\n            get: function () {\n                this._assertInitialized();\n                return this.googleMap.overlayMapTypes;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        GoogleMap.prototype._setSize = function () {\n            if (this._mapEl) {\n                var styles = this._mapEl.style;\n                styles.height =\n                    this.height === null ? '' : (coerceCssPixelValue(this.height) || DEFAULT_HEIGHT);\n                styles.width = this.width === null ? '' : (coerceCssPixelValue(this.width) || DEFAULT_WIDTH);\n            }\n        };\n        /** Combines the center and zoom and the other map options into a single object */\n        GoogleMap.prototype._combineOptions = function () {\n            var _this = this;\n            return rxjs.combineLatest([this._options, this._center, this._zoom])\n                .pipe(operators.map(function (_a) {\n                var _b = __read(_a, 3), options = _b[0], center = _b[1], zoom = _b[2];\n                var combinedOptions = Object.assign(Object.assign({}, options), {\n                    // It's important that we set **some** kind of `center`, otherwise\n                    // Google Maps will render a blank rectangle which looks broken.\n                    center: center || options.center || DEFAULT_OPTIONS.center, zoom: zoom !== undefined ? zoom : options.zoom, mapTypeId: _this.mapTypeId\n                });\n                return combinedOptions;\n            }));\n        };\n        GoogleMap.prototype._initializeMap = function (optionsChanges) {\n            var _this = this;\n            return optionsChanges.pipe(operators.take(1), operators.map(function (options) {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                return _this._ngZone.runOutsideAngular(function () { return new google.maps.Map(_this._mapEl, options); });\n            }), operators.shareReplay(1));\n        };\n        GoogleMap.prototype._watchForOptionsChanges = function () {\n            rxjs.combineLatest([this._googleMapChanges, this._options])\n                .pipe(operators.takeUntil(this._destroy))\n                .subscribe(function (_a) {\n                var _b = __read(_a, 2), googleMap = _b[0], options = _b[1];\n                googleMap.setOptions(options);\n            });\n        };\n        GoogleMap.prototype._watchForCenterChanges = function () {\n            rxjs.combineLatest([this._googleMapChanges, this._center])\n                .pipe(operators.takeUntil(this._destroy))\n                .subscribe(function (_a) {\n                var _b = __read(_a, 2), googleMap = _b[0], center = _b[1];\n                if (center) {\n                    googleMap.setCenter(center);\n                }\n            });\n        };\n        GoogleMap.prototype._watchForZoomChanges = function () {\n            rxjs.combineLatest([this._googleMapChanges, this._zoom])\n                .pipe(operators.takeUntil(this._destroy))\n                .subscribe(function (_a) {\n                var _b = __read(_a, 2), googleMap = _b[0], zoom = _b[1];\n                if (zoom !== undefined) {\n                    googleMap.setZoom(zoom);\n                }\n            });\n        };\n        /** Asserts that the map has been initialized. */\n        GoogleMap.prototype._assertInitialized = function () {\n            if (!this.googleMap && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n        };\n        return GoogleMap;\n    }());\n    GoogleMap.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'google-map',\n                    exportAs: 'googleMap',\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    template: '<div class=\"map-container\"></div><ng-content></ng-content>',\n                    encapsulation: core.ViewEncapsulation.None\n                },] }\n    ];\n    GoogleMap.ctorParameters = function () { return [\n        { type: core.ElementRef },\n        { type: core.NgZone },\n        { type: Object, decorators: [{ type: core.Inject, args: [core.PLATFORM_ID,] }] }\n    ]; };\n    GoogleMap.propDecorators = {\n        height: [{ type: core.Input }],\n        width: [{ type: core.Input }],\n        mapTypeId: [{ type: core.Input }],\n        center: [{ type: core.Input }],\n        zoom: [{ type: core.Input }],\n        options: [{ type: core.Input }],\n        boundsChanged: [{ type: core.Output }],\n        centerChanged: [{ type: core.Output }],\n        mapClick: [{ type: core.Output }],\n        mapDblclick: [{ type: core.Output }],\n        mapDrag: [{ type: core.Output }],\n        mapDragend: [{ type: core.Output }],\n        mapDragstart: [{ type: core.Output }],\n        headingChanged: [{ type: core.Output }],\n        idle: [{ type: core.Output }],\n        maptypeidChanged: [{ type: core.Output }],\n        mapMousemove: [{ type: core.Output }],\n        mapMouseout: [{ type: core.Output }],\n        mapMouseover: [{ type: core.Output }],\n        projectionChanged: [{ type: core.Output }],\n        mapRightclick: [{ type: core.Output }],\n        tilesloaded: [{ type: core.Output }],\n        tiltChanged: [{ type: core.Output }],\n        zoomChanged: [{ type: core.Output }]\n    };\n    var cssUnitsPattern = /([A-Za-z%]+)$/;\n    /** Coerces a value to a CSS pixel value. */\n    function coerceCssPixelValue(value) {\n        if (value == null) {\n            return '';\n        }\n        return cssUnitsPattern.test(value) ? value : value + \"px\";\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MapBaseLayer = /** @class */ (function () {\n        function MapBaseLayer(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n        }\n        MapBaseLayer.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._map._isBrowser) {\n                this._ngZone.runOutsideAngular(function () {\n                    _this._initializeObject();\n                });\n                this._assertInitialized();\n                this._setMap();\n            }\n        };\n        MapBaseLayer.prototype.ngOnDestroy = function () {\n            this._unsetMap();\n        };\n        MapBaseLayer.prototype._assertInitialized = function () {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n        };\n        MapBaseLayer.prototype._initializeObject = function () { };\n        MapBaseLayer.prototype._setMap = function () { };\n        MapBaseLayer.prototype._unsetMap = function () { };\n        return MapBaseLayer;\n    }());\n    MapBaseLayer.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-base-layer',\n                    exportAs: 'mapBaseLayer',\n                },] }\n    ];\n    MapBaseLayer.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n\n    /**\n     * Angular component that renders a Google Maps Bicycling Layer via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n     */\n    var MapBicyclingLayer = /** @class */ (function (_super) {\n        __extends(MapBicyclingLayer, _super);\n        function MapBicyclingLayer() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MapBicyclingLayer.prototype._initializeObject = function () {\n            this.bicyclingLayer = new google.maps.BicyclingLayer();\n        };\n        MapBicyclingLayer.prototype._setMap = function () {\n            this._assertLayerInitialized();\n            this.bicyclingLayer.setMap(this._map.googleMap);\n        };\n        MapBicyclingLayer.prototype._unsetMap = function () {\n            if (this.bicyclingLayer) {\n                this.bicyclingLayer.setMap(null);\n            }\n        };\n        MapBicyclingLayer.prototype._assertLayerInitialized = function () {\n            if (!this.bicyclingLayer) {\n                throw Error('Cannot interact with a Google Map Bicycling Layer before it has been initialized. ' +\n                    'Please wait for the Transit Layer to load before trying to interact with it.');\n            }\n        };\n        return MapBicyclingLayer;\n    }(MapBaseLayer));\n    MapBicyclingLayer.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-bicycling-layer',\n                    exportAs: 'mapBicyclingLayer',\n                },] }\n    ];\n\n    /**\n     * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n     * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n     */\n    var MapCircle = /** @class */ (function () {\n        function MapCircle(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._options = new rxjs.BehaviorSubject({});\n            this._center = new rxjs.BehaviorSubject(undefined);\n            this._radius = new rxjs.BehaviorSubject(undefined);\n            this._destroyed = new rxjs.Subject();\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n             */\n            this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n             */\n            this.circleClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n             */\n            this.circleDblclick = this._eventManager.getLazyEmitter('dblclick');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n             */\n            this.circleDrag = this._eventManager.getLazyEmitter('drag');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n             */\n            this.circleDragend = this._eventManager.getLazyEmitter('dragend');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n             */\n            this.circleDragstart = this._eventManager.getLazyEmitter('dragstart');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n             */\n            this.circleMousedown = this._eventManager.getLazyEmitter('mousedown');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n             */\n            this.circleMousemove = this._eventManager.getLazyEmitter('mousemove');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n             */\n            this.circleMouseout = this._eventManager.getLazyEmitter('mouseout');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n             */\n            this.circleMouseover = this._eventManager.getLazyEmitter('mouseover');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n             */\n            this.circleMouseup = this._eventManager.getLazyEmitter('mouseup');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n             */\n            this.radiusChanged = this._eventManager.getLazyEmitter('radius_changed');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n             */\n            this.circleRightclick = this._eventManager.getLazyEmitter('rightclick');\n        }\n        Object.defineProperty(MapCircle.prototype, \"options\", {\n            set: function (options) {\n                this._options.next(options || {});\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapCircle.prototype, \"center\", {\n            set: function (center) {\n                this._center.next(center);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapCircle.prototype, \"radius\", {\n            set: function (radius) {\n                this._radius.next(radius);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapCircle.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._map._isBrowser) {\n                this._combineOptions().pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    _this._ngZone.runOutsideAngular(function () {\n                        _this.circle = new google.maps.Circle(options);\n                    });\n                    _this._assertInitialized();\n                    _this.circle.setMap(_this._map.googleMap);\n                    _this._eventManager.setTarget(_this.circle);\n                });\n                this._watchForOptionsChanges();\n                this._watchForCenterChanges();\n                this._watchForRadiusChanges();\n            }\n        };\n        MapCircle.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroyed.next();\n            this._destroyed.complete();\n            if (this.circle) {\n                this.circle.setMap(null);\n            }\n        };\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n         */\n        MapCircle.prototype.getBounds = function () {\n            this._assertInitialized();\n            return this.circle.getBounds();\n        };\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n         */\n        MapCircle.prototype.getCenter = function () {\n            this._assertInitialized();\n            return this.circle.getCenter();\n        };\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n         */\n        MapCircle.prototype.getDraggable = function () {\n            this._assertInitialized();\n            return this.circle.getDraggable();\n        };\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n         */\n        MapCircle.prototype.getEditable = function () {\n            this._assertInitialized();\n            return this.circle.getEditable();\n        };\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n         */\n        MapCircle.prototype.getRadius = function () {\n            this._assertInitialized();\n            return this.circle.getRadius();\n        };\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n         */\n        MapCircle.prototype.getVisible = function () {\n            this._assertInitialized();\n            return this.circle.getVisible();\n        };\n        MapCircle.prototype._combineOptions = function () {\n            return rxjs.combineLatest([this._options, this._center, this._radius])\n                .pipe(operators.map(function (_a) {\n                var _b = __read(_a, 3), options = _b[0], center = _b[1], radius = _b[2];\n                var combinedOptions = Object.assign(Object.assign({}, options), { center: center || options.center, radius: radius !== undefined ? radius : options.radius });\n                return combinedOptions;\n            }));\n        };\n        MapCircle.prototype._watchForOptionsChanges = function () {\n            var _this = this;\n            this._options.pipe(operators.takeUntil(this._destroyed)).subscribe(function (options) {\n                _this._assertInitialized();\n                _this.circle.setOptions(options);\n            });\n        };\n        MapCircle.prototype._watchForCenterChanges = function () {\n            var _this = this;\n            this._center.pipe(operators.takeUntil(this._destroyed)).subscribe(function (center) {\n                if (center) {\n                    _this._assertInitialized();\n                    _this.circle.setCenter(center);\n                }\n            });\n        };\n        MapCircle.prototype._watchForRadiusChanges = function () {\n            var _this = this;\n            this._radius.pipe(operators.takeUntil(this._destroyed)).subscribe(function (radius) {\n                if (radius !== undefined) {\n                    _this._assertInitialized();\n                    _this.circle.setRadius(radius);\n                }\n            });\n        };\n        MapCircle.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._map.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.circle) {\n                    throw Error('Cannot interact with a Google Map Circle before it has been ' +\n                        'initialized. Please wait for the Circle to load before trying to interact with it.');\n                }\n            }\n        };\n        return MapCircle;\n    }());\n    MapCircle.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-circle',\n                    exportAs: 'mapCircle',\n                },] }\n    ];\n    MapCircle.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapCircle.propDecorators = {\n        options: [{ type: core.Input }],\n        center: [{ type: core.Input }],\n        radius: [{ type: core.Input }],\n        centerChanged: [{ type: core.Output }],\n        circleClick: [{ type: core.Output }],\n        circleDblclick: [{ type: core.Output }],\n        circleDrag: [{ type: core.Output }],\n        circleDragend: [{ type: core.Output }],\n        circleDragstart: [{ type: core.Output }],\n        circleMousedown: [{ type: core.Output }],\n        circleMousemove: [{ type: core.Output }],\n        circleMouseout: [{ type: core.Output }],\n        circleMouseover: [{ type: core.Output }],\n        circleMouseup: [{ type: core.Output }],\n        radiusChanged: [{ type: core.Output }],\n        circleRightclick: [{ type: core.Output }]\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Angular component that renders a Google Maps Ground Overlay via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n     */\n    var MapGroundOverlay = /** @class */ (function () {\n        function MapGroundOverlay(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._opacity = new rxjs.BehaviorSubject(1);\n            this._url = new rxjs.BehaviorSubject('');\n            this._destroyed = new rxjs.Subject();\n            /** Whether the overlay is clickable */\n            this.clickable = false;\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay.click\n             */\n            this.mapClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/image-overlay\n             * #GroundOverlay.dblclick\n             */\n            this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n        }\n        Object.defineProperty(MapGroundOverlay.prototype, \"url\", {\n            /** URL of the image that will be shown in the overlay. */\n            set: function (url) {\n                this._url.next(url);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapGroundOverlay.prototype, \"opacity\", {\n            /** Opacity of the overlay. */\n            set: function (opacity) {\n                this._opacity.next(opacity);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapGroundOverlay.prototype.ngOnInit = function () {\n            var _this = this;\n            if (!this.bounds && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Image bounds are required');\n            }\n            if (this._map._isBrowser) {\n                this._combineOptions().pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    _this._ngZone.runOutsideAngular(function () {\n                        _this.groundOverlay =\n                            new google.maps.GroundOverlay(_this._url.getValue(), _this.bounds, options);\n                    });\n                    _this._assertInitialized();\n                    _this.groundOverlay.setMap(_this._map.googleMap);\n                    _this._eventManager.setTarget(_this.groundOverlay);\n                });\n                this._watchForOpacityChanges();\n                this._watchForUrlChanges();\n            }\n        };\n        MapGroundOverlay.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroyed.next();\n            this._destroyed.complete();\n            if (this.groundOverlay) {\n                this.groundOverlay.setMap(null);\n            }\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/image-overlay\n         * #GroundOverlay.getBounds\n         */\n        MapGroundOverlay.prototype.getBounds = function () {\n            this._assertInitialized();\n            return this.groundOverlay.getBounds();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/image-overlay\n         * #GroundOverlay.getOpacity\n         */\n        MapGroundOverlay.prototype.getOpacity = function () {\n            this._assertInitialized();\n            return this.groundOverlay.getOpacity();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/image-overlay\n         * #GroundOverlay.getUrl\n         */\n        MapGroundOverlay.prototype.getUrl = function () {\n            this._assertInitialized();\n            return this.groundOverlay.getUrl();\n        };\n        MapGroundOverlay.prototype._combineOptions = function () {\n            var _this = this;\n            return this._opacity.pipe(operators.map(function (opacity) {\n                var combinedOptions = {\n                    clickable: _this.clickable,\n                    opacity: opacity,\n                };\n                return combinedOptions;\n            }));\n        };\n        MapGroundOverlay.prototype._watchForOpacityChanges = function () {\n            var _this = this;\n            this._opacity.pipe(operators.takeUntil(this._destroyed)).subscribe(function (opacity) {\n                if (opacity) {\n                    _this._assertInitialized();\n                    _this.groundOverlay.setOpacity(opacity);\n                }\n            });\n        };\n        MapGroundOverlay.prototype._watchForUrlChanges = function () {\n            var _this = this;\n            this._url.pipe(operators.takeUntil(this._destroyed)).subscribe(function (url) {\n                _this._assertInitialized();\n                var overlay = _this.groundOverlay;\n                overlay.set('url', url);\n                // Google Maps only redraws the overlay if we re-set the map.\n                overlay.setMap(null);\n                overlay.setMap(_this._map.googleMap);\n            });\n        };\n        MapGroundOverlay.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._map.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.groundOverlay) {\n                    throw Error('Cannot interact with a Google Map GroundOverlay before it has been initialized. ' +\n                        'Please wait for the GroundOverlay to load before trying to interact with it.');\n                }\n            }\n        };\n        return MapGroundOverlay;\n    }());\n    MapGroundOverlay.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-ground-overlay',\n                    exportAs: 'mapGroundOverlay',\n                },] }\n    ];\n    MapGroundOverlay.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapGroundOverlay.propDecorators = {\n        url: [{ type: core.Input }],\n        bounds: [{ type: core.Input }],\n        clickable: [{ type: core.Input }],\n        opacity: [{ type: core.Input }],\n        mapClick: [{ type: core.Output }],\n        mapDblclick: [{ type: core.Output }]\n    };\n\n    /**\n     * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/info-window\n     */\n    var MapInfoWindow = /** @class */ (function () {\n        function MapInfoWindow(_googleMap, _elementRef, _ngZone) {\n            this._googleMap = _googleMap;\n            this._elementRef = _elementRef;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._options = new rxjs.BehaviorSubject({});\n            this._position = new rxjs.BehaviorSubject(undefined);\n            this._destroy = new rxjs.Subject();\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n             */\n            this.closeclick = this._eventManager.getLazyEmitter('closeclick');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/info-window\n             * #InfoWindow.content_changed\n             */\n            this.contentChanged = this._eventManager.getLazyEmitter('content_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n             */\n            this.domready = this._eventManager.getLazyEmitter('domready');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/info-window\n             * #InfoWindow.position_changed\n             */\n            this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/info-window\n             * #InfoWindow.zindex_changed\n             */\n            this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n        }\n        Object.defineProperty(MapInfoWindow.prototype, \"options\", {\n            set: function (options) {\n                this._options.next(options || {});\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapInfoWindow.prototype, \"position\", {\n            set: function (position) {\n                this._position.next(position);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapInfoWindow.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._googleMap._isBrowser) {\n                var combinedOptionsChanges = this._combineOptions();\n                combinedOptionsChanges.pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    _this._ngZone.runOutsideAngular(function () {\n                        _this.infoWindow = new google.maps.InfoWindow(options);\n                    });\n                    _this._eventManager.setTarget(_this.infoWindow);\n                });\n                this._watchForOptionsChanges();\n                this._watchForPositionChanges();\n            }\n        };\n        MapInfoWindow.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroy.next();\n            this._destroy.complete();\n            // If no info window has been created on the server, we do not try closing it.\n            // On the server, an info window cannot be created and this would cause errors.\n            if (this.infoWindow) {\n                this.close();\n            }\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n         */\n        MapInfoWindow.prototype.close = function () {\n            this._assertInitialized();\n            this.infoWindow.close();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n         */\n        MapInfoWindow.prototype.getContent = function () {\n            this._assertInitialized();\n            return this.infoWindow.getContent();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window\n         * #InfoWindow.getPosition\n         */\n        MapInfoWindow.prototype.getPosition = function () {\n            this._assertInitialized();\n            return this.infoWindow.getPosition();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n         */\n        MapInfoWindow.prototype.getZIndex = function () {\n            this._assertInitialized();\n            return this.infoWindow.getZIndex();\n        };\n        /**\n         * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n         * then the position property of the options input is used instead.\n         */\n        MapInfoWindow.prototype.open = function (anchor) {\n            this._assertInitialized();\n            var anchorObject = anchor ? anchor.getAnchor() : undefined;\n            // Prevent the info window from initializing if trying to reopen on the same anchor.\n            if (this.infoWindow.get('anchor') !== anchorObject) {\n                this._elementRef.nativeElement.style.display = '';\n                this.infoWindow.open(this._googleMap.googleMap, anchorObject);\n            }\n        };\n        MapInfoWindow.prototype._combineOptions = function () {\n            var _this = this;\n            return rxjs.combineLatest([this._options, this._position]).pipe(operators.map(function (_a) {\n                var _b = __read(_a, 2), options = _b[0], position = _b[1];\n                var combinedOptions = Object.assign(Object.assign({}, options), { position: position || options.position, content: _this._elementRef.nativeElement });\n                return combinedOptions;\n            }));\n        };\n        MapInfoWindow.prototype._watchForOptionsChanges = function () {\n            var _this = this;\n            this._options.pipe(operators.takeUntil(this._destroy)).subscribe(function (options) {\n                _this._assertInitialized();\n                _this.infoWindow.setOptions(options);\n            });\n        };\n        MapInfoWindow.prototype._watchForPositionChanges = function () {\n            var _this = this;\n            this._position.pipe(operators.takeUntil(this._destroy)).subscribe(function (position) {\n                if (position) {\n                    _this._assertInitialized();\n                    _this.infoWindow.setPosition(position);\n                }\n            });\n        };\n        MapInfoWindow.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._googleMap.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.infoWindow) {\n                    throw Error('Cannot interact with a Google Map Info Window before it has been ' +\n                        'initialized. Please wait for the Info Window to load before trying to interact with ' +\n                        'it.');\n                }\n            }\n        };\n        return MapInfoWindow;\n    }());\n    MapInfoWindow.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-info-window',\n                    exportAs: 'mapInfoWindow',\n                    host: { 'style': 'display: none' },\n                },] }\n    ];\n    MapInfoWindow.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.ElementRef },\n        { type: core.NgZone }\n    ]; };\n    MapInfoWindow.propDecorators = {\n        options: [{ type: core.Input }],\n        position: [{ type: core.Input }],\n        closeclick: [{ type: core.Output }],\n        contentChanged: [{ type: core.Output }],\n        domready: [{ type: core.Output }],\n        positionChanged: [{ type: core.Output }],\n        zindexChanged: [{ type: core.Output }]\n    };\n\n    /**\n     * Angular component that renders a Google Maps KML Layer via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n     */\n    var MapKmlLayer = /** @class */ (function () {\n        function MapKmlLayer(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._options = new rxjs.BehaviorSubject({});\n            this._url = new rxjs.BehaviorSubject('');\n            this._destroyed = new rxjs.Subject();\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.click\n             */\n            this.kmlClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/kml\n             * #KmlLayer.defaultviewport_changed\n             */\n            this.defaultviewportChanged = this._eventManager.getLazyEmitter('defaultviewport_changed');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.status_changed\n             */\n            this.statusChanged = this._eventManager.getLazyEmitter('status_changed');\n        }\n        Object.defineProperty(MapKmlLayer.prototype, \"options\", {\n            set: function (options) {\n                this._options.next(options || {});\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapKmlLayer.prototype, \"url\", {\n            set: function (url) {\n                this._url.next(url);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapKmlLayer.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._map._isBrowser) {\n                this._combineOptions().pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    _this._ngZone.runOutsideAngular(function () { return _this.kmlLayer = new google.maps.KmlLayer(options); });\n                    _this._assertInitialized();\n                    _this.kmlLayer.setMap(_this._map.googleMap);\n                    _this._eventManager.setTarget(_this.kmlLayer);\n                });\n                this._watchForOptionsChanges();\n                this._watchForUrlChanges();\n            }\n        };\n        MapKmlLayer.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroyed.next();\n            this._destroyed.complete();\n            if (this.kmlLayer) {\n                this.kmlLayer.setMap(null);\n            }\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getDefaultViewport\n         */\n        MapKmlLayer.prototype.getDefaultViewport = function () {\n            this._assertInitialized();\n            return this.kmlLayer.getDefaultViewport();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getMetadata\n         */\n        MapKmlLayer.prototype.getMetadata = function () {\n            this._assertInitialized();\n            return this.kmlLayer.getMetadata();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getStatus\n         */\n        MapKmlLayer.prototype.getStatus = function () {\n            this._assertInitialized();\n            return this.kmlLayer.getStatus();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getUrl\n         */\n        MapKmlLayer.prototype.getUrl = function () {\n            this._assertInitialized();\n            return this.kmlLayer.getUrl();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getZIndex\n         */\n        MapKmlLayer.prototype.getZIndex = function () {\n            this._assertInitialized();\n            return this.kmlLayer.getZIndex();\n        };\n        MapKmlLayer.prototype._combineOptions = function () {\n            return rxjs.combineLatest([this._options, this._url]).pipe(operators.map(function (_a) {\n                var _b = __read(_a, 2), options = _b[0], url = _b[1];\n                var combinedOptions = Object.assign(Object.assign({}, options), { url: url || options.url });\n                return combinedOptions;\n            }));\n        };\n        MapKmlLayer.prototype._watchForOptionsChanges = function () {\n            var _this = this;\n            this._options.pipe(operators.takeUntil(this._destroyed)).subscribe(function (options) {\n                if (_this.kmlLayer) {\n                    _this._assertInitialized();\n                    _this.kmlLayer.setOptions(options);\n                }\n            });\n        };\n        MapKmlLayer.prototype._watchForUrlChanges = function () {\n            var _this = this;\n            this._url.pipe(operators.takeUntil(this._destroyed)).subscribe(function (url) {\n                if (url && _this.kmlLayer) {\n                    _this._assertInitialized();\n                    _this.kmlLayer.setUrl(url);\n                }\n            });\n        };\n        MapKmlLayer.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._map.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.kmlLayer) {\n                    throw Error('Cannot interact with a Google Map KmlLayer before it has been ' +\n                        'initialized. Please wait for the KmlLayer to load before trying to interact with it.');\n                }\n            }\n        };\n        return MapKmlLayer;\n    }());\n    MapKmlLayer.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-kml-layer',\n                    exportAs: 'mapKmlLayer',\n                },] }\n    ];\n    MapKmlLayer.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapKmlLayer.propDecorators = {\n        options: [{ type: core.Input }],\n        url: [{ type: core.Input }],\n        kmlClick: [{ type: core.Output }],\n        defaultviewportChanged: [{ type: core.Output }],\n        statusChanged: [{ type: core.Output }]\n    };\n\n    /**\n     * Default options for the Google Maps marker component. Displays a marker\n     * at the Googleplex.\n     */\n    var DEFAULT_MARKER_OPTIONS = {\n        position: { lat: 37.421995, lng: -122.084092 },\n    };\n    /**\n     * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/marker\n     */\n    var MapMarker = /** @class */ (function () {\n        function MapMarker(_googleMap, _ngZone) {\n            this._googleMap = _googleMap;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._options = new rxjs.BehaviorSubject(DEFAULT_MARKER_OPTIONS);\n            this._title = new rxjs.BehaviorSubject(undefined);\n            this._position = new rxjs.BehaviorSubject(undefined);\n            this._label = new rxjs.BehaviorSubject(undefined);\n            this._clickable = new rxjs.BehaviorSubject(undefined);\n            this._destroy = new rxjs.Subject();\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n             */\n            this.animationChanged = this._eventManager.getLazyEmitter('animation_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n             */\n            this.mapClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n             */\n            this.clickableChanged = this._eventManager.getLazyEmitter('clickable_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n             */\n            this.cursorChanged = this._eventManager.getLazyEmitter('cursor_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n             */\n            this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n             */\n            this.mapDrag = this._eventManager.getLazyEmitter('drag');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n             */\n            this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n             */\n            this.draggableChanged = this._eventManager.getLazyEmitter('draggable_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n             */\n            this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n             */\n            this.flatChanged = this._eventManager.getLazyEmitter('flat_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n             */\n            this.iconChanged = this._eventManager.getLazyEmitter('icon_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n             */\n            this.mapMousedown = this._eventManager.getLazyEmitter('mousedown');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n             */\n            this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n             */\n            this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n             */\n            this.mapMouseup = this._eventManager.getLazyEmitter('mouseup');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n             */\n            this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n             */\n            this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n             */\n            this.shapeChanged = this._eventManager.getLazyEmitter('shape_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n             */\n            this.titleChanged = this._eventManager.getLazyEmitter('title_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n             */\n            this.visibleChanged = this._eventManager.getLazyEmitter('visible_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n             */\n            this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n        }\n        Object.defineProperty(MapMarker.prototype, \"options\", {\n            set: function (options) {\n                this._options.next(options || DEFAULT_MARKER_OPTIONS);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarker.prototype, \"title\", {\n            set: function (title) {\n                this._title.next(title);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarker.prototype, \"position\", {\n            set: function (position) {\n                this._position.next(position);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarker.prototype, \"label\", {\n            set: function (label) {\n                this._label.next(label);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarker.prototype, \"clickable\", {\n            set: function (clickable) {\n                this._clickable.next(clickable);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapMarker.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._googleMap._isBrowser) {\n                this._combineOptions().pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    _this._ngZone.runOutsideAngular(function () { return _this.marker = new google.maps.Marker(options); });\n                    _this._assertInitialized();\n                    _this.marker.setMap(_this._googleMap.googleMap);\n                    _this._eventManager.setTarget(_this.marker);\n                });\n                this._watchForOptionsChanges();\n                this._watchForTitleChanges();\n                this._watchForPositionChanges();\n                this._watchForLabelChanges();\n                this._watchForClickableChanges();\n            }\n        };\n        MapMarker.prototype.ngOnDestroy = function () {\n            this._destroy.next();\n            this._destroy.complete();\n            this._eventManager.destroy();\n            if (this.marker) {\n                this.marker.setMap(null);\n            }\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n         */\n        MapMarker.prototype.getAnimation = function () {\n            this._assertInitialized();\n            return this.marker.getAnimation() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n         */\n        MapMarker.prototype.getClickable = function () {\n            this._assertInitialized();\n            return this.marker.getClickable();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n         */\n        MapMarker.prototype.getCursor = function () {\n            this._assertInitialized();\n            return this.marker.getCursor() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n         */\n        MapMarker.prototype.getDraggable = function () {\n            this._assertInitialized();\n            return !!this.marker.getDraggable();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n         */\n        MapMarker.prototype.getIcon = function () {\n            this._assertInitialized();\n            return this.marker.getIcon() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n         */\n        MapMarker.prototype.getLabel = function () {\n            this._assertInitialized();\n            return this.marker.getLabel() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n         */\n        MapMarker.prototype.getOpacity = function () {\n            this._assertInitialized();\n            return this.marker.getOpacity() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n         */\n        MapMarker.prototype.getPosition = function () {\n            this._assertInitialized();\n            return this.marker.getPosition() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n         */\n        MapMarker.prototype.getShape = function () {\n            this._assertInitialized();\n            return this.marker.getShape() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n         */\n        MapMarker.prototype.getTitle = function () {\n            this._assertInitialized();\n            return this.marker.getTitle() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n         */\n        MapMarker.prototype.getVisible = function () {\n            this._assertInitialized();\n            return this.marker.getVisible();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n         */\n        MapMarker.prototype.getZIndex = function () {\n            this._assertInitialized();\n            return this.marker.getZIndex() || null;\n        };\n        /** Gets the anchor point that can be used to attach other Google Maps objects. */\n        MapMarker.prototype.getAnchor = function () {\n            this._assertInitialized();\n            return this.marker;\n        };\n        MapMarker.prototype._combineOptions = function () {\n            var _this = this;\n            return rxjs.combineLatest([this._options, this._title, this._position, this._label, this._clickable])\n                .pipe(operators.map(function (_a) {\n                var _b = __read(_a, 5), options = _b[0], title = _b[1], position = _b[2], label = _b[3], clickable = _b[4];\n                var combinedOptions = Object.assign(Object.assign({}, options), { title: title || options.title, position: position || options.position, label: label || options.label, clickable: clickable !== undefined ? clickable : options.clickable, map: _this._googleMap.googleMap });\n                return combinedOptions;\n            }));\n        };\n        MapMarker.prototype._watchForOptionsChanges = function () {\n            var _this = this;\n            this._options.pipe(operators.takeUntil(this._destroy)).subscribe(function (options) {\n                if (_this.marker) {\n                    _this._assertInitialized();\n                    _this.marker.setOptions(options);\n                }\n            });\n        };\n        MapMarker.prototype._watchForTitleChanges = function () {\n            var _this = this;\n            this._title.pipe(operators.takeUntil(this._destroy)).subscribe(function (title) {\n                if (_this.marker && title !== undefined) {\n                    _this._assertInitialized();\n                    _this.marker.setTitle(title);\n                }\n            });\n        };\n        MapMarker.prototype._watchForPositionChanges = function () {\n            var _this = this;\n            this._position.pipe(operators.takeUntil(this._destroy)).subscribe(function (position) {\n                if (_this.marker && position) {\n                    _this._assertInitialized();\n                    _this.marker.setPosition(position);\n                }\n            });\n        };\n        MapMarker.prototype._watchForLabelChanges = function () {\n            var _this = this;\n            this._label.pipe(operators.takeUntil(this._destroy)).subscribe(function (label) {\n                if (_this.marker && label !== undefined) {\n                    _this._assertInitialized();\n                    _this.marker.setLabel(label);\n                }\n            });\n        };\n        MapMarker.prototype._watchForClickableChanges = function () {\n            var _this = this;\n            this._clickable.pipe(operators.takeUntil(this._destroy)).subscribe(function (clickable) {\n                if (_this.marker && clickable !== undefined) {\n                    _this._assertInitialized();\n                    _this.marker.setClickable(clickable);\n                }\n            });\n        };\n        MapMarker.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._googleMap.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.marker) {\n                    throw Error('Cannot interact with a Google Map Marker before it has been ' +\n                        'initialized. Please wait for the Marker to load before trying to interact with it.');\n                }\n            }\n        };\n        return MapMarker;\n    }());\n    MapMarker.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-marker',\n                    exportAs: 'mapMarker',\n                },] }\n    ];\n    MapMarker.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapMarker.propDecorators = {\n        options: [{ type: core.Input }],\n        title: [{ type: core.Input }],\n        position: [{ type: core.Input }],\n        label: [{ type: core.Input }],\n        clickable: [{ type: core.Input }],\n        animationChanged: [{ type: core.Output }],\n        mapClick: [{ type: core.Output }],\n        clickableChanged: [{ type: core.Output }],\n        cursorChanged: [{ type: core.Output }],\n        mapDblclick: [{ type: core.Output }],\n        mapDrag: [{ type: core.Output }],\n        mapDragend: [{ type: core.Output }],\n        draggableChanged: [{ type: core.Output }],\n        mapDragstart: [{ type: core.Output }],\n        flatChanged: [{ type: core.Output }],\n        iconChanged: [{ type: core.Output }],\n        mapMousedown: [{ type: core.Output }],\n        mapMouseout: [{ type: core.Output }],\n        mapMouseover: [{ type: core.Output }],\n        mapMouseup: [{ type: core.Output }],\n        positionChanged: [{ type: core.Output }],\n        mapRightclick: [{ type: core.Output }],\n        shapeChanged: [{ type: core.Output }],\n        titleChanged: [{ type: core.Output }],\n        visibleChanged: [{ type: core.Output }],\n        zindexChanged: [{ type: core.Output }]\n    };\n\n    /**\n     * Angular component that renders a Google Maps Polygon via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n     */\n    var MapPolygon = /** @class */ (function () {\n        function MapPolygon(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._options = new rxjs.BehaviorSubject({});\n            this._paths = new rxjs.BehaviorSubject(undefined);\n            this._destroyed = new rxjs.Subject();\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.click\n             */\n            this.polygonClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dblclick\n             */\n            this.polygonDblclick = this._eventManager.getLazyEmitter('dblclick');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.drag\n             */\n            this.polygonDrag = this._eventManager.getLazyEmitter('drag');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragend\n             */\n            this.polygonDragend = this._eventManager.getLazyEmitter('dragend');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragstart\n             */\n            this.polygonDragstart = this._eventManager.getLazyEmitter('dragstart');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousedown\n             */\n            this.polygonMousedown = this._eventManager.getLazyEmitter('mousedown');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousemove\n             */\n            this.polygonMousemove = this._eventManager.getLazyEmitter('mousemove');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseout\n             */\n            this.polygonMouseout = this._eventManager.getLazyEmitter('mouseout');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseover\n             */\n            this.polygonMouseover = this._eventManager.getLazyEmitter('mouseover');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseup\n             */\n            this.polygonMouseup = this._eventManager.getLazyEmitter('mouseup');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.rightclick\n             */\n            this.polygonRightclick = this._eventManager.getLazyEmitter('rightclick');\n        }\n        Object.defineProperty(MapPolygon.prototype, \"options\", {\n            set: function (options) {\n                this._options.next(options || {});\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapPolygon.prototype, \"paths\", {\n            set: function (paths) {\n                this._paths.next(paths);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapPolygon.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._map._isBrowser) {\n                this._combineOptions().pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    _this._ngZone.runOutsideAngular(function () {\n                        _this.polygon = new google.maps.Polygon(options);\n                    });\n                    _this._assertInitialized();\n                    _this.polygon.setMap(_this._map.googleMap);\n                    _this._eventManager.setTarget(_this.polygon);\n                });\n                this._watchForOptionsChanges();\n                this._watchForPathChanges();\n            }\n        };\n        MapPolygon.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroyed.next();\n            this._destroyed.complete();\n            if (this.polygon) {\n                this.polygon.setMap(null);\n            }\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getDraggable\n         */\n        MapPolygon.prototype.getDraggable = function () {\n            this._assertInitialized();\n            return this.polygon.getDraggable();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getEditable\n         */\n        MapPolygon.prototype.getEditable = function () {\n            this._assertInitialized();\n            return this.polygon.getEditable();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPath\n         */\n        MapPolygon.prototype.getPath = function () {\n            this._assertInitialized();\n            return this.polygon.getPath();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPaths\n         */\n        MapPolygon.prototype.getPaths = function () {\n            this._assertInitialized();\n            return this.polygon.getPaths();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getVisible\n         */\n        MapPolygon.prototype.getVisible = function () {\n            this._assertInitialized();\n            return this.polygon.getVisible();\n        };\n        MapPolygon.prototype._combineOptions = function () {\n            return rxjs.combineLatest([this._options, this._paths]).pipe(operators.map(function (_a) {\n                var _b = __read(_a, 2), options = _b[0], paths = _b[1];\n                var combinedOptions = Object.assign(Object.assign({}, options), { paths: paths || options.paths });\n                return combinedOptions;\n            }));\n        };\n        MapPolygon.prototype._watchForOptionsChanges = function () {\n            var _this = this;\n            this._options.pipe(operators.takeUntil(this._destroyed)).subscribe(function (options) {\n                _this._assertInitialized();\n                _this.polygon.setOptions(options);\n            });\n        };\n        MapPolygon.prototype._watchForPathChanges = function () {\n            var _this = this;\n            this._paths.pipe(operators.takeUntil(this._destroyed)).subscribe(function (paths) {\n                if (paths) {\n                    _this._assertInitialized();\n                    _this.polygon.setPaths(paths);\n                }\n            });\n        };\n        MapPolygon.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._map.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.polygon) {\n                    throw Error('Cannot interact with a Google Map Polygon before it has been ' +\n                        'initialized. Please wait for the Polygon to load before trying to interact with it.');\n                }\n            }\n        };\n        return MapPolygon;\n    }());\n    MapPolygon.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-polygon',\n                    exportAs: 'mapPolygon',\n                },] }\n    ];\n    MapPolygon.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapPolygon.propDecorators = {\n        options: [{ type: core.Input }],\n        paths: [{ type: core.Input }],\n        polygonClick: [{ type: core.Output }],\n        polygonDblclick: [{ type: core.Output }],\n        polygonDrag: [{ type: core.Output }],\n        polygonDragend: [{ type: core.Output }],\n        polygonDragstart: [{ type: core.Output }],\n        polygonMousedown: [{ type: core.Output }],\n        polygonMousemove: [{ type: core.Output }],\n        polygonMouseout: [{ type: core.Output }],\n        polygonMouseover: [{ type: core.Output }],\n        polygonMouseup: [{ type: core.Output }],\n        polygonRightclick: [{ type: core.Output }]\n    };\n\n    /**\n     * Angular component that renders a Google Maps Polyline via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n     */\n    var MapPolyline = /** @class */ (function () {\n        function MapPolyline(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._options = new rxjs.BehaviorSubject({});\n            this._path = new rxjs.BehaviorSubject(undefined);\n            this._destroyed = new rxjs.Subject();\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.click\n             */\n            this.polylineClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dblclick\n             */\n            this.polylineDblclick = this._eventManager.getLazyEmitter('dblclick');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.drag\n             */\n            this.polylineDrag = this._eventManager.getLazyEmitter('drag');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragend\n             */\n            this.polylineDragend = this._eventManager.getLazyEmitter('dragend');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragstart\n             */\n            this.polylineDragstart = this._eventManager.getLazyEmitter('dragstart');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousedown\n             */\n            this.polylineMousedown = this._eventManager.getLazyEmitter('mousedown');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousemove\n             */\n            this.polylineMousemove = this._eventManager.getLazyEmitter('mousemove');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseout\n             */\n            this.polylineMouseout = this._eventManager.getLazyEmitter('mouseout');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseover\n             */\n            this.polylineMouseover = this._eventManager.getLazyEmitter('mouseover');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseup\n             */\n            this.polylineMouseup = this._eventManager.getLazyEmitter('mouseup');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.rightclick\n             */\n            this.polylineRightclick = this._eventManager.getLazyEmitter('rightclick');\n        }\n        Object.defineProperty(MapPolyline.prototype, \"options\", {\n            set: function (options) {\n                this._options.next(options || {});\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapPolyline.prototype, \"path\", {\n            set: function (path) {\n                this._path.next(path);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapPolyline.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._map._isBrowser) {\n                this._combineOptions().pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    _this._ngZone.runOutsideAngular(function () { return _this.polyline = new google.maps.Polyline(options); });\n                    _this._assertInitialized();\n                    _this.polyline.setMap(_this._map.googleMap);\n                    _this._eventManager.setTarget(_this.polyline);\n                });\n                this._watchForOptionsChanges();\n                this._watchForPathChanges();\n            }\n        };\n        MapPolyline.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroyed.next();\n            this._destroyed.complete();\n            if (this.polyline) {\n                this.polyline.setMap(null);\n            }\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getDraggable\n         */\n        MapPolyline.prototype.getDraggable = function () {\n            this._assertInitialized();\n            return this.polyline.getDraggable();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getEditable\n         */\n        MapPolyline.prototype.getEditable = function () {\n            this._assertInitialized();\n            return this.polyline.getEditable();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getPath\n         */\n        MapPolyline.prototype.getPath = function () {\n            this._assertInitialized();\n            return this.polyline.getPath();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getVisible\n         */\n        MapPolyline.prototype.getVisible = function () {\n            this._assertInitialized();\n            return this.polyline.getVisible();\n        };\n        MapPolyline.prototype._combineOptions = function () {\n            return rxjs.combineLatest([this._options, this._path]).pipe(operators.map(function (_a) {\n                var _b = __read(_a, 2), options = _b[0], path = _b[1];\n                var combinedOptions = Object.assign(Object.assign({}, options), { path: path || options.path });\n                return combinedOptions;\n            }));\n        };\n        MapPolyline.prototype._watchForOptionsChanges = function () {\n            var _this = this;\n            this._options.pipe(operators.takeUntil(this._destroyed)).subscribe(function (options) {\n                _this._assertInitialized();\n                _this.polyline.setOptions(options);\n            });\n        };\n        MapPolyline.prototype._watchForPathChanges = function () {\n            var _this = this;\n            this._path.pipe(operators.takeUntil(this._destroyed)).subscribe(function (path) {\n                if (path) {\n                    _this._assertInitialized();\n                    _this.polyline.setPath(path);\n                }\n            });\n        };\n        MapPolyline.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._map.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.polyline) {\n                    throw Error('Cannot interact with a Google Map Polyline before it has been ' +\n                        'initialized. Please wait for the Polyline to load before trying to interact with it.');\n                }\n            }\n        };\n        return MapPolyline;\n    }());\n    MapPolyline.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-polyline',\n                    exportAs: 'mapPolyline',\n                },] }\n    ];\n    MapPolyline.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapPolyline.propDecorators = {\n        options: [{ type: core.Input }],\n        path: [{ type: core.Input }],\n        polylineClick: [{ type: core.Output }],\n        polylineDblclick: [{ type: core.Output }],\n        polylineDrag: [{ type: core.Output }],\n        polylineDragend: [{ type: core.Output }],\n        polylineDragstart: [{ type: core.Output }],\n        polylineMousedown: [{ type: core.Output }],\n        polylineMousemove: [{ type: core.Output }],\n        polylineMouseout: [{ type: core.Output }],\n        polylineMouseover: [{ type: core.Output }],\n        polylineMouseup: [{ type: core.Output }],\n        polylineRightclick: [{ type: core.Output }]\n    };\n\n    /**\n     * Angular component that renders a Google Maps Rectangle via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n     */\n    var MapRectangle = /** @class */ (function () {\n        function MapRectangle(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._options = new rxjs.BehaviorSubject({});\n            this._bounds = new rxjs.BehaviorSubject(undefined);\n            this._destroyed = new rxjs.Subject();\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.boundsChanged\n             */\n            this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.click\n             */\n            this.rectangleClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dblclick\n             */\n            this.rectangleDblclick = this._eventManager.getLazyEmitter('dblclick');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.drag\n             */\n            this.rectangleDrag = this._eventManager.getLazyEmitter('drag');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragend\n             */\n            this.rectangleDragend = this._eventManager.getLazyEmitter('dragend');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragstart\n             */\n            this.rectangleDragstart = this._eventManager.getLazyEmitter('dragstart');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousedown\n             */\n            this.rectangleMousedown = this._eventManager.getLazyEmitter('mousedown');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousemove\n             */\n            this.rectangleMousemove = this._eventManager.getLazyEmitter('mousemove');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseout\n             */\n            this.rectangleMouseout = this._eventManager.getLazyEmitter('mouseout');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseover\n             */\n            this.rectangleMouseover = this._eventManager.getLazyEmitter('mouseover');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseup\n             */\n            this.rectangleMouseup = this._eventManager.getLazyEmitter('mouseup');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.rightclick\n             */\n            this.rectangleRightclick = this._eventManager.getLazyEmitter('rightclick');\n        }\n        Object.defineProperty(MapRectangle.prototype, \"options\", {\n            set: function (options) {\n                this._options.next(options || {});\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapRectangle.prototype, \"bounds\", {\n            set: function (bounds) {\n                this._bounds.next(bounds);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapRectangle.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._map._isBrowser) {\n                this._combineOptions().pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    _this._ngZone.runOutsideAngular(function () {\n                        _this.rectangle = new google.maps.Rectangle(options);\n                    });\n                    _this._assertInitialized();\n                    _this.rectangle.setMap(_this._map.googleMap);\n                    _this._eventManager.setTarget(_this.rectangle);\n                });\n                this._watchForOptionsChanges();\n                this._watchForBoundsChanges();\n            }\n        };\n        MapRectangle.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroyed.next();\n            this._destroyed.complete();\n            if (this.rectangle) {\n                this.rectangle.setMap(null);\n            }\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getBounds\n         */\n        MapRectangle.prototype.getBounds = function () {\n            this._assertInitialized();\n            return this.rectangle.getBounds();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getDraggable\n         */\n        MapRectangle.prototype.getDraggable = function () {\n            this._assertInitialized();\n            return this.rectangle.getDraggable();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getEditable\n         */\n        MapRectangle.prototype.getEditable = function () {\n            this._assertInitialized();\n            return this.rectangle.getEditable();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getVisible\n         */\n        MapRectangle.prototype.getVisible = function () {\n            this._assertInitialized();\n            return this.rectangle.getVisible();\n        };\n        MapRectangle.prototype._combineOptions = function () {\n            return rxjs.combineLatest([this._options, this._bounds]).pipe(operators.map(function (_a) {\n                var _b = __read(_a, 2), options = _b[0], bounds = _b[1];\n                var combinedOptions = Object.assign(Object.assign({}, options), { bounds: bounds || options.bounds });\n                return combinedOptions;\n            }));\n        };\n        MapRectangle.prototype._watchForOptionsChanges = function () {\n            var _this = this;\n            this._options.pipe(operators.takeUntil(this._destroyed)).subscribe(function (options) {\n                _this._assertInitialized();\n                _this.rectangle.setOptions(options);\n            });\n        };\n        MapRectangle.prototype._watchForBoundsChanges = function () {\n            var _this = this;\n            this._bounds.pipe(operators.takeUntil(this._destroyed)).subscribe(function (bounds) {\n                if (bounds) {\n                    _this._assertInitialized();\n                    _this.rectangle.setBounds(bounds);\n                }\n            });\n        };\n        MapRectangle.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._map.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.rectangle) {\n                    throw Error('Cannot interact with a Google Map Rectangle before it has been initialized. ' +\n                        'Please wait for the Rectangle to load before trying to interact with it.');\n                }\n            }\n        };\n        return MapRectangle;\n    }());\n    MapRectangle.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-rectangle',\n                    exportAs: 'mapRectangle',\n                },] }\n    ];\n    MapRectangle.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapRectangle.propDecorators = {\n        options: [{ type: core.Input }],\n        bounds: [{ type: core.Input }],\n        boundsChanged: [{ type: core.Output }],\n        rectangleClick: [{ type: core.Output }],\n        rectangleDblclick: [{ type: core.Output }],\n        rectangleDrag: [{ type: core.Output }],\n        rectangleDragend: [{ type: core.Output }],\n        rectangleDragstart: [{ type: core.Output }],\n        rectangleMousedown: [{ type: core.Output }],\n        rectangleMousemove: [{ type: core.Output }],\n        rectangleMouseout: [{ type: core.Output }],\n        rectangleMouseover: [{ type: core.Output }],\n        rectangleMouseup: [{ type: core.Output }],\n        rectangleRightclick: [{ type: core.Output }]\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Angular component that renders a Google Maps Traffic Layer via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n     */\n    var MapTrafficLayer = /** @class */ (function () {\n        function MapTrafficLayer(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n            this._autoRefresh = new rxjs.BehaviorSubject(true);\n            this._destroyed = new rxjs.Subject();\n        }\n        Object.defineProperty(MapTrafficLayer.prototype, \"autoRefresh\", {\n            /**\n             * Whether the traffic layer refreshes with updated information automatically.\n             */\n            set: function (autoRefresh) {\n                this._autoRefresh.next(autoRefresh);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapTrafficLayer.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._map._isBrowser) {\n                this._combineOptions().pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    _this._ngZone.runOutsideAngular(function () {\n                        _this.trafficLayer = new google.maps.TrafficLayer(options);\n                    });\n                    _this._assertInitialized();\n                    _this.trafficLayer.setMap(_this._map.googleMap);\n                });\n                this._watchForAutoRefreshChanges();\n            }\n        };\n        MapTrafficLayer.prototype.ngOnDestroy = function () {\n            this._destroyed.next();\n            this._destroyed.complete();\n            if (this.trafficLayer) {\n                this.trafficLayer.setMap(null);\n            }\n        };\n        MapTrafficLayer.prototype._combineOptions = function () {\n            return this._autoRefresh.pipe(operators.map(function (autoRefresh) {\n                var combinedOptions = { autoRefresh: autoRefresh };\n                return combinedOptions;\n            }));\n        };\n        MapTrafficLayer.prototype._watchForAutoRefreshChanges = function () {\n            var _this = this;\n            this._combineOptions().pipe(operators.takeUntil(this._destroyed)).subscribe(function (options) {\n                _this._assertInitialized();\n                _this.trafficLayer.setOptions(options);\n            });\n        };\n        MapTrafficLayer.prototype._assertInitialized = function () {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.trafficLayer) {\n                throw Error('Cannot interact with a Google Map Traffic Layer before it has been initialized. ' +\n                    'Please wait for the Traffic Layer to load before trying to interact with it.');\n            }\n        };\n        return MapTrafficLayer;\n    }());\n    MapTrafficLayer.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-traffic-layer',\n                    exportAs: 'mapTrafficLayer',\n                },] }\n    ];\n    MapTrafficLayer.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapTrafficLayer.propDecorators = {\n        autoRefresh: [{ type: core.Input }]\n    };\n\n    /**\n     * Angular component that renders a Google Maps Transit Layer via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n     */\n    var MapTransitLayer = /** @class */ (function (_super) {\n        __extends(MapTransitLayer, _super);\n        function MapTransitLayer() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MapTransitLayer.prototype._initializeObject = function () {\n            this.transitLayer = new google.maps.TransitLayer();\n        };\n        MapTransitLayer.prototype._setMap = function () {\n            this._assertLayerInitialized();\n            this.transitLayer.setMap(this._map.googleMap);\n        };\n        MapTransitLayer.prototype._unsetMap = function () {\n            if (this.transitLayer) {\n                this.transitLayer.setMap(null);\n            }\n        };\n        MapTransitLayer.prototype._assertLayerInitialized = function () {\n            if (!this.transitLayer) {\n                throw Error('Cannot interact with a Google Map Transit Layer before it has been initialized. ' +\n                    'Please wait for the Transit Layer to load before trying to interact with it.');\n            }\n        };\n        return MapTransitLayer;\n    }(MapBaseLayer));\n    MapTransitLayer.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-transit-layer',\n                    exportAs: 'mapTransitLayer',\n                },] }\n    ];\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENTS = [\n        GoogleMap,\n        MapBaseLayer,\n        MapBicyclingLayer,\n        MapCircle,\n        MapGroundOverlay,\n        MapInfoWindow,\n        MapKmlLayer,\n        MapMarker,\n        MapPolygon,\n        MapPolyline,\n        MapRectangle,\n        MapTrafficLayer,\n        MapTransitLayer,\n    ];\n    var GoogleMapsModule = /** @class */ (function () {\n        function GoogleMapsModule() {\n        }\n        return GoogleMapsModule;\n    }());\n    GoogleMapsModule.decorators = [\n        { type: core.NgModule, args: [{\n                    declarations: COMPONENTS,\n                    exports: COMPONENTS,\n                },] }\n    ];\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.GoogleMap = GoogleMap;\n    exports.GoogleMapsModule = GoogleMapsModule;\n    exports.MapBaseLayer = MapBaseLayer;\n    exports.MapBicyclingLayer = MapBicyclingLayer;\n    exports.MapCircle = MapCircle;\n    exports.MapGroundOverlay = MapGroundOverlay;\n    exports.MapInfoWindow = MapInfoWindow;\n    exports.MapKmlLayer = MapKmlLayer;\n    exports.MapMarker = MapMarker;\n    exports.MapPolygon = MapPolygon;\n    exports.MapPolyline = MapPolyline;\n    exports.MapRectangle = MapRectangle;\n    exports.MapTrafficLayer = MapTrafficLayer;\n    exports.MapTransitLayer = MapTransitLayer;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=google-maps.umd.js.map\n"]}