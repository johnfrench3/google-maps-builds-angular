{"version":3,"file":"google-maps.mjs","sources":["../../../../../../src/google-maps/map-event-manager.ts","../../../../../../src/google-maps/google-map/google-map.ts","../../../../../../src/google-maps/map-base-layer.ts","../../../../../../src/google-maps/map-bicycling-layer/map-bicycling-layer.ts","../../../../../../src/google-maps/map-circle/map-circle.ts","../../../../../../src/google-maps/map-directions-renderer/map-directions-renderer.ts","../../../../../../src/google-maps/map-ground-overlay/map-ground-overlay.ts","../../../../../../src/google-maps/map-info-window/map-info-window.ts","../../../../../../src/google-maps/map-kml-layer/map-kml-layer.ts","../../../../../../src/google-maps/map-marker/map-marker.ts","../../../../../../src/google-maps/map-marker-clusterer/map-marker-clusterer.ts","../../../../../../src/google-maps/map-polygon/map-polygon.ts","../../../../../../src/google-maps/map-polyline/map-polyline.ts","../../../../../../src/google-maps/map-rectangle/map-rectangle.ts","../../../../../../src/google-maps/map-traffic-layer/map-traffic-layer.ts","../../../../../../src/google-maps/map-transit-layer/map-transit-layer.ts","../../../../../../src/google-maps/map-heatmap-layer/map-heatmap-layer.ts","../../../../../../src/google-maps/google-maps-module.ts","../../../../../../src/google-maps/map-directions-renderer/map-directions-service.ts","../../../../../../src/google-maps/map-geocoder/map-geocoder.ts","../../../../../../src/google-maps/public-api.ts","../../../../../../src/google-maps/index.ts","../../../../../../src/google-maps/google-maps_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgZone} from '@angular/core';\nimport {BehaviorSubject, Observable, Subscriber} from 'rxjs';\nimport {switchMap} from 'rxjs/operators';\n\ntype MapEventManagerTarget =\n  | {\n      addListener: (\n        name: string,\n        callback: (...args: any[]) => void,\n      ) => google.maps.MapsEventListener;\n    }\n  | undefined;\n\n/** Manages event on a Google Maps object, ensuring that events are added only when necessary. */\nexport class MapEventManager {\n  /** Pending listeners that were added before the target was set. */\n  private _pending: {observable: Observable<any>; observer: Subscriber<any>}[] = [];\n  private _listeners: google.maps.MapsEventListener[] = [];\n  private _targetStream = new BehaviorSubject<MapEventManagerTarget>(undefined);\n\n  /** Clears all currently-registered event listeners. */\n  private _clearListeners() {\n    for (const listener of this._listeners) {\n      listener.remove();\n    }\n\n    this._listeners = [];\n  }\n\n  constructor(private _ngZone: NgZone) {}\n\n  /** Gets an observable that adds an event listener to the map when a consumer subscribes to it. */\n  getLazyEmitter<T>(name: string): Observable<T> {\n    return this._targetStream.pipe(\n      switchMap(target => {\n        const observable = new Observable<T>(observer => {\n          // If the target hasn't been initialized yet, cache the observer so it can be added later.\n          if (!target) {\n            this._pending.push({observable, observer});\n            return undefined;\n          }\n\n          const listener = target.addListener(name, (event: T) => {\n            this._ngZone.run(() => observer.next(event));\n          });\n          this._listeners.push(listener);\n          return () => listener.remove();\n        });\n\n        return observable;\n      }),\n    );\n  }\n\n  /** Sets the current target that the manager should bind events to. */\n  setTarget(target: MapEventManagerTarget) {\n    const currentTarget = this._targetStream.value;\n\n    if (target === currentTarget) {\n      return;\n    }\n\n    // Clear the listeners from the pre-existing target.\n    if (currentTarget) {\n      this._clearListeners();\n      this._pending = [];\n    }\n\n    this._targetStream.next(target);\n\n    // Add the listeners that were bound before the map was initialized.\n    this._pending.forEach(subscriber => subscriber.observable.subscribe(subscriber.observer));\n    this._pending = [];\n  }\n\n  /** Destroys the manager and clears the event listeners. */\n  destroy() {\n    this._clearListeners();\n    this._pending = [];\n    this._targetStream.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"google.maps\" />\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n  Inject,\n  PLATFORM_ID,\n  NgZone,\n  SimpleChanges,\n  EventEmitter,\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\nimport {Observable} from 'rxjs';\nimport {MapEventManager} from '../map-event-manager';\n\ninterface GoogleMapsWindow extends Window {\n  gm_authFailure?: () => void;\n  google?: typeof google;\n}\n\n/** default options set to the Googleplex */\nexport const DEFAULT_OPTIONS: google.maps.MapOptions = {\n  center: {lat: 37.421995, lng: -122.084092},\n  zoom: 17,\n  // Note: the type conversion here isn't necessary for our CI, but it resolves a g3 failure.\n  mapTypeId: 'roadmap' as unknown as google.maps.MapTypeId,\n};\n\n/** Arbitrary default height for the map element */\nexport const DEFAULT_HEIGHT = '500px';\n/** Arbitrary default width for the map element */\nexport const DEFAULT_WIDTH = '500px';\n\n/**\n * Angular component that renders a Google Map via the Google Maps JavaScript\n * API.\n * @see https://developers.google.com/maps/documentation/javascript/reference/\n */\n@Component({\n  selector: 'google-map',\n  exportAs: 'googleMap',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<div class=\"map-container\"></div><ng-content></ng-content>',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class GoogleMap implements OnChanges, OnInit, OnDestroy {\n  private _eventManager: MapEventManager = new MapEventManager(this._ngZone);\n  private _mapEl: HTMLElement;\n  private _existingAuthFailureCallback: GoogleMapsWindow['gm_authFailure'];\n\n  /**\n   * The underlying google.maps.Map object\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/map#Map\n   */\n  googleMap?: google.maps.Map;\n\n  /** Whether we're currently rendering inside a browser. */\n  _isBrowser: boolean;\n\n  /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\n  @Input() height: string | number | null = DEFAULT_HEIGHT;\n\n  /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\n  @Input() width: string | number | null = DEFAULT_WIDTH;\n\n  /**\n   * Type of map that should be rendered. E.g. hybrid map, terrain map etc.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/map#MapTypeId\n   */\n  @Input() mapTypeId: google.maps.MapTypeId | undefined;\n\n  @Input()\n  set center(center: google.maps.LatLngLiteral | google.maps.LatLng) {\n    this._center = center;\n  }\n  private _center: google.maps.LatLngLiteral | google.maps.LatLng;\n\n  @Input()\n  set zoom(zoom: number) {\n    this._zoom = zoom;\n  }\n  private _zoom: number;\n\n  @Input()\n  set options(options: google.maps.MapOptions) {\n    this._options = options || DEFAULT_OPTIONS;\n  }\n  private _options = DEFAULT_OPTIONS;\n\n  /** Event emitted when the map is initialized. */\n  @Output() readonly mapInitialized: EventEmitter<google.maps.Map> =\n    new EventEmitter<google.maps.Map>();\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/events#auth-errors\n   */\n  @Output() readonly authFailure: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n   */\n  @Output() readonly boundsChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('bounds_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n   */\n  @Output() readonly centerChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('center_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n   */\n  @Output() readonly mapClick: Observable<google.maps.MapMouseEvent | google.maps.IconMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent | google.maps.IconMouseEvent>(\n      'click',\n    );\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n   */\n  @Output() readonly mapDblclick: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dblclick');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n   */\n  @Output() readonly mapDrag: Observable<void> = this._eventManager.getLazyEmitter<void>('drag');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n   */\n  @Output() readonly mapDragend: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('dragend');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n   */\n  @Output() readonly mapDragstart: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('dragstart');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n   */\n  @Output() readonly headingChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('heading_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n   */\n  @Output() readonly idle: Observable<void> = this._eventManager.getLazyEmitter<void>('idle');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n   */\n  @Output() readonly maptypeidChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('maptypeid_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n   */\n  @Output()\n  readonly mapMousemove: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousemove');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n   */\n  @Output() readonly mapMouseout: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseout');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n   */\n  @Output() readonly mapMouseover: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseover');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n   */\n  @Output() readonly projectionChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('projection_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n   */\n  @Output() readonly mapRightclick: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('rightclick');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n   */\n  @Output() readonly tilesloaded: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('tilesloaded');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n   */\n  @Output() readonly tiltChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('tilt_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n   */\n  @Output() readonly zoomChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('zoom_changed');\n\n  constructor(\n    private readonly _elementRef: ElementRef,\n    private _ngZone: NgZone,\n    @Inject(PLATFORM_ID) platformId: Object,\n  ) {\n    this._isBrowser = isPlatformBrowser(platformId);\n\n    if (this._isBrowser) {\n      const googleMapsWindow: GoogleMapsWindow = window;\n      if (!googleMapsWindow.google && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(\n          'Namespace google not found, cannot construct embedded google ' +\n            'map. Please install the Google Maps JavaScript API: ' +\n            'https://developers.google.com/maps/documentation/javascript/' +\n            'tutorial#Loading_the_Maps_API',\n        );\n      }\n\n      this._existingAuthFailureCallback = googleMapsWindow.gm_authFailure;\n      googleMapsWindow.gm_authFailure = () => {\n        if (this._existingAuthFailureCallback) {\n          this._existingAuthFailureCallback();\n        }\n        this.authFailure.emit();\n      };\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['height'] || changes['width']) {\n      this._setSize();\n    }\n\n    const googleMap = this.googleMap;\n\n    if (googleMap) {\n      if (changes['options']) {\n        googleMap.setOptions(this._combineOptions());\n      }\n\n      if (changes['center'] && this._center) {\n        googleMap.setCenter(this._center);\n      }\n\n      // Note that the zoom can be zero.\n      if (changes['zoom'] && this._zoom != null) {\n        googleMap.setZoom(this._zoom);\n      }\n\n      if (changes['mapTypeId'] && this.mapTypeId) {\n        googleMap.setMapTypeId(this.mapTypeId);\n      }\n    }\n  }\n\n  ngOnInit() {\n    // It should be a noop during server-side rendering.\n    if (this._isBrowser) {\n      this._mapEl = this._elementRef.nativeElement.querySelector('.map-container')!;\n      this._setSize();\n\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.googleMap = new google.maps.Map(this._mapEl, this._combineOptions());\n      });\n      this._eventManager.setTarget(this.googleMap);\n      this.mapInitialized.emit(this.googleMap);\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    if (this._isBrowser) {\n      const googleMapsWindow: GoogleMapsWindow = window;\n      googleMapsWindow.gm_authFailure = this._existingAuthFailureCallback;\n    }\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n   */\n  fitBounds(\n    bounds: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral,\n    padding?: number | google.maps.Padding,\n  ) {\n    this._assertInitialized();\n    this.googleMap.fitBounds(bounds, padding);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n   */\n  panBy(x: number, y: number) {\n    this._assertInitialized();\n    this.googleMap.panBy(x, y);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n   */\n  panTo(latLng: google.maps.LatLng | google.maps.LatLngLiteral) {\n    this._assertInitialized();\n    this.googleMap.panTo(latLng);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n   */\n  panToBounds(\n    latLngBounds: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral,\n    padding?: number | google.maps.Padding,\n  ) {\n    this._assertInitialized();\n    this.googleMap.panToBounds(latLngBounds, padding);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds | null {\n    this._assertInitialized();\n    return this.googleMap.getBounds() || null;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n   */\n  getCenter(): google.maps.LatLng | undefined {\n    this._assertInitialized();\n    return this.googleMap.getCenter();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n   */\n  getClickableIcons(): boolean | undefined {\n    this._assertInitialized();\n    return this.googleMap.getClickableIcons();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n   */\n  getHeading(): number | undefined {\n    this._assertInitialized();\n    return this.googleMap.getHeading();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n   */\n  getMapTypeId(): google.maps.MapTypeId | string | undefined {\n    this._assertInitialized();\n    return this.googleMap.getMapTypeId();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n   */\n  getProjection(): google.maps.Projection | null {\n    this._assertInitialized();\n    return this.googleMap.getProjection() || null;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n   */\n  getStreetView(): google.maps.StreetViewPanorama {\n    this._assertInitialized();\n    return this.googleMap.getStreetView();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n   */\n  getTilt(): number | undefined {\n    this._assertInitialized();\n    return this.googleMap.getTilt();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n   */\n  getZoom(): number | undefined {\n    this._assertInitialized();\n    return this.googleMap.getZoom();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n   */\n  get controls(): google.maps.MVCArray<Node>[] {\n    this._assertInitialized();\n    return this.googleMap.controls;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n   */\n  get data(): google.maps.Data {\n    this._assertInitialized();\n    return this.googleMap.data;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n   */\n  get mapTypes(): google.maps.MapTypeRegistry {\n    this._assertInitialized();\n    return this.googleMap.mapTypes;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n   */\n  get overlayMapTypes(): google.maps.MVCArray<google.maps.MapType> {\n    this._assertInitialized();\n    return this.googleMap.overlayMapTypes;\n  }\n\n  private _setSize() {\n    if (this._mapEl) {\n      const styles = this._mapEl.style;\n      styles.height =\n        this.height === null ? '' : coerceCssPixelValue(this.height) || DEFAULT_HEIGHT;\n      styles.width = this.width === null ? '' : coerceCssPixelValue(this.width) || DEFAULT_WIDTH;\n    }\n  }\n\n  /** Combines the center and zoom and the other map options into a single object */\n  private _combineOptions(): google.maps.MapOptions {\n    const options = this._options || {};\n    return {\n      ...options,\n      // It's important that we set **some** kind of `center` and `zoom`, otherwise\n      // Google Maps will render a blank rectangle which looks broken.\n      center: this._center || options.center || DEFAULT_OPTIONS.center,\n      zoom: this._zoom ?? options.zoom ?? DEFAULT_OPTIONS.zoom,\n      // Passing in an undefined `mapTypeId` seems to break tile loading\n      // so make sure that we have some kind of default (see #22082).\n      mapTypeId: this.mapTypeId || options.mapTypeId || DEFAULT_OPTIONS.mapTypeId,\n    };\n  }\n\n  /** Asserts that the map has been initialized. */\n  private _assertInitialized(): asserts this is {googleMap: google.maps.Map} {\n    if (!this.googleMap && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(\n        'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.',\n      );\n    }\n  }\n}\n\nconst cssUnitsPattern = /([A-Za-z%]+)$/;\n\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value: any): string {\n  if (value == null) {\n    return '';\n  }\n\n  return cssUnitsPattern.test(value) ? value : `${value}px`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"google.maps\" />\n\nimport {Directive, NgZone, OnDestroy, OnInit} from '@angular/core';\n\nimport {GoogleMap} from './google-map/google-map';\n\n@Directive({\n  selector: 'map-base-layer',\n  exportAs: 'mapBaseLayer',\n})\nexport class MapBaseLayer implements OnInit, OnDestroy {\n  constructor(protected readonly _map: GoogleMap, protected readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._ngZone.runOutsideAngular(() => {\n        this._initializeObject();\n      });\n      this._assertInitialized();\n      this._setMap();\n    }\n  }\n\n  ngOnDestroy() {\n    this._unsetMap();\n  }\n\n  private _assertInitialized() {\n    if (!this._map.googleMap) {\n      throw Error(\n        'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.',\n      );\n    }\n  }\n\n  protected _initializeObject() {}\n  protected _setMap() {}\n  protected _unsetMap() {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"google.maps\" />\n\nimport {Directive} from '@angular/core';\n\nimport {MapBaseLayer} from '../map-base-layer';\n\n/**\n * Angular component that renders a Google Maps Bicycling Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n */\n@Directive({\n  selector: 'map-bicycling-layer',\n  exportAs: 'mapBicyclingLayer',\n})\nexport class MapBicyclingLayer extends MapBaseLayer {\n  /**\n   * The underlying google.maps.BicyclingLayer object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n   */\n  bicyclingLayer?: google.maps.BicyclingLayer;\n\n  protected override _initializeObject() {\n    this.bicyclingLayer = new google.maps.BicyclingLayer();\n  }\n\n  protected override _setMap() {\n    this._assertLayerInitialized();\n    this.bicyclingLayer.setMap(this._map.googleMap!);\n  }\n\n  protected override _unsetMap() {\n    if (this.bicyclingLayer) {\n      this.bicyclingLayer.setMap(null);\n    }\n  }\n\n  private _assertLayerInitialized(): asserts this is {bicyclingLayer: google.maps.BicyclingLayer} {\n    if (!this.bicyclingLayer) {\n      throw Error(\n        'Cannot interact with a Google Map Bicycling Layer before it has been initialized. ' +\n          'Please wait for the Transit Layer to load before trying to interact with it.',\n      );\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"google.maps\" />\n\nimport {Directive, Input, NgZone, OnDestroy, OnInit, Output} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n */\n@Directive({\n  selector: 'map-circle',\n  exportAs: 'mapCircle',\n})\nexport class MapCircle implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.CircleOptions>({});\n  private readonly _center = new BehaviorSubject<\n    google.maps.LatLng | google.maps.LatLngLiteral | undefined\n  >(undefined);\n  private readonly _radius = new BehaviorSubject<number | undefined>(undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * Underlying google.maps.Circle object.\n   *\n   * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n   */\n  circle?: google.maps.Circle; // initialized in ngOnInit\n\n  @Input()\n  set options(options: google.maps.CircleOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set center(center: google.maps.LatLng | google.maps.LatLngLiteral) {\n    this._center.next(center);\n  }\n\n  @Input()\n  set radius(radius: number) {\n    this._radius.next(radius);\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n   */\n  @Output() readonly centerChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('center_changed');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n   */\n  @Output() readonly circleClick: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('click');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n   */\n  @Output() readonly circleDblclick: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dblclick');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n   */\n  @Output() readonly circleDrag: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('drag');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n   */\n  @Output() readonly circleDragend: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragend');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n   */\n  @Output() readonly circleDragstart: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragstart');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n   */\n  @Output() readonly circleMousedown: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousedown');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n   */\n  @Output() readonly circleMousemove: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousemove');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n   */\n  @Output() readonly circleMouseout: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseout');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n   */\n  @Output() readonly circleMouseover: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseover');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n   */\n  @Output() readonly circleMouseup: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseup');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n   */\n  @Output() readonly radiusChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('radius_changed');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n   */\n  @Output() readonly circleRightclick: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('rightclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions()\n        .pipe(take(1))\n        .subscribe(options => {\n          // Create the object outside the zone so its events don't trigger change detection.\n          // We'll bring it back in inside the `MapEventManager` only for the events that the\n          // user has subscribed to.\n          this._ngZone.runOutsideAngular(() => {\n            this.circle = new google.maps.Circle(options);\n          });\n          this._assertInitialized();\n          this.circle.setMap(this._map.googleMap!);\n          this._eventManager.setTarget(this.circle);\n        });\n\n      this._watchForOptionsChanges();\n      this._watchForCenterChanges();\n      this._watchForRadiusChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.circle) {\n      this.circle.setMap(null);\n    }\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds | null {\n    this._assertInitialized();\n    return this.circle.getBounds();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n   */\n  getCenter(): google.maps.LatLng | null {\n    this._assertInitialized();\n    return this.circle.getCenter();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.circle.getDraggable();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.circle.getEditable();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getRadius\n   */\n  getRadius(): number {\n    this._assertInitialized();\n    return this.circle.getRadius();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.circle.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.CircleOptions> {\n    return combineLatest([this._options, this._center, this._radius]).pipe(\n      map(([options, center, radius]) => {\n        const combinedOptions: google.maps.CircleOptions = {\n          ...options,\n          center: center || options.center,\n          radius: radius !== undefined ? radius : options.radius,\n        };\n        return combinedOptions;\n      }),\n    );\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.circle.setOptions(options);\n    });\n  }\n\n  private _watchForCenterChanges() {\n    this._center.pipe(takeUntil(this._destroyed)).subscribe(center => {\n      if (center) {\n        this._assertInitialized();\n        this.circle.setCenter(center);\n      }\n    });\n  }\n\n  private _watchForRadiusChanges() {\n    this._radius.pipe(takeUntil(this._destroyed)).subscribe(radius => {\n      if (radius !== undefined) {\n        this._assertInitialized();\n        this.circle.setRadius(radius);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {circle: google.maps.Circle} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.',\n        );\n      }\n      if (!this.circle) {\n        throw Error(\n          'Cannot interact with a Google Map Circle before it has been ' +\n            'initialized. Please wait for the Circle to load before trying to interact with it.',\n        );\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"google.maps\" />\n\nimport {\n  Directive,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Directions Renderer via the Google Maps\n * JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsRenderer\n */\n@Directive({\n  selector: 'map-directions-renderer',\n  exportAs: 'mapDirectionsRenderer',\n})\nexport class MapDirectionsRenderer implements OnInit, OnChanges, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRendererOptions.directions\n   */\n  @Input()\n  set directions(directions: google.maps.DirectionsResult) {\n    this._directions = directions;\n  }\n  private _directions: google.maps.DirectionsResult;\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRendererOptions\n   */\n  @Input()\n  set options(options: google.maps.DirectionsRendererOptions) {\n    this._options = options;\n  }\n  private _options: google.maps.DirectionsRendererOptions;\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.directions_changed\n   */\n  @Output()\n  readonly directionsChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('directions_changed');\n\n  /** The underlying google.maps.DirectionsRenderer object. */\n  directionsRenderer?: google.maps.DirectionsRenderer;\n\n  constructor(private readonly _googleMap: GoogleMap, private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.directionsRenderer = new google.maps.DirectionsRenderer(this._combineOptions());\n      });\n      this._assertInitialized();\n      this.directionsRenderer.setMap(this._googleMap.googleMap!);\n      this._eventManager.setTarget(this.directionsRenderer);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.directionsRenderer) {\n      if (changes['options']) {\n        this.directionsRenderer.setOptions(this._combineOptions());\n      }\n\n      if (changes['directions'] && this._directions !== undefined) {\n        this.directionsRenderer.setDirections(this._directions);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    if (this.directionsRenderer) {\n      this.directionsRenderer.setMap(null);\n    }\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getDirections\n   */\n  getDirections(): google.maps.DirectionsResult | null {\n    this._assertInitialized();\n    return this.directionsRenderer.getDirections();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getPanel\n   */\n  getPanel(): Node | null {\n    this._assertInitialized();\n    return this.directionsRenderer.getPanel();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getRouteIndex\n   */\n  getRouteIndex(): number {\n    this._assertInitialized();\n    return this.directionsRenderer.getRouteIndex();\n  }\n\n  private _combineOptions(): google.maps.DirectionsRendererOptions {\n    const options = this._options || {};\n    return {\n      ...options,\n      directions: this._directions || options.directions,\n      map: this._googleMap.googleMap,\n    };\n  }\n\n  private _assertInitialized(): asserts this is {\n    directionsRenderer: google.maps.DirectionsRenderer;\n  } {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.',\n        );\n      }\n      if (!this.directionsRenderer) {\n        throw Error(\n          'Cannot interact with a Google Map Directions Renderer before it has been ' +\n            'initialized. Please wait for the Directions Renderer to load before trying ' +\n            'to interact with it.',\n        );\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"google.maps\" />\n\nimport {Directive, Input, NgZone, OnDestroy, OnInit, Output} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Ground Overlay via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n */\n@Directive({\n  selector: 'map-ground-overlay',\n  exportAs: 'mapGroundOverlay',\n})\nexport class MapGroundOverlay implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n\n  private readonly _opacity = new BehaviorSubject<number>(1);\n  private readonly _url = new BehaviorSubject<string>('');\n  private readonly _bounds = new BehaviorSubject<\n    google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral | undefined\n  >(undefined);\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.GroundOverlay object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n   */\n  groundOverlay?: google.maps.GroundOverlay;\n\n  /** URL of the image that will be shown in the overlay. */\n  @Input()\n  set url(url: string) {\n    this._url.next(url);\n  }\n\n  /** Bounds for the overlay. */\n  @Input()\n  get bounds(): google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral {\n    return this._bounds.value!;\n  }\n  set bounds(bounds: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral) {\n    this._bounds.next(bounds);\n  }\n\n  /** Whether the overlay is clickable */\n  @Input() clickable: boolean = false;\n\n  /** Opacity of the overlay. */\n  @Input()\n  set opacity(opacity: number) {\n    this._opacity.next(opacity);\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay.click\n   */\n  @Output() readonly mapClick: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.dblclick\n   */\n  @Output() readonly mapDblclick: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dblclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      // The ground overlay setup is slightly different from the other Google Maps objects in that\n      // we have to recreate the `GroundOverlay` object whenever the bounds change, because\n      // Google Maps doesn't provide an API to update the bounds of an existing overlay.\n      this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n        if (this.groundOverlay) {\n          this.groundOverlay.setMap(null);\n          this.groundOverlay = undefined;\n        }\n\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        if (bounds) {\n          this._ngZone.runOutsideAngular(() => {\n            this.groundOverlay = new google.maps.GroundOverlay(this._url.getValue(), bounds, {\n              clickable: this.clickable,\n              opacity: this._opacity.value,\n            });\n          });\n          this._assertInitialized();\n          this.groundOverlay.setMap(this._map.googleMap!);\n          this._eventManager.setTarget(this.groundOverlay);\n        }\n      });\n\n      this._watchForOpacityChanges();\n      this._watchForUrlChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.groundOverlay) {\n      this.groundOverlay.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds | null {\n    this._assertInitialized();\n    return this.groundOverlay.getBounds();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getOpacity\n   */\n  getOpacity(): number {\n    this._assertInitialized();\n    return this.groundOverlay.getOpacity();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getUrl\n   */\n  getUrl(): string {\n    this._assertInitialized();\n    return this.groundOverlay.getUrl();\n  }\n\n  private _watchForOpacityChanges() {\n    this._opacity.pipe(takeUntil(this._destroyed)).subscribe(opacity => {\n      if (opacity != null) {\n        this._assertInitialized();\n        this.groundOverlay.setOpacity(opacity);\n      }\n    });\n  }\n\n  private _watchForUrlChanges() {\n    this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n      this._assertInitialized();\n      const overlay = this.groundOverlay;\n      overlay.set('url', url);\n\n      // Google Maps only redraws the overlay if we re-set the map.\n      overlay.setMap(null);\n      overlay.setMap(this._map.googleMap!);\n    });\n  }\n\n  private _assertInitialized(): asserts this is {groundOverlay: google.maps.GroundOverlay} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.',\n        );\n      }\n      if (!this.groundOverlay) {\n        throw Error(\n          'Cannot interact with a Google Map GroundOverlay before it has been initialized. ' +\n            'Please wait for the GroundOverlay to load before trying to interact with it.',\n        );\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"google.maps\" />\n\nimport {Directive, ElementRef, Input, NgZone, OnDestroy, OnInit, Output} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\nimport {MapAnchorPoint} from '../map-anchor-point';\n\n/**\n * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/info-window\n */\n@Directive({\n  selector: 'map-info-window',\n  exportAs: 'mapInfoWindow',\n  host: {'style': 'display: none'},\n})\nexport class MapInfoWindow implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.InfoWindowOptions>({});\n  private readonly _position = new BehaviorSubject<\n    google.maps.LatLngLiteral | google.maps.LatLng | undefined\n  >(undefined);\n  private readonly _destroy = new Subject<void>();\n\n  /**\n   * Underlying google.maps.InfoWindow\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow\n   */\n  infoWindow?: google.maps.InfoWindow;\n\n  @Input()\n  set options(options: google.maps.InfoWindowOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set position(position: google.maps.LatLngLiteral | google.maps.LatLng) {\n    this._position.next(position);\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n   */\n  @Output() readonly closeclick: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('closeclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.content_changed\n   */\n  @Output() readonly contentChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('content_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n   */\n  @Output() readonly domready: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('domready');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.position_changed\n   */\n  @Output() readonly positionChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('position_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.zindex_changed\n   */\n  @Output() readonly zindexChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('zindex_changed');\n\n  constructor(\n    private readonly _googleMap: GoogleMap,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _ngZone: NgZone,\n  ) {}\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      const combinedOptionsChanges = this._combineOptions();\n\n      combinedOptionsChanges.pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.infoWindow = new google.maps.InfoWindow(options);\n        });\n\n        this._eventManager.setTarget(this.infoWindow);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForPositionChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroy.next();\n    this._destroy.complete();\n\n    // If no info window has been created on the server, we do not try closing it.\n    // On the server, an info window cannot be created and this would cause errors.\n    if (this.infoWindow) {\n      this.close();\n    }\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n   */\n  close() {\n    this._assertInitialized();\n    this.infoWindow.close();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n   */\n  getContent(): string | Node | null {\n    this._assertInitialized();\n    return this.infoWindow.getContent() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.getPosition\n   */\n  getPosition(): google.maps.LatLng | null {\n    this._assertInitialized();\n    return this.infoWindow.getPosition() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n   */\n  getZIndex(): number {\n    this._assertInitialized();\n    return this.infoWindow.getZIndex();\n  }\n\n  /**\n   * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n   * then the position property of the options input is used instead.\n   */\n  open(anchor?: MapAnchorPoint, shouldFocus?: boolean) {\n    this._assertInitialized();\n    const anchorObject = anchor ? anchor.getAnchor() : undefined;\n\n    // Prevent the info window from initializing when trying to reopen on the same anchor.\n    // Note that when the window is opened for the first time, the anchor will always be\n    // undefined. If that's the case, we have to allow it to open in order to handle the\n    // case where the window doesn't have an anchor, but is placed at a particular position.\n    if (this.infoWindow.get('anchor') !== anchorObject || !anchorObject) {\n      this._elementRef.nativeElement.style.display = '';\n\n      // The config is cast to `any`, because the internal typings are out of date.\n      this.infoWindow.open({\n        map: this._googleMap.googleMap,\n        anchor: anchorObject,\n        shouldFocus,\n      } as any);\n    }\n  }\n\n  private _combineOptions(): Observable<google.maps.InfoWindowOptions> {\n    return combineLatest([this._options, this._position]).pipe(\n      map(([options, position]) => {\n        const combinedOptions: google.maps.InfoWindowOptions = {\n          ...options,\n          position: position || options.position,\n          content: this._elementRef.nativeElement,\n        };\n        return combinedOptions;\n      }),\n    );\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroy)).subscribe(options => {\n      this._assertInitialized();\n      this.infoWindow.setOptions(options);\n    });\n  }\n\n  private _watchForPositionChanges() {\n    this._position.pipe(takeUntil(this._destroy)).subscribe(position => {\n      if (position) {\n        this._assertInitialized();\n        this.infoWindow.setPosition(position);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {infoWindow: google.maps.InfoWindow} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.',\n        );\n      }\n      if (!this.infoWindow) {\n        throw Error(\n          'Cannot interact with a Google Map Info Window before it has been ' +\n            'initialized. Please wait for the Info Window to load before trying to interact with ' +\n            'it.',\n        );\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"google.maps\" />\n\nimport {Directive, Input, NgZone, OnDestroy, OnInit, Output} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps KML Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n */\n@Directive({\n  selector: 'map-kml-layer',\n  exportAs: 'mapKmlLayer',\n})\nexport class MapKmlLayer implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.KmlLayerOptions>({});\n  private readonly _url = new BehaviorSubject<string>('');\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.KmlLayer object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n   */\n  kmlLayer?: google.maps.KmlLayer;\n\n  @Input()\n  set options(options: google.maps.KmlLayerOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set url(url: string) {\n    this._url.next(url);\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.click\n   */\n  @Output() readonly kmlClick: Observable<google.maps.KmlMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.KmlMouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/kml\n   * #KmlLayer.defaultviewport_changed\n   */\n  @Output() readonly defaultviewportChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('defaultviewport_changed');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.status_changed\n   */\n  @Output() readonly statusChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('status_changed');\n\n  constructor(private readonly _map: GoogleMap, private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions()\n        .pipe(take(1))\n        .subscribe(options => {\n          // Create the object outside the zone so its events don't trigger change detection.\n          // We'll bring it back in inside the `MapEventManager` only for the events that the\n          // user has subscribed to.\n          this._ngZone.runOutsideAngular(() => (this.kmlLayer = new google.maps.KmlLayer(options)));\n          this._assertInitialized();\n          this.kmlLayer.setMap(this._map.googleMap!);\n          this._eventManager.setTarget(this.kmlLayer);\n        });\n\n      this._watchForOptionsChanges();\n      this._watchForUrlChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.kmlLayer) {\n      this.kmlLayer.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getDefaultViewport\n   */\n  getDefaultViewport(): google.maps.LatLngBounds | null {\n    this._assertInitialized();\n    return this.kmlLayer.getDefaultViewport();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getMetadata\n   */\n  getMetadata(): google.maps.KmlLayerMetadata | null {\n    this._assertInitialized();\n    return this.kmlLayer.getMetadata();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getStatus\n   */\n  getStatus(): google.maps.KmlLayerStatus {\n    this._assertInitialized();\n    return this.kmlLayer.getStatus();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getUrl\n   */\n  getUrl(): string {\n    this._assertInitialized();\n    return this.kmlLayer.getUrl();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getZIndex\n   */\n  getZIndex(): number {\n    this._assertInitialized();\n    return this.kmlLayer.getZIndex();\n  }\n\n  private _combineOptions(): Observable<google.maps.KmlLayerOptions> {\n    return combineLatest([this._options, this._url]).pipe(\n      map(([options, url]) => {\n        const combinedOptions: google.maps.KmlLayerOptions = {\n          ...options,\n          url: url || options.url,\n        };\n        return combinedOptions;\n      }),\n    );\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      if (this.kmlLayer) {\n        this._assertInitialized();\n        this.kmlLayer.setOptions(options);\n      }\n    });\n  }\n\n  private _watchForUrlChanges() {\n    this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n      if (url && this.kmlLayer) {\n        this._assertInitialized();\n        this.kmlLayer.setUrl(url);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {kmlLayer: google.maps.KmlLayer} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.',\n        );\n      }\n      if (!this.kmlLayer) {\n        throw Error(\n          'Cannot interact with a Google Map KmlLayer before it has been ' +\n            'initialized. Please wait for the KmlLayer to load before trying to interact with it.',\n        );\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"google.maps\" />\n\nimport {\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  NgZone,\n  Directive,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\nimport {MapAnchorPoint} from '../map-anchor-point';\n\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\nexport const DEFAULT_MARKER_OPTIONS = {\n  position: {lat: 37.421995, lng: -122.084092},\n};\n\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\n@Directive({\n  selector: 'map-marker',\n  exportAs: 'mapMarker',\n})\nexport class MapMarker implements OnInit, OnChanges, OnDestroy, MapAnchorPoint {\n  private _eventManager = new MapEventManager(this._ngZone);\n\n  /**\n   * Title of the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.title\n   */\n  @Input()\n  set title(title: string) {\n    this._title = title;\n  }\n  private _title: string;\n\n  /**\n   * Position of the marker. See:\n   * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.position\n   */\n  @Input()\n  set position(position: google.maps.LatLngLiteral | google.maps.LatLng) {\n    this._position = position;\n  }\n  private _position: google.maps.LatLngLiteral | google.maps.LatLng;\n\n  /**\n   * Label for the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.label\n   */\n  @Input()\n  set label(label: string | google.maps.MarkerLabel) {\n    this._label = label;\n  }\n  private _label: string | google.maps.MarkerLabel;\n\n  /**\n   * Whether the marker is clickable. See:\n   * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.clickable\n   */\n  @Input()\n  set clickable(clickable: boolean) {\n    this._clickable = clickable;\n  }\n  private _clickable: boolean;\n\n  /**\n   * Options used to configure the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions\n   */\n  @Input()\n  set options(options: google.maps.MarkerOptions) {\n    this._options = options;\n  }\n  private _options: google.maps.MarkerOptions;\n\n  /**\n   * Icon to be used for the marker.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/marker#Icon\n   */\n  @Input()\n  set icon(icon: string | google.maps.Icon | google.maps.Symbol) {\n    this._icon = icon;\n  }\n  private _icon: string | google.maps.Icon | google.maps.Symbol;\n\n  /**\n   * Whether the marker is visible.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.visible\n   */\n  @Input()\n  set visible(value: boolean) {\n    this._visible = value;\n  }\n  private _visible: boolean;\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n   */\n  @Output() readonly animationChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('animation_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n   */\n  @Output() readonly mapClick: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n   */\n  @Output() readonly clickableChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('clickable_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n   */\n  @Output() readonly cursorChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('cursor_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n   */\n  @Output() readonly mapDblclick: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dblclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n   */\n  @Output() readonly mapDrag: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('drag');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n   */\n  @Output() readonly mapDragend: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragend');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n   */\n  @Output() readonly draggableChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('draggable_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n   */\n  @Output() readonly mapDragstart: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragstart');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n   */\n  @Output() readonly flatChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('flat_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n   */\n  @Output() readonly iconChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('icon_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n   */\n  @Output() readonly mapMousedown: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousedown');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n   */\n  @Output() readonly mapMouseout: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseout');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n   */\n  @Output() readonly mapMouseover: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseover');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n   */\n  @Output() readonly mapMouseup: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseup');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n   */\n  @Output() readonly positionChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('position_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n   */\n  @Output() readonly mapRightclick: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('rightclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n   */\n  @Output() readonly shapeChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('shape_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n   */\n  @Output() readonly titleChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('title_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n   */\n  @Output() readonly visibleChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('visible_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n   */\n  @Output() readonly zindexChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('zindex_changed');\n\n  /**\n   * The underlying google.maps.Marker object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/marker#Marker\n   */\n  marker?: google.maps.Marker;\n\n  constructor(private readonly _googleMap: GoogleMap, private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.marker = new google.maps.Marker(this._combineOptions());\n      });\n      this._assertInitialized();\n      this.marker.setMap(this._googleMap.googleMap!);\n      this._eventManager.setTarget(this.marker);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const {marker, _title, _position, _label, _clickable, _icon, _visible} = this;\n\n    if (marker) {\n      if (changes['options']) {\n        marker.setOptions(this._combineOptions());\n      }\n\n      if (changes['title'] && _title !== undefined) {\n        marker.setTitle(_title);\n      }\n\n      if (changes['position'] && _position) {\n        marker.setPosition(_position);\n      }\n\n      if (changes['label'] && _label !== undefined) {\n        marker.setLabel(_label);\n      }\n\n      if (changes['clickable'] && _clickable !== undefined) {\n        marker.setClickable(_clickable);\n      }\n\n      if (changes['icon'] && _icon) {\n        marker.setIcon(_icon);\n      }\n\n      if (changes['visible'] && _visible !== undefined) {\n        marker.setVisible(_visible);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    if (this.marker) {\n      this.marker.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n   */\n  getAnimation(): google.maps.Animation | null {\n    this._assertInitialized();\n    return this.marker.getAnimation() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n   */\n  getClickable(): boolean {\n    this._assertInitialized();\n    return this.marker.getClickable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n   */\n  getCursor(): string | null {\n    this._assertInitialized();\n    return this.marker.getCursor() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return !!this.marker.getDraggable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n   */\n  getIcon(): string | google.maps.Icon | google.maps.Symbol | null {\n    this._assertInitialized();\n    return this.marker.getIcon() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n   */\n  getLabel(): google.maps.MarkerLabel | null {\n    this._assertInitialized();\n    return this.marker.getLabel() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n   */\n  getOpacity(): number | null {\n    this._assertInitialized();\n    return this.marker.getOpacity() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n   */\n  getPosition(): google.maps.LatLng | null {\n    this._assertInitialized();\n    return this.marker.getPosition() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n   */\n  getShape(): google.maps.MarkerShape | null {\n    this._assertInitialized();\n    return this.marker.getShape() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n   */\n  getTitle(): string | null {\n    this._assertInitialized();\n    return this.marker.getTitle() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.marker.getVisible();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n   */\n  getZIndex(): number | null {\n    this._assertInitialized();\n    return this.marker.getZIndex() || null;\n  }\n\n  /** Gets the anchor point that can be used to attach other Google Maps objects. */\n  getAnchor(): google.maps.MVCObject {\n    this._assertInitialized();\n    return this.marker;\n  }\n\n  /** Creates a combined options object using the passed-in options and the individual inputs. */\n  private _combineOptions(): google.maps.MarkerOptions {\n    const options = this._options || DEFAULT_MARKER_OPTIONS;\n    return {\n      ...options,\n      title: this._title || options.title,\n      position: this._position || options.position,\n      label: this._label || options.label,\n      clickable: this._clickable ?? options.clickable,\n      map: this._googleMap.googleMap,\n      icon: this._icon || options.icon,\n      visible: this._visible ?? options.visible,\n    };\n  }\n\n  private _assertInitialized(): asserts this is {marker: google.maps.Marker} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.',\n        );\n      }\n      if (!this.marker) {\n        throw Error(\n          'Cannot interact with a Google Map Marker before it has been ' +\n            'initialized. Please wait for the Marker to load before trying to interact with it.',\n        );\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"google.maps\" />\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\nimport {MapMarker} from '../map-marker/map-marker';\nimport {\n  AriaLabelFn,\n  Calculator,\n  Cluster,\n  ClusterIconStyle,\n  MarkerClusterer as MarkerClustererInstance,\n  MarkerClustererOptions,\n} from './marker-clusterer-types';\n\n/** Default options for a clusterer. */\nconst DEFAULT_CLUSTERER_OPTIONS: MarkerClustererOptions = {};\n\n/**\n * The clusterer has to be defined and referred to as a global variable,\n * otherwise it'll cause issues when minified through Closure.\n */\ndeclare const MarkerClusterer: typeof MarkerClustererInstance;\n\n/**\n * Angular component for implementing a Google Maps Marker Clusterer.\n *\n * See https://developers.google.com/maps/documentation/javascript/marker-clustering\n */\n@Component({\n  selector: 'map-marker-clusterer',\n  exportAs: 'mapMarkerClusterer',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MapMarkerClusterer implements OnInit, AfterContentInit, OnChanges, OnDestroy {\n  private readonly _currentMarkers = new Set<google.maps.Marker>();\n  private readonly _eventManager = new MapEventManager(this._ngZone);\n  private readonly _destroy = new Subject<void>();\n\n  /** Whether the clusterer is allowed to be initialized. */\n  private readonly _canInitialize: boolean;\n\n  @Input()\n  ariaLabelFn: AriaLabelFn = () => '';\n\n  @Input()\n  set averageCenter(averageCenter: boolean) {\n    this._averageCenter = averageCenter;\n  }\n  private _averageCenter: boolean;\n\n  @Input() batchSize?: number;\n\n  @Input()\n  set batchSizeIE(batchSizeIE: number) {\n    this._batchSizeIE = batchSizeIE;\n  }\n  private _batchSizeIE: number;\n\n  @Input()\n  set calculator(calculator: Calculator) {\n    this._calculator = calculator;\n  }\n  private _calculator: Calculator;\n\n  @Input()\n  set clusterClass(clusterClass: string) {\n    this._clusterClass = clusterClass;\n  }\n  private _clusterClass: string;\n\n  @Input()\n  set enableRetinaIcons(enableRetinaIcons: boolean) {\n    this._enableRetinaIcons = enableRetinaIcons;\n  }\n  private _enableRetinaIcons: boolean;\n\n  @Input()\n  set gridSize(gridSize: number) {\n    this._gridSize = gridSize;\n  }\n  private _gridSize: number;\n\n  @Input()\n  set ignoreHidden(ignoreHidden: boolean) {\n    this._ignoreHidden = ignoreHidden;\n  }\n  private _ignoreHidden: boolean;\n\n  @Input()\n  set imageExtension(imageExtension: string) {\n    this._imageExtension = imageExtension;\n  }\n  private _imageExtension: string;\n\n  @Input()\n  set imagePath(imagePath: string) {\n    this._imagePath = imagePath;\n  }\n  private _imagePath: string;\n\n  @Input()\n  set imageSizes(imageSizes: number[]) {\n    this._imageSizes = imageSizes;\n  }\n  private _imageSizes: number[];\n\n  @Input()\n  set maxZoom(maxZoom: number) {\n    this._maxZoom = maxZoom;\n  }\n  private _maxZoom: number;\n\n  @Input()\n  set minimumClusterSize(minimumClusterSize: number) {\n    this._minimumClusterSize = minimumClusterSize;\n  }\n  private _minimumClusterSize: number;\n\n  @Input()\n  set styles(styles: ClusterIconStyle[]) {\n    this._styles = styles;\n  }\n  private _styles: ClusterIconStyle[];\n\n  @Input()\n  set title(title: string) {\n    this._title = title;\n  }\n  private _title: string;\n\n  @Input()\n  set zIndex(zIndex: number) {\n    this._zIndex = zIndex;\n  }\n  private _zIndex: number;\n\n  @Input()\n  set zoomOnClick(zoomOnClick: boolean) {\n    this._zoomOnClick = zoomOnClick;\n  }\n  private _zoomOnClick: boolean;\n\n  @Input()\n  set options(options: MarkerClustererOptions) {\n    this._options = options;\n  }\n  private _options: MarkerClustererOptions;\n\n  /**\n   * See\n   * googlemaps.github.io/v3-utility-library/modules/\n   * _google_markerclustererplus.html#clusteringbegin\n   */\n  @Output() readonly clusteringbegin: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('clusteringbegin');\n\n  /**\n   * See\n   * googlemaps.github.io/v3-utility-library/modules/_google_markerclustererplus.html#clusteringend\n   */\n  @Output() readonly clusteringend: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('clusteringend');\n\n  /** Emits when a cluster has been clicked. */\n  @Output()\n  readonly clusterClick: Observable<Cluster> = this._eventManager.getLazyEmitter<Cluster>('click');\n\n  @ContentChildren(MapMarker, {descendants: true}) _markers: QueryList<MapMarker>;\n\n  /**\n   * The underlying MarkerClusterer object.\n   *\n   * See\n   * googlemaps.github.io/v3-utility-library/classes/\n   * _google_markerclustererplus.markerclusterer.html\n   */\n  markerClusterer?: MarkerClustererInstance;\n\n  constructor(private readonly _googleMap: GoogleMap, private readonly _ngZone: NgZone) {\n    this._canInitialize = this._googleMap._isBrowser;\n  }\n\n  ngOnInit() {\n    if (this._canInitialize) {\n      if (\n        typeof MarkerClusterer !== 'function' &&\n        (typeof ngDevMode === 'undefined' || ngDevMode)\n      ) {\n        throw Error(\n          'MarkerClusterer class not found, cannot construct a marker cluster. ' +\n            'Please install the MarkerClustererPlus library: ' +\n            'https://github.com/googlemaps/js-markerclustererplus',\n        );\n      }\n\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.markerClusterer = new MarkerClusterer(\n          this._googleMap.googleMap!,\n          [],\n          this._combineOptions(),\n        );\n      });\n\n      this._assertInitialized();\n      this._eventManager.setTarget(this.markerClusterer);\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this._canInitialize) {\n      this._watchForMarkerChanges();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const {\n      markerClusterer: clusterer,\n      ariaLabelFn,\n      _averageCenter,\n      _batchSizeIE,\n      _calculator,\n      _styles,\n      _clusterClass,\n      _enableRetinaIcons,\n      _gridSize,\n      _ignoreHidden,\n      _imageExtension,\n      _imagePath,\n      _imageSizes,\n      _maxZoom,\n      _minimumClusterSize,\n      _title,\n      _zIndex,\n      _zoomOnClick,\n    } = this;\n\n    if (clusterer) {\n      if (changes['options']) {\n        clusterer.setOptions(this._combineOptions());\n      }\n      if (changes['ariaLabelFn']) {\n        clusterer.ariaLabelFn = ariaLabelFn;\n      }\n      if (changes['averageCenter'] && _averageCenter !== undefined) {\n        clusterer.setAverageCenter(_averageCenter);\n      }\n      if (changes['batchSizeIE'] && _batchSizeIE !== undefined) {\n        clusterer.setBatchSizeIE(_batchSizeIE);\n      }\n      if (changes['calculator'] && !!_calculator) {\n        clusterer.setCalculator(_calculator);\n      }\n      if (changes['clusterClass'] && _clusterClass !== undefined) {\n        clusterer.setClusterClass(_clusterClass);\n      }\n      if (changes['enableRetinaIcons'] && _enableRetinaIcons !== undefined) {\n        clusterer.setEnableRetinaIcons(_enableRetinaIcons);\n      }\n      if (changes['gridSize'] && _gridSize !== undefined) {\n        clusterer.setGridSize(_gridSize);\n      }\n      if (changes['ignoreHidden'] && _ignoreHidden !== undefined) {\n        clusterer.setIgnoreHidden(_ignoreHidden);\n      }\n      if (changes['imageExtension'] && _imageExtension !== undefined) {\n        clusterer.setImageExtension(_imageExtension);\n      }\n      if (changes['imagePath'] && _imagePath !== undefined) {\n        clusterer.setImagePath(_imagePath);\n      }\n      if (changes['imageSizes'] && _imageSizes) {\n        clusterer.setImageSizes(_imageSizes);\n      }\n      if (changes['maxZoom'] && _maxZoom !== undefined) {\n        clusterer.setMaxZoom(_maxZoom);\n      }\n      if (changes['minimumClusterSize'] && _minimumClusterSize !== undefined) {\n        clusterer.setMinimumClusterSize(_minimumClusterSize);\n      }\n      if (changes['styles'] && _styles) {\n        clusterer.setStyles(_styles);\n      }\n      if (changes['title'] && _title !== undefined) {\n        clusterer.setTitle(_title);\n      }\n      if (changes['zIndex'] && _zIndex !== undefined) {\n        clusterer.setZIndex(_zIndex);\n      }\n      if (changes['zoomOnClick'] && _zoomOnClick !== undefined) {\n        clusterer.setZoomOnClick(_zoomOnClick);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n    this._eventManager.destroy();\n    if (this.markerClusterer) {\n      this.markerClusterer.setMap(null);\n    }\n  }\n\n  fitMapToMarkers(padding: number | google.maps.Padding) {\n    this._assertInitialized();\n    this.markerClusterer.fitMapToMarkers(padding);\n  }\n\n  getAverageCenter(): boolean {\n    this._assertInitialized();\n    return this.markerClusterer.getAverageCenter();\n  }\n\n  getBatchSizeIE(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getBatchSizeIE();\n  }\n\n  getCalculator(): Calculator {\n    this._assertInitialized();\n    return this.markerClusterer.getCalculator();\n  }\n\n  getClusterClass(): string {\n    this._assertInitialized();\n    return this.markerClusterer.getClusterClass();\n  }\n\n  getClusters(): Cluster[] {\n    this._assertInitialized();\n    return this.markerClusterer.getClusters();\n  }\n\n  getEnableRetinaIcons(): boolean {\n    this._assertInitialized();\n    return this.markerClusterer.getEnableRetinaIcons();\n  }\n\n  getGridSize(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getGridSize();\n  }\n\n  getIgnoreHidden(): boolean {\n    this._assertInitialized();\n    return this.markerClusterer.getIgnoreHidden();\n  }\n\n  getImageExtension(): string {\n    this._assertInitialized();\n    return this.markerClusterer.getImageExtension();\n  }\n\n  getImagePath(): string {\n    this._assertInitialized();\n    return this.markerClusterer.getImagePath();\n  }\n\n  getImageSizes(): number[] {\n    this._assertInitialized();\n    return this.markerClusterer.getImageSizes();\n  }\n\n  getMaxZoom(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getMaxZoom();\n  }\n\n  getMinimumClusterSize(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getMinimumClusterSize();\n  }\n\n  getStyles(): ClusterIconStyle[] {\n    this._assertInitialized();\n    return this.markerClusterer.getStyles();\n  }\n\n  getTitle(): string {\n    this._assertInitialized();\n    return this.markerClusterer.getTitle();\n  }\n\n  getTotalClusters(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getTotalClusters();\n  }\n\n  getTotalMarkers(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getTotalMarkers();\n  }\n\n  getZIndex(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getZIndex();\n  }\n\n  getZoomOnClick(): boolean {\n    this._assertInitialized();\n    return this.markerClusterer.getZoomOnClick();\n  }\n\n  private _combineOptions(): MarkerClustererOptions {\n    const options = this._options || DEFAULT_CLUSTERER_OPTIONS;\n    return {\n      ...options,\n      ariaLabelFn: this.ariaLabelFn ?? options.ariaLabelFn,\n      averageCenter: this._averageCenter ?? options.averageCenter,\n      batchSize: this.batchSize ?? options.batchSize,\n      batchSizeIE: this._batchSizeIE ?? options.batchSizeIE,\n      calculator: this._calculator ?? options.calculator,\n      clusterClass: this._clusterClass ?? options.clusterClass,\n      enableRetinaIcons: this._enableRetinaIcons ?? options.enableRetinaIcons,\n      gridSize: this._gridSize ?? options.gridSize,\n      ignoreHidden: this._ignoreHidden ?? options.ignoreHidden,\n      imageExtension: this._imageExtension ?? options.imageExtension,\n      imagePath: this._imagePath ?? options.imagePath,\n      imageSizes: this._imageSizes ?? options.imageSizes,\n      maxZoom: this._maxZoom ?? options.maxZoom,\n      minimumClusterSize: this._minimumClusterSize ?? options.minimumClusterSize,\n      styles: this._styles ?? options.styles,\n      title: this._title ?? options.title,\n      zIndex: this._zIndex ?? options.zIndex,\n      zoomOnClick: this._zoomOnClick ?? options.zoomOnClick,\n    };\n  }\n\n  private _watchForMarkerChanges() {\n    this._assertInitialized();\n    const initialMarkers: google.maps.Marker[] = [];\n    for (const marker of this._getInternalMarkers(this._markers.toArray())) {\n      this._currentMarkers.add(marker);\n      initialMarkers.push(marker);\n    }\n    this.markerClusterer.addMarkers(initialMarkers);\n\n    this._markers.changes\n      .pipe(takeUntil(this._destroy))\n      .subscribe((markerComponents: MapMarker[]) => {\n        this._assertInitialized();\n        const newMarkers = new Set<google.maps.Marker>(this._getInternalMarkers(markerComponents));\n        const markersToAdd: google.maps.Marker[] = [];\n        const markersToRemove: google.maps.Marker[] = [];\n        for (const marker of Array.from(newMarkers)) {\n          if (!this._currentMarkers.has(marker)) {\n            this._currentMarkers.add(marker);\n            markersToAdd.push(marker);\n          }\n        }\n        for (const marker of Array.from(this._currentMarkers)) {\n          if (!newMarkers.has(marker)) {\n            markersToRemove.push(marker);\n          }\n        }\n        this.markerClusterer.addMarkers(markersToAdd, true);\n        this.markerClusterer.removeMarkers(markersToRemove, true);\n        this.markerClusterer.repaint();\n        for (const marker of markersToRemove) {\n          this._currentMarkers.delete(marker);\n        }\n      });\n  }\n\n  private _getInternalMarkers(markers: MapMarker[]): google.maps.Marker[] {\n    return markers\n      .filter(markerComponent => !!markerComponent.marker)\n      .map(markerComponent => markerComponent.marker!);\n  }\n\n  private _assertInitialized(): asserts this is {markerClusterer: MarkerClustererInstance} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.',\n        );\n      }\n      if (!this.markerClusterer) {\n        throw Error(\n          'Cannot interact with a MarkerClusterer before it has been initialized. ' +\n            'Please wait for the MarkerClusterer to load before trying to interact with it.',\n        );\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"google.maps\" />\n\nimport {Directive, Input, OnDestroy, OnInit, Output, NgZone} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Polygon via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n */\n@Directive({\n  selector: 'map-polygon',\n  exportAs: 'mapPolygon',\n})\nexport class MapPolygon implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.PolygonOptions>({});\n  private readonly _paths = new BehaviorSubject<\n    | google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>>\n    | google.maps.MVCArray<google.maps.LatLng>\n    | google.maps.LatLng[]\n    | google.maps.LatLngLiteral[]\n    | undefined\n  >(undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.Polygon object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n   */\n  polygon?: google.maps.Polygon;\n\n  @Input()\n  set options(options: google.maps.PolygonOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set paths(\n    paths:\n      | google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>>\n      | google.maps.MVCArray<google.maps.LatLng>\n      | google.maps.LatLng[]\n      | google.maps.LatLngLiteral[],\n  ) {\n    this._paths.next(paths);\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.click\n   */\n  @Output() readonly polygonClick: Observable<google.maps.PolyMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('click');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dblclick\n   */\n  @Output() readonly polygonDblclick: Observable<google.maps.PolyMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('dblclick');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.drag\n   */\n  @Output() readonly polygonDrag: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('drag');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragend\n   */\n  @Output() readonly polygonDragend: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragend');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragstart\n   */\n  @Output() readonly polygonDragstart: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragstart');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousedown\n   */\n  @Output() readonly polygonMousedown: Observable<google.maps.PolyMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousedown');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousemove\n   */\n  @Output() readonly polygonMousemove: Observable<google.maps.PolyMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousemove');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseout\n   */\n  @Output() readonly polygonMouseout: Observable<google.maps.PolyMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseout');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseover\n   */\n  @Output() readonly polygonMouseover: Observable<google.maps.PolyMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseover');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseup\n   */\n  @Output() readonly polygonMouseup: Observable<google.maps.PolyMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseup');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.rightclick\n   */\n  @Output() readonly polygonRightclick: Observable<google.maps.PolyMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('rightclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions()\n        .pipe(take(1))\n        .subscribe(options => {\n          // Create the object outside the zone so its events don't trigger change detection.\n          // We'll bring it back in inside the `MapEventManager` only for the events that the\n          // user has subscribed to.\n          this._ngZone.runOutsideAngular(() => {\n            this.polygon = new google.maps.Polygon(options);\n          });\n          this._assertInitialized();\n          this.polygon.setMap(this._map.googleMap!);\n          this._eventManager.setTarget(this.polygon);\n        });\n\n      this._watchForOptionsChanges();\n      this._watchForPathChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.polygon) {\n      this.polygon.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.polygon.getDraggable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.polygon.getEditable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPath\n   */\n  getPath(): google.maps.MVCArray<google.maps.LatLng> {\n    this._assertInitialized();\n    return this.polygon.getPath();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPaths\n   */\n  getPaths(): google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>> {\n    this._assertInitialized();\n    return this.polygon.getPaths();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.polygon.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.PolygonOptions> {\n    return combineLatest([this._options, this._paths]).pipe(\n      map(([options, paths]) => {\n        const combinedOptions: google.maps.PolygonOptions = {\n          ...options,\n          paths: paths || options.paths,\n        };\n        return combinedOptions;\n      }),\n    );\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.polygon.setOptions(options);\n    });\n  }\n\n  private _watchForPathChanges() {\n    this._paths.pipe(takeUntil(this._destroyed)).subscribe(paths => {\n      if (paths) {\n        this._assertInitialized();\n        this.polygon.setPaths(paths);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {polygon: google.maps.Polygon} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.',\n        );\n      }\n      if (!this.polygon) {\n        throw Error(\n          'Cannot interact with a Google Map Polygon before it has been ' +\n            'initialized. Please wait for the Polygon to load before trying to interact with it.',\n        );\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"google.maps\" />\n\nimport {Directive, Input, OnDestroy, OnInit, Output, NgZone} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Polyline via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n */\n@Directive({\n  selector: 'map-polyline',\n  exportAs: 'mapPolyline',\n})\nexport class MapPolyline implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.PolylineOptions>({});\n  private readonly _path = new BehaviorSubject<\n    | google.maps.MVCArray<google.maps.LatLng>\n    | google.maps.LatLng[]\n    | google.maps.LatLngLiteral[]\n    | undefined\n  >(undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.Polyline object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n   */\n  polyline?: google.maps.Polyline;\n\n  @Input()\n  set options(options: google.maps.PolylineOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set path(\n    path:\n      | google.maps.MVCArray<google.maps.LatLng>\n      | google.maps.LatLng[]\n      | google.maps.LatLngLiteral[],\n  ) {\n    this._path.next(path);\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.click\n   */\n  @Output() readonly polylineClick: Observable<google.maps.PolyMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('click');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dblclick\n   */\n  @Output() readonly polylineDblclick: Observable<google.maps.PolyMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('dblclick');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.drag\n   */\n  @Output() readonly polylineDrag: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('drag');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragend\n   */\n  @Output() readonly polylineDragend: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragend');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragstart\n   */\n  @Output() readonly polylineDragstart: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragstart');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousedown\n   */\n  @Output() readonly polylineMousedown: Observable<google.maps.PolyMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousedown');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousemove\n   */\n  @Output() readonly polylineMousemove: Observable<google.maps.PolyMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousemove');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseout\n   */\n  @Output() readonly polylineMouseout: Observable<google.maps.PolyMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseout');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseover\n   */\n  @Output() readonly polylineMouseover: Observable<google.maps.PolyMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseover');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseup\n   */\n  @Output() readonly polylineMouseup: Observable<google.maps.PolyMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseup');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.rightclick\n   */\n  @Output() readonly polylineRightclick: Observable<google.maps.PolyMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('rightclick');\n\n  constructor(private readonly _map: GoogleMap, private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions()\n        .pipe(take(1))\n        .subscribe(options => {\n          // Create the object outside the zone so its events don't trigger change detection.\n          // We'll bring it back in inside the `MapEventManager` only for the events that the\n          // user has subscribed to.\n          this._ngZone.runOutsideAngular(() => (this.polyline = new google.maps.Polyline(options)));\n          this._assertInitialized();\n          this.polyline.setMap(this._map.googleMap!);\n          this._eventManager.setTarget(this.polyline);\n        });\n\n      this._watchForOptionsChanges();\n      this._watchForPathChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.polyline) {\n      this.polyline.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.polyline.getDraggable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.polyline.getEditable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getPath\n   */\n  getPath(): google.maps.MVCArray<google.maps.LatLng> {\n    this._assertInitialized();\n    return this.polyline.getPath();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.polyline.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.PolylineOptions> {\n    return combineLatest([this._options, this._path]).pipe(\n      map(([options, path]) => {\n        const combinedOptions: google.maps.PolylineOptions = {\n          ...options,\n          path: path || options.path,\n        };\n        return combinedOptions;\n      }),\n    );\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.polyline.setOptions(options);\n    });\n  }\n\n  private _watchForPathChanges() {\n    this._path.pipe(takeUntil(this._destroyed)).subscribe(path => {\n      if (path) {\n        this._assertInitialized();\n        this.polyline.setPath(path);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {polyline: google.maps.Polyline} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.',\n        );\n      }\n      if (!this.polyline) {\n        throw Error(\n          'Cannot interact with a Google Map Polyline before it has been ' +\n            'initialized. Please wait for the Polyline to load before trying to interact with it.',\n        );\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"google.maps\" />\n\nimport {Directive, Input, OnDestroy, OnInit, Output, NgZone} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Rectangle via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n */\n@Directive({\n  selector: 'map-rectangle',\n  exportAs: 'mapRectangle',\n})\nexport class MapRectangle implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.RectangleOptions>({});\n  private readonly _bounds = new BehaviorSubject<\n    google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral | undefined\n  >(undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.Rectangle object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n   */\n  rectangle?: google.maps.Rectangle;\n\n  @Input()\n  set options(options: google.maps.RectangleOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set bounds(bounds: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral) {\n    this._bounds.next(bounds);\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.boundsChanged\n   */ @Output() readonly boundsChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('bounds_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.click\n   */\n  @Output() readonly rectangleClick: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dblclick\n   */\n  @Output() readonly rectangleDblclick: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dblclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.drag\n   */\n  @Output() readonly rectangleDrag: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('drag');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragend\n   */\n  @Output() readonly rectangleDragend: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragend');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragstart\n   */\n  @Output() readonly rectangleDragstart: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragstart');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousedown\n   */\n  @Output() readonly rectangleMousedown: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousedown');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousemove\n   */\n  @Output() readonly rectangleMousemove: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousemove');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseout\n   */\n  @Output() readonly rectangleMouseout: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseout');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseover\n   */\n  @Output() readonly rectangleMouseover: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseover');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseup\n   */\n  @Output() readonly rectangleMouseup: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseup');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.rightclick\n   */\n  @Output() readonly rectangleRightclick: Observable<google.maps.MapMouseEvent> =\n    this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('rightclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions()\n        .pipe(take(1))\n        .subscribe(options => {\n          // Create the object outside the zone so its events don't trigger change detection.\n          // We'll bring it back in inside the `MapEventManager` only for the events that the\n          // user has subscribed to.\n          this._ngZone.runOutsideAngular(() => {\n            this.rectangle = new google.maps.Rectangle(options);\n          });\n          this._assertInitialized();\n          this.rectangle.setMap(this._map.googleMap!);\n          this._eventManager.setTarget(this.rectangle);\n        });\n\n      this._watchForOptionsChanges();\n      this._watchForBoundsChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.rectangle) {\n      this.rectangle.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds | null {\n    this._assertInitialized();\n    return this.rectangle.getBounds();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.rectangle.getDraggable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.rectangle.getEditable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.rectangle.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.RectangleOptions> {\n    return combineLatest([this._options, this._bounds]).pipe(\n      map(([options, bounds]) => {\n        const combinedOptions: google.maps.RectangleOptions = {\n          ...options,\n          bounds: bounds || options.bounds,\n        };\n        return combinedOptions;\n      }),\n    );\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.rectangle.setOptions(options);\n    });\n  }\n\n  private _watchForBoundsChanges() {\n    this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n      if (bounds) {\n        this._assertInitialized();\n        this.rectangle.setBounds(bounds);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {rectangle: google.maps.Rectangle} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.',\n        );\n      }\n      if (!this.rectangle) {\n        throw Error(\n          'Cannot interact with a Google Map Rectangle before it has been initialized. ' +\n            'Please wait for the Rectangle to load before trying to interact with it.',\n        );\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"google.maps\" />\n\nimport {Directive, Input, NgZone, OnDestroy, OnInit} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\n\n/**\n * Angular component that renders a Google Maps Traffic Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n */\n@Directive({\n  selector: 'map-traffic-layer',\n  exportAs: 'mapTrafficLayer',\n})\nexport class MapTrafficLayer implements OnInit, OnDestroy {\n  private readonly _autoRefresh = new BehaviorSubject<boolean>(true);\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.TrafficLayer object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n   */\n  trafficLayer?: google.maps.TrafficLayer;\n\n  /**\n   * Whether the traffic layer refreshes with updated information automatically.\n   */\n  @Input()\n  set autoRefresh(autoRefresh: boolean) {\n    this._autoRefresh.next(autoRefresh);\n  }\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions()\n        .pipe(take(1))\n        .subscribe(options => {\n          // Create the object outside the zone so its events don't trigger change detection.\n          this._ngZone.runOutsideAngular(() => {\n            this.trafficLayer = new google.maps.TrafficLayer(options);\n          });\n          this._assertInitialized();\n          this.trafficLayer.setMap(this._map.googleMap!);\n        });\n\n      this._watchForAutoRefreshChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.trafficLayer) {\n      this.trafficLayer.setMap(null);\n    }\n  }\n\n  private _combineOptions(): Observable<google.maps.TrafficLayerOptions> {\n    return this._autoRefresh.pipe(\n      map(autoRefresh => {\n        const combinedOptions: google.maps.TrafficLayerOptions = {autoRefresh};\n        return combinedOptions;\n      }),\n    );\n  }\n\n  private _watchForAutoRefreshChanges() {\n    this._combineOptions()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(options => {\n        this._assertInitialized();\n        this.trafficLayer.setOptions(options);\n      });\n  }\n\n  private _assertInitialized(): asserts this is {trafficLayer: google.maps.TrafficLayer} {\n    if (!this._map.googleMap) {\n      throw Error(\n        'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.',\n      );\n    }\n    if (!this.trafficLayer) {\n      throw Error(\n        'Cannot interact with a Google Map Traffic Layer before it has been initialized. ' +\n          'Please wait for the Traffic Layer to load before trying to interact with it.',\n      );\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"google.maps\" />\n\nimport {Directive} from '@angular/core';\n\nimport {MapBaseLayer} from '../map-base-layer';\n\n/**\n * Angular component that renders a Google Maps Transit Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n */\n@Directive({\n  selector: 'map-transit-layer',\n  exportAs: 'mapTransitLayer',\n})\nexport class MapTransitLayer extends MapBaseLayer {\n  /**\n   * The underlying google.maps.TransitLayer object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n   */\n  transitLayer?: google.maps.TransitLayer;\n\n  protected override _initializeObject() {\n    this.transitLayer = new google.maps.TransitLayer();\n  }\n\n  protected override _setMap() {\n    this._assertLayerInitialized();\n    this.transitLayer.setMap(this._map.googleMap!);\n  }\n\n  protected override _unsetMap() {\n    if (this.transitLayer) {\n      this.transitLayer.setMap(null);\n    }\n  }\n\n  private _assertLayerInitialized(): asserts this is {transitLayer: google.maps.TransitLayer} {\n    if (!this.transitLayer) {\n      throw Error(\n        'Cannot interact with a Google Map Transit Layer before it has been initialized. ' +\n          'Please wait for the Transit Layer to load before trying to interact with it.',\n      );\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"google.maps\" />\n\nimport {Input, OnDestroy, OnInit, NgZone, Directive, OnChanges, SimpleChanges} from '@angular/core';\n\nimport {GoogleMap} from '../google-map/google-map';\n\n/** Possible data that can be shown on a heatmap layer. */\nexport type HeatmapData =\n  | google.maps.MVCArray<\n      google.maps.LatLng | google.maps.visualization.WeightedLocation | google.maps.LatLngLiteral\n    >\n  | (google.maps.LatLng | google.maps.visualization.WeightedLocation | google.maps.LatLngLiteral)[];\n\n/**\n * Angular directive that renders a Google Maps heatmap via the Google Maps JavaScript API.\n *\n * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n */\n@Directive({\n  selector: 'map-heatmap-layer',\n  exportAs: 'mapHeatmapLayer',\n})\nexport class MapHeatmapLayer implements OnInit, OnChanges, OnDestroy {\n  /**\n   * Data shown on the heatmap.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n   */\n  @Input()\n  set data(data: HeatmapData) {\n    this._data = data;\n  }\n  private _data: HeatmapData;\n\n  /**\n   * Options used to configure the heatmap. See:\n   * developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayerOptions\n   */\n  @Input()\n  set options(options: Partial<google.maps.visualization.HeatmapLayerOptions>) {\n    this._options = options;\n  }\n  private _options: Partial<google.maps.visualization.HeatmapLayerOptions>;\n\n  /**\n   * The underlying google.maps.visualization.HeatmapLayer object.\n   *\n   * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n   */\n  heatmap?: google.maps.visualization.HeatmapLayer;\n\n  constructor(private readonly _googleMap: GoogleMap, private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      if (!window.google?.maps?.visualization && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(\n          'Namespace `google.maps.visualization` not found, cannot construct heatmap. ' +\n            'Please install the Google Maps JavaScript API with the \"visualization\" library: ' +\n            'https://developers.google.com/maps/documentation/javascript/visualization',\n        );\n      }\n\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.heatmap = new google.maps.visualization.HeatmapLayer(this._combineOptions());\n      });\n      this._assertInitialized();\n      this.heatmap.setMap(this._googleMap.googleMap!);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const {_data, heatmap} = this;\n\n    if (heatmap) {\n      if (changes['options']) {\n        heatmap.setOptions(this._combineOptions());\n      }\n\n      if (changes['data'] && _data !== undefined) {\n        heatmap.setData(this._normalizeData(_data));\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.heatmap) {\n      this.heatmap.setMap(null);\n    }\n  }\n\n  /**\n   * Gets the data that is currently shown on the heatmap.\n   * See: developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayer\n   */\n  getData(): HeatmapData {\n    this._assertInitialized();\n    return this.heatmap.getData();\n  }\n\n  /** Creates a combined options object using the passed-in options and the individual inputs. */\n  private _combineOptions(): google.maps.visualization.HeatmapLayerOptions {\n    const options = this._options || {};\n    return {\n      ...options,\n      data: this._normalizeData(this._data || options.data || []),\n      map: this._googleMap.googleMap,\n    };\n  }\n\n  /**\n   * Most Google Maps APIs support both `LatLng` objects and `LatLngLiteral`. The latter is more\n   * convenient to write out, because the Google Maps API doesn't have to have been loaded in order\n   * to construct them. The `HeatmapLayer` appears to be an exception that only allows a `LatLng`\n   * object, or it throws a runtime error. Since it's more convenient and we expect that Angular\n   * users will load the API asynchronously, we allow them to pass in a `LatLngLiteral` and we\n   * convert it to a `LatLng` object before passing it off to Google Maps.\n   */\n  private _normalizeData(data: HeatmapData) {\n    const result: (google.maps.LatLng | google.maps.visualization.WeightedLocation)[] = [];\n\n    data.forEach(item => {\n      result.push(isLatLngLiteral(item) ? new google.maps.LatLng(item.lat, item.lng) : item);\n    });\n\n    return result;\n  }\n\n  /** Asserts that the heatmap object has been initialized. */\n  private _assertInitialized(): asserts this is {heatmap: google.maps.visualization.HeatmapLayer} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.',\n        );\n      }\n      if (!this.heatmap) {\n        throw Error(\n          'Cannot interact with a Google Map HeatmapLayer before it has been ' +\n            'initialized. Please wait for the heatmap to load before trying to interact with it.',\n        );\n      }\n    }\n  }\n}\n\n/** Asserts that an object is a `LatLngLiteral`. */\nfunction isLatLngLiteral(value: any): value is google.maps.LatLngLiteral {\n  return value && typeof value.lat === 'number' && typeof value.lng === 'number';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {GoogleMap} from './google-map/google-map';\nimport {MapBaseLayer} from './map-base-layer';\nimport {MapBicyclingLayer} from './map-bicycling-layer/map-bicycling-layer';\nimport {MapCircle} from './map-circle/map-circle';\nimport {MapDirectionsRenderer} from './map-directions-renderer/map-directions-renderer';\nimport {MapGroundOverlay} from './map-ground-overlay/map-ground-overlay';\nimport {MapInfoWindow} from './map-info-window/map-info-window';\nimport {MapKmlLayer} from './map-kml-layer/map-kml-layer';\nimport {MapMarker} from './map-marker/map-marker';\nimport {MapMarkerClusterer} from './map-marker-clusterer/map-marker-clusterer';\nimport {MapPolygon} from './map-polygon/map-polygon';\nimport {MapPolyline} from './map-polyline/map-polyline';\nimport {MapRectangle} from './map-rectangle/map-rectangle';\nimport {MapTrafficLayer} from './map-traffic-layer/map-traffic-layer';\nimport {MapTransitLayer} from './map-transit-layer/map-transit-layer';\nimport {MapHeatmapLayer} from './map-heatmap-layer/map-heatmap-layer';\n\nconst COMPONENTS = [\n  GoogleMap,\n  MapBaseLayer,\n  MapBicyclingLayer,\n  MapCircle,\n  MapDirectionsRenderer,\n  MapGroundOverlay,\n  MapInfoWindow,\n  MapKmlLayer,\n  MapMarker,\n  MapMarkerClusterer,\n  MapPolygon,\n  MapPolyline,\n  MapRectangle,\n  MapTrafficLayer,\n  MapTransitLayer,\n  MapHeatmapLayer,\n];\n\n@NgModule({\n  declarations: COMPONENTS,\n  exports: COMPONENTS,\n})\nexport class GoogleMapsModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"google.maps\" />\n\nimport {Injectable, NgZone} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nexport interface MapDirectionsResponse {\n  status: google.maps.DirectionsStatus;\n  result?: google.maps.DirectionsResult;\n}\n\n/**\n * Angular service that wraps the Google Maps DirectionsService from the Google Maps JavaScript\n * API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsService\n */\n@Injectable({providedIn: 'root'})\nexport class MapDirectionsService {\n  private _directionsService: google.maps.DirectionsService | undefined;\n\n  constructor(private readonly _ngZone: NgZone) {}\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsService.route\n   */\n  route(request: google.maps.DirectionsRequest): Observable<MapDirectionsResponse> {\n    return new Observable(observer => {\n      // Initialize the `DirectionsService` lazily since the Google Maps API may\n      // not have been loaded when the provider is instantiated.\n      if (!this._directionsService) {\n        this._directionsService = new google.maps.DirectionsService();\n      }\n\n      this._directionsService.route(request, (result, status) => {\n        this._ngZone.run(() => {\n          observer.next({result: result || undefined, status});\n          observer.complete();\n        });\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"google.maps\" />\n\nimport {Injectable, NgZone} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nexport interface MapGeocoderResponse {\n  status: google.maps.GeocoderStatus;\n  results: google.maps.GeocoderResult[];\n}\n\n/**\n * Angular service that wraps the Google Maps Geocoder from the Google Maps JavaScript API.\n * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder\n */\n@Injectable({providedIn: 'root'})\nexport class MapGeocoder {\n  private _geocoder: google.maps.Geocoder | undefined;\n\n  constructor(private readonly _ngZone: NgZone) {}\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder.geocode\n   */\n  geocode(request: google.maps.GeocoderRequest): Observable<MapGeocoderResponse> {\n    return new Observable(observer => {\n      // Initialize the `Geocoder` lazily since the Google Maps API may\n      // not have been loaded when the provider is instantiated.\n      if (!this._geocoder) {\n        this._geocoder = new google.maps.Geocoder();\n      }\n\n      this._geocoder.geocode(request, (results, status) => {\n        this._ngZone.run(() => {\n          observer.next({results: results || [], status});\n          observer.complete();\n        });\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {GoogleMap} from './google-map/google-map';\nexport {GoogleMapsModule} from './google-maps-module';\nexport {MapAnchorPoint} from './map-anchor-point';\nexport {MapBaseLayer} from './map-base-layer';\nexport {MapBicyclingLayer} from './map-bicycling-layer/map-bicycling-layer';\nexport {MapCircle} from './map-circle/map-circle';\nexport {MapDirectionsRenderer} from './map-directions-renderer/map-directions-renderer';\nexport {\n  MapDirectionsService,\n  MapDirectionsResponse,\n} from './map-directions-renderer/map-directions-service';\nexport {MapGroundOverlay} from './map-ground-overlay/map-ground-overlay';\nexport {MapInfoWindow} from './map-info-window/map-info-window';\nexport {MapKmlLayer} from './map-kml-layer/map-kml-layer';\nexport {MapMarker} from './map-marker/map-marker';\nexport {MapMarkerClusterer} from './map-marker-clusterer/map-marker-clusterer';\nexport {MapPolygon} from './map-polygon/map-polygon';\nexport {MapPolyline} from './map-polyline/map-polyline';\nexport {MapRectangle} from './map-rectangle/map-rectangle';\nexport {MapTrafficLayer} from './map-traffic-layer/map-traffic-layer';\nexport {MapTransitLayer} from './map-transit-layer/map-transit-layer';\nexport {MapHeatmapLayer, HeatmapData} from './map-heatmap-layer/map-heatmap-layer';\nexport {MapGeocoder, MapGeocoderResponse} from './map-geocoder/map-geocoder';\nexport {\n  MarkerClustererOptions,\n  ClusterIconStyle,\n  AriaLabelFn,\n  Calculator,\n} from './map-marker-clusterer/marker-clusterer-types';\nexport {MapEventManager} from './map-event-manager';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.GoogleMap"],"mappings":"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"}