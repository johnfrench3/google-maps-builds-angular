{"version":3,"file":"google-maps.js","sources":["../../../../../../src/google-maps/map-event-manager.ts","../../../../../../src/google-maps/google-map/google-map.ts","../../../../../../src/google-maps/map-base-layer.ts","../../../../../../src/google-maps/map-bicycling-layer/map-bicycling-layer.ts","../../../../../../src/google-maps/map-circle/map-circle.ts","../../../../../../src/google-maps/map-directions-renderer/map-directions-renderer.ts","../../../../../../src/google-maps/map-ground-overlay/map-ground-overlay.ts","../../../../../../src/google-maps/map-info-window/map-info-window.ts","../../../../../../src/google-maps/map-kml-layer/map-kml-layer.ts","../../../../../../src/google-maps/map-marker/map-marker.ts","../../../../../../src/google-maps/map-marker-clusterer/map-marker-clusterer.ts","../../../../../../src/google-maps/map-polygon/map-polygon.ts","../../../../../../src/google-maps/map-polyline/map-polyline.ts","../../../../../../src/google-maps/map-rectangle/map-rectangle.ts","../../../../../../src/google-maps/map-traffic-layer/map-traffic-layer.ts","../../../../../../src/google-maps/map-transit-layer/map-transit-layer.ts","../../../../../../src/google-maps/map-heatmap-layer/map-heatmap-layer.ts","../../../../../../src/google-maps/google-maps-module.ts","../../../../../../src/google-maps/map-directions-renderer/map-directions-service.ts","../../../../../../src/google-maps/map-geocoder/map-geocoder.ts","../../../../../../src/google-maps/public-api.ts","../../../../../../src/google-maps/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgZone} from '@angular/core';\nimport {BehaviorSubject, Observable, Subscriber} from 'rxjs';\nimport {switchMap} from 'rxjs/operators';\n\ntype MapEventManagerTarget = {\n  addListener: (name: string, callback: (...args: any[]) => void) => google.maps.MapsEventListener;\n} | undefined;\n\n/** Manages event on a Google Maps object, ensuring that events are added only when necessary. */\nexport class MapEventManager {\n  /** Pending listeners that were added before the target was set. */\n  private _pending: {observable: Observable<any>, observer: Subscriber<any>}[] = [];\n  private _listeners: google.maps.MapsEventListener[] = [];\n  private _targetStream = new BehaviorSubject<MapEventManagerTarget>(undefined);\n\n  /** Clears all currently-registered event listeners. */\n  private _clearListeners() {\n    for (const listener of this._listeners) {\n      listener.remove();\n    }\n\n    this._listeners = [];\n  }\n\n  constructor(private _ngZone: NgZone) {}\n\n  /** Gets an observable that adds an event listener to the map when a consumer subscribes to it. */\n  getLazyEmitter<T>(name: string): Observable<T> {\n    return this._targetStream.pipe(switchMap(target => {\n      const observable = new Observable<T>(observer => {\n        // If the target hasn't been initialized yet, cache the observer so it can be added later.\n        if (!target) {\n          this._pending.push({observable, observer});\n          return undefined;\n        }\n\n        const listener = target.addListener(name, (event: T) => {\n          this._ngZone.run(() => observer.next(event));\n        });\n        this._listeners.push(listener);\n        return () => listener.remove();\n      });\n\n      return observable;\n    }));\n  }\n\n  /** Sets the current target that the manager should bind events to. */\n  setTarget(target: MapEventManagerTarget) {\n    const currentTarget = this._targetStream.value;\n\n    if (target === currentTarget) {\n      return;\n    }\n\n    // Clear the listeners from the pre-existing target.\n    if (currentTarget) {\n      this._clearListeners();\n      this._pending = [];\n    }\n\n    this._targetStream.next(target);\n\n    // Add the listeners that were bound before the map was initialized.\n    this._pending.forEach(subscriber => subscriber.observable.subscribe(subscriber.observer));\n    this._pending = [];\n  }\n\n  /** Destroys the manager and clears the event listeners. */\n  destroy() {\n    this._clearListeners();\n    this._pending = [];\n    this._targetStream.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n  Inject,\n  PLATFORM_ID,\n  NgZone,\n  SimpleChanges,\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\nimport {Observable} from 'rxjs';\nimport {MapEventManager} from '../map-event-manager';\n\ninterface GoogleMapsWindow extends Window {\n  google?: typeof google;\n}\n\n/** default options set to the Googleplex */\nexport const DEFAULT_OPTIONS: google.maps.MapOptions = {\n  center: {lat: 37.421995, lng: -122.084092},\n  zoom: 17\n};\n\n/** Arbitrary default height for the map element */\nexport const DEFAULT_HEIGHT = '500px';\n/** Arbitrary default width for the map element */\nexport const DEFAULT_WIDTH = '500px';\n\n/**\n * Angular component that renders a Google Map via the Google Maps JavaScript\n * API.\n * @see https://developers.google.com/maps/documentation/javascript/reference/\n */\n@Component({\n  selector: 'google-map',\n  exportAs: 'googleMap',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<div class=\"map-container\"></div><ng-content></ng-content>',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class GoogleMap implements OnChanges, OnInit, OnDestroy {\n  private _eventManager: MapEventManager = new MapEventManager(this._ngZone);\n  private _mapEl: HTMLElement;\n\n  /**\n   * The underlying google.maps.Map object\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/map#Map\n   */\n  googleMap?: google.maps.Map;\n\n  /** Whether we're currently rendering inside a browser. */\n  _isBrowser: boolean;\n\n  /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\n  @Input() height: string | number | null = DEFAULT_HEIGHT;\n\n  /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\n  @Input() width: string | number | null = DEFAULT_WIDTH;\n\n  /**\n   * Type of map that should be rendered. E.g. hybrid map, terrain map etc.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/map#MapTypeId\n   */\n  @Input() mapTypeId: google.maps.MapTypeId | undefined;\n\n  @Input()\n  set center(center: google.maps.LatLngLiteral|google.maps.LatLng) {\n    this._center = center;\n  }\n  private _center: google.maps.LatLngLiteral|google.maps.LatLng;\n\n  @Input()\n  set zoom(zoom: number) {\n    this._zoom = zoom;\n  }\n  private _zoom: number;\n\n  @Input()\n  set options(options: google.maps.MapOptions) {\n    this._options = options || DEFAULT_OPTIONS;\n  }\n  private _options = DEFAULT_OPTIONS;\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n   */\n  @Output()\n  boundsChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('bounds_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n   */\n  @Output()\n  centerChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('center_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n   */\n  @Output()\n  mapClick: Observable<google.maps.MapMouseEvent|google.maps.IconMouseEvent> = this._eventManager\n      .getLazyEmitter<google.maps.MapMouseEvent|google.maps.IconMouseEvent>('click');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n   */\n  @Output()\n  mapDblclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dblclick');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n   */\n  @Output() mapDrag: Observable<void> = this._eventManager.getLazyEmitter<void>('drag');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n   */\n  @Output() mapDragend: Observable<void> = this._eventManager.getLazyEmitter<void>('dragend');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n   */\n  @Output() mapDragstart: Observable<void> = this._eventManager.getLazyEmitter<void>('dragstart');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n   */\n  @Output()\n  headingChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('heading_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n   */\n  @Output() idle: Observable<void> = this._eventManager.getLazyEmitter<void>('idle');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n   */\n  @Output()\n  maptypeidChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('maptypeid_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n   */\n  @Output()\n  mapMousemove: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousemove');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n   */\n  @Output()\n  mapMouseout: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseout');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n   */\n  @Output()\n  mapMouseover: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseover');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n   */\n  @Output()\n  projectionChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('projection_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n   */\n  @Output()\n  mapRightclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('rightclick');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n   */\n  @Output() tilesloaded: Observable<void> = this._eventManager.getLazyEmitter<void>('tilesloaded');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n   */\n  @Output() tiltChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('tilt_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n   */\n  @Output() zoomChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('zoom_changed');\n\n  constructor(\n    private readonly _elementRef: ElementRef,\n    private _ngZone: NgZone,\n    @Inject(PLATFORM_ID) platformId: Object) {\n\n    this._isBrowser = isPlatformBrowser(platformId);\n\n    if (this._isBrowser) {\n      const googleMapsWindow: GoogleMapsWindow = window;\n      if (!googleMapsWindow.google && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(\n            'Namespace google not found, cannot construct embedded google ' +\n            'map. Please install the Google Maps JavaScript API: ' +\n            'https://developers.google.com/maps/documentation/javascript/' +\n            'tutorial#Loading_the_Maps_API');\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['height'] || changes['width']) {\n      this._setSize();\n    }\n\n    const googleMap = this.googleMap;\n\n    if (googleMap) {\n      if (changes['options'] && this._options) {\n        googleMap.setOptions(this._options);\n      }\n\n      if (changes['center'] && this._center) {\n        googleMap.setCenter(this._center);\n      }\n\n      // Note that the zoom can be zero.\n      if (changes['zoom'] && this._zoom != null) {\n        googleMap.setZoom(this._zoom);\n      }\n\n      if (changes['mapTypeId'] && this.mapTypeId) {\n        googleMap.setMapTypeId(this.mapTypeId);\n      }\n    }\n  }\n\n  ngOnInit() {\n    // It should be a noop during server-side rendering.\n    if (this._isBrowser) {\n      this._mapEl = this._elementRef.nativeElement.querySelector('.map-container')!;\n      this._setSize();\n\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.googleMap = new google.maps.Map(this._mapEl, this._combineOptions());\n      });\n      this._eventManager.setTarget(this.googleMap);\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n   */\n  fitBounds(\n      bounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral,\n      padding?: number|google.maps.Padding) {\n    this._assertInitialized();\n    this.googleMap.fitBounds(bounds, padding);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n   */\n  panBy(x: number, y: number) {\n    this._assertInitialized();\n    this.googleMap.panBy(x, y);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n   */\n  panTo(latLng: google.maps.LatLng|google.maps.LatLngLiteral) {\n    this._assertInitialized();\n    this.googleMap.panTo(latLng);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n   */\n  panToBounds(\n      latLngBounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral,\n      padding?: number|google.maps.Padding) {\n    this._assertInitialized();\n    this.googleMap.panToBounds(latLngBounds, padding);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds|null {\n    this._assertInitialized();\n    return this.googleMap.getBounds() || null;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n   */\n  getCenter(): google.maps.LatLng {\n    this._assertInitialized();\n    return this.googleMap.getCenter();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n   */\n  getClickableIcons(): boolean {\n    this._assertInitialized();\n    return this.googleMap.getClickableIcons();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n   */\n  getHeading(): number {\n    this._assertInitialized();\n    return this.googleMap.getHeading();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n   */\n  getMapTypeId(): google.maps.MapTypeId|string {\n    this._assertInitialized();\n    return this.googleMap.getMapTypeId();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n   */\n  getProjection(): google.maps.Projection|null {\n    this._assertInitialized();\n    return this.googleMap.getProjection();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n   */\n  getStreetView(): google.maps.StreetViewPanorama {\n    this._assertInitialized();\n    return this.googleMap.getStreetView();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n   */\n  getTilt(): number {\n    this._assertInitialized();\n    return this.googleMap.getTilt();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n   */\n  getZoom(): number {\n    this._assertInitialized();\n    return this.googleMap.getZoom();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n   */\n  get controls(): google.maps.MVCArray<Node>[] {\n    this._assertInitialized();\n    return this.googleMap.controls;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n   */\n  get data(): google.maps.Data {\n    this._assertInitialized();\n    return this.googleMap.data;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n   */\n  get mapTypes(): google.maps.MapTypeRegistry {\n    this._assertInitialized();\n    return this.googleMap.mapTypes;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n   */\n  get overlayMapTypes(): google.maps.MVCArray<google.maps.MapType> {\n    this._assertInitialized();\n    return this.googleMap.overlayMapTypes;\n  }\n\n  private _setSize() {\n    if (this._mapEl) {\n      const styles = this._mapEl.style;\n      styles.height =\n          this.height === null ? '' : (coerceCssPixelValue(this.height) || DEFAULT_HEIGHT);\n      styles.width = this.width === null ? '' : (coerceCssPixelValue(this.width) || DEFAULT_WIDTH);\n    }\n  }\n\n  /** Combines the center and zoom and the other map options into a single object */\n  private _combineOptions(): google.maps.MapOptions {\n    const options = this._options;\n    return {\n      ...options,\n      // It's important that we set **some** kind of `center` and `zoom`, otherwise\n      // Google Maps will render a blank rectangle which looks broken.\n      center: this._center || options.center || DEFAULT_OPTIONS.center,\n      zoom: this._zoom ?? options.zoom ?? DEFAULT_OPTIONS.zoom,\n      mapTypeId: this.mapTypeId\n    };\n  }\n\n  /** Asserts that the map has been initialized. */\n  private _assertInitialized(): asserts this is {googleMap: google.maps.Map} {\n    if (!this.googleMap && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                  'Please wait for the API to load before trying to interact with it.');\n    }\n  }\n}\n\nconst cssUnitsPattern = /([A-Za-z%]+)$/;\n\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value: any): string {\n  if (value == null) {\n    return '';\n  }\n\n  return cssUnitsPattern.test(value) ? value : `${value}px`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, NgZone, OnDestroy, OnInit} from '@angular/core';\n\nimport {GoogleMap} from './google-map/google-map';\n\n@Directive({\n  selector: 'map-base-layer',\n  exportAs: 'mapBaseLayer',\n})\nexport class MapBaseLayer implements OnInit, OnDestroy {\n  constructor(protected readonly _map: GoogleMap, protected readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._ngZone.runOutsideAngular(() => {\n        this._initializeObject();\n      });\n      this._assertInitialized();\n      this._setMap();\n    }\n  }\n\n  ngOnDestroy() {\n    this._unsetMap();\n  }\n\n  private _assertInitialized() {\n    if (!this._map.googleMap) {\n      throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.');\n    }\n  }\n\n  protected _initializeObject() {}\n  protected _setMap() {}\n  protected _unsetMap() {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive} from '@angular/core';\n\nimport {MapBaseLayer} from '../map-base-layer';\n\n/**\n * Angular component that renders a Google Maps Bicycling Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n */\n@Directive({\n  selector: 'map-bicycling-layer',\n  exportAs: 'mapBicyclingLayer',\n})\nexport class MapBicyclingLayer extends MapBaseLayer {\n  /**\n   * The underlying google.maps.BicyclingLayer object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n   */\n  bicyclingLayer?: google.maps.BicyclingLayer;\n\n  protected _initializeObject() {\n    this.bicyclingLayer = new google.maps.BicyclingLayer();\n  }\n\n  protected _setMap() {\n    this._assertLayerInitialized();\n    this.bicyclingLayer.setMap(this._map.googleMap!);\n  }\n\n  protected _unsetMap() {\n    if (this.bicyclingLayer) {\n      this.bicyclingLayer.setMap(null);\n    }\n  }\n\n  private _assertLayerInitialized(): asserts this is {bicyclingLayer: google.maps.BicyclingLayer} {\n    if (!this.bicyclingLayer) {\n      throw Error(\n          'Cannot interact with a Google Map Bicycling Layer before it has been initialized. ' +\n          'Please wait for the Transit Layer to load before trying to interact with it.');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, Input, NgZone, OnDestroy, OnInit, Output} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n */\n@Directive({\n  selector: 'map-circle',\n  exportAs: 'mapCircle',\n})\nexport class MapCircle implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.CircleOptions>({});\n  private readonly _center =\n      new BehaviorSubject<google.maps.LatLng|google.maps.LatLngLiteral|undefined>(undefined);\n  private readonly _radius = new BehaviorSubject<number|undefined>(undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * Underlying google.maps.Circle object.\n   *\n   * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n   */\n  circle?: google.maps.Circle;  // initialized in ngOnInit\n\n  @Input()\n  set options(options: google.maps.CircleOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set center(center: google.maps.LatLng|google.maps.LatLngLiteral) {\n    this._center.next(center);\n  }\n\n  @Input()\n  set radius(radius: number) {\n    this._radius.next(radius);\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n   */\n  @Output()\n  centerChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('center_changed');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n   */\n  @Output()\n  circleClick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('click');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n   */\n  @Output()\n  circleDblclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dblclick');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n   */\n  @Output()\n  circleDrag: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('drag');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n   */\n  @Output()\n  circleDragend: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragend');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n   */\n  @Output()\n  circleDragstart: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragstart');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n   */\n  @Output()\n  circleMousedown: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousedown');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n   */\n  @Output()\n  circleMousemove: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousemove');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n   */\n  @Output()\n  circleMouseout: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseout');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n   */\n  @Output()\n  circleMouseover: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseover');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n   */\n  @Output()\n  circleMouseup: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseup');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n   */\n  @Output()\n  radiusChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('radius_changed');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n   */\n  @Output()\n  circleRightclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('rightclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.circle = new google.maps.Circle(options);\n        });\n        this._assertInitialized();\n        this.circle.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.circle);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForCenterChanges();\n      this._watchForRadiusChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.circle) {\n      this.circle.setMap(null);\n    }\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds {\n    this._assertInitialized();\n    return this.circle.getBounds();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n   */\n  getCenter(): google.maps.LatLng {\n    this._assertInitialized();\n    return this.circle.getCenter();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.circle.getDraggable();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.circle.getEditable();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n   */\n  getRadius(): number {\n    this._assertInitialized();\n    return this.circle.getRadius();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.circle.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.CircleOptions> {\n    return combineLatest([this._options, this._center, this._radius])\n        .pipe(map(([options, center, radius]) => {\n          const combinedOptions: google.maps.CircleOptions = {\n            ...options,\n            center: center || options.center,\n            radius: radius !== undefined ? radius : options.radius,\n          };\n          return combinedOptions;\n        }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.circle.setOptions(options);\n    });\n  }\n\n  private _watchForCenterChanges() {\n    this._center.pipe(takeUntil(this._destroyed)).subscribe(center => {\n      if (center) {\n        this._assertInitialized();\n        this.circle.setCenter(center);\n      }\n    });\n  }\n\n  private _watchForRadiusChanges() {\n    this._radius.pipe(takeUntil(this._destroyed)).subscribe(radius => {\n      if (radius !== undefined) {\n        this._assertInitialized();\n        this.circle.setRadius(radius);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {circle: google.maps.Circle} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.circle) {\n        throw Error(\n          'Cannot interact with a Google Map Circle before it has been ' +\n          'initialized. Please wait for the Circle to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Directive,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Directions Renderer via the Google Maps\n * JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsRenderer\n */\n@Directive({\n  selector: 'map-directions-renderer',\n  exportAs: 'mapDirectionsRenderer',\n})\nexport class MapDirectionsRenderer implements OnInit, OnChanges, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRendererOptions.directions\n   */\n  @Input()\n  set directions(directions: google.maps.DirectionsResult) {\n    this._directions = directions;\n  }\n  private _directions: google.maps.DirectionsResult;\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRendererOptions\n   */\n  @Input()\n  set options(options: google.maps.DirectionsRendererOptions) {\n    this._options = options;\n  }\n  private _options: google.maps.DirectionsRendererOptions;\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.directions_changed\n   */\n  @Output()\n  directionsChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('directions_changed');\n\n  /** The underlying google.maps.DirectionsRenderer object. */\n  directionsRenderer?: google.maps.DirectionsRenderer;\n\n  constructor(private readonly _googleMap: GoogleMap, private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.directionsRenderer = new google.maps.DirectionsRenderer(this._combineOptions());\n      });\n      this._assertInitialized();\n      this.directionsRenderer.setMap(this._googleMap.googleMap!);\n      this._eventManager.setTarget(this.directionsRenderer);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.directionsRenderer) {\n      if (changes['options']) {\n        this.directionsRenderer.setOptions(this._combineOptions());\n      }\n\n      if (changes['directions'] && this._directions !== undefined) {\n        this.directionsRenderer.setDirections(this._directions);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    if (this.directionsRenderer) {\n      this.directionsRenderer.setMap(null);\n    }\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getDirections\n   */\n  getDirections(): google.maps.DirectionsResult {\n    this._assertInitialized();\n    return this.directionsRenderer.getDirections();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getPanel\n   */\n  getPanel(): Node {\n    this._assertInitialized();\n    return this.directionsRenderer.getPanel();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getRouteIndex\n   */\n  getRouteIndex(): number {\n    this._assertInitialized();\n    return this.directionsRenderer.getRouteIndex();\n  }\n\n  private _combineOptions(): google.maps.DirectionsRendererOptions {\n    const options = this._options || {};\n    return {\n      ...options,\n      directions: this._directions || options.directions,\n      map: this._googleMap.googleMap,\n    };\n  }\n\n  private _assertInitialized():\n      asserts this is {directionsRenderer: google.maps.DirectionsRenderer} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.directionsRenderer) {\n        throw Error(\n            'Cannot interact with a Google Map Directions Renderer before it has been ' +\n            'initialized. Please wait for the Directions Renderer to load before trying ' +\n            'to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, Input, NgZone, OnDestroy, OnInit, Output} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Ground Overlay via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n */\n@Directive({\n  selector: 'map-ground-overlay',\n  exportAs: 'mapGroundOverlay',\n})\nexport class MapGroundOverlay implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n\n  private readonly _opacity = new BehaviorSubject<number>(1);\n  private readonly _url = new BehaviorSubject<string>('');\n  private readonly _bounds =\n      new BehaviorSubject<google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral|undefined>(\n          undefined);\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.GroundOverlay object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n   */\n  groundOverlay?: google.maps.GroundOverlay;\n\n  /** URL of the image that will be shown in the overlay. */\n  @Input()\n  set url(url: string) {\n    this._url.next(url);\n  }\n\n  /** Bounds for the overlay. */\n  @Input()\n  get bounds(): google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral {\n    return this._bounds.value!;\n  }\n  set bounds(bounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral) {\n    this._bounds.next(bounds);\n  }\n\n  /** Whether the overlay is clickable */\n  @Input() clickable: boolean = false;\n\n  /** Opacity of the overlay. */\n  @Input()\n  set opacity(opacity: number) {\n    this._opacity.next(opacity);\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay.click\n   */\n  @Output()\n  mapClick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.dblclick\n   */\n  @Output()\n  mapDblclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dblclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      // The ground overlay setup is slightly different from the other Google Maps objects in that\n      // we have to recreate the `GroundOverlay` object whenever the bounds change, because\n      // Google Maps doesn't provide an API to update the bounds of an existing overlay.\n      this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n        if (this.groundOverlay) {\n          this.groundOverlay.setMap(null);\n          this.groundOverlay = undefined;\n        }\n\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        if (bounds) {\n          this._ngZone.runOutsideAngular(() => {\n            this.groundOverlay = new google.maps.GroundOverlay(this._url.getValue(), bounds, {\n              clickable: this.clickable,\n              opacity: this._opacity.value,\n            });\n          });\n          this._assertInitialized();\n          this.groundOverlay.setMap(this._map.googleMap!);\n          this._eventManager.setTarget(this.groundOverlay);\n        }\n      });\n\n      this._watchForOpacityChanges();\n      this._watchForUrlChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.groundOverlay) {\n      this.groundOverlay.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds {\n    this._assertInitialized();\n    return this.groundOverlay.getBounds();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getOpacity\n   */\n  getOpacity(): number {\n    this._assertInitialized();\n    return this.groundOverlay.getOpacity();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getUrl\n   */\n  getUrl(): string {\n    this._assertInitialized();\n    return this.groundOverlay.getUrl();\n  }\n\n  private _watchForOpacityChanges() {\n    this._opacity.pipe(takeUntil(this._destroyed)).subscribe(opacity => {\n      if (opacity != null) {\n        this._assertInitialized();\n        this.groundOverlay.setOpacity(opacity);\n      }\n    });\n  }\n\n  private _watchForUrlChanges() {\n    this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n      this._assertInitialized();\n      const overlay = this.groundOverlay;\n      overlay.set('url', url);\n\n      // Google Maps only redraws the overlay if we re-set the map.\n      overlay.setMap(null);\n      overlay.setMap(this._map.googleMap!);\n    });\n  }\n\n  private _assertInitialized(): asserts this is {groundOverlay: google.maps.GroundOverlay} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.groundOverlay) {\n        throw Error(\n            'Cannot interact with a Google Map GroundOverlay before it has been initialized. ' +\n            'Please wait for the GroundOverlay to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\nimport {MapAnchorPoint} from '../map-anchor-point';\n\n/**\n * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/info-window\n */\n@Directive({\n  selector: 'map-info-window',\n  exportAs: 'mapInfoWindow',\n  host: {'style': 'display: none'},\n})\nexport class MapInfoWindow implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.InfoWindowOptions>({});\n  private readonly _position =\n      new BehaviorSubject<google.maps.LatLngLiteral|google.maps.LatLng|undefined>(undefined);\n  private readonly _destroy = new Subject<void>();\n\n  /**\n   * Underlying google.maps.InfoWindow\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow\n   */\n  infoWindow?: google.maps.InfoWindow;\n\n  @Input()\n  set options(options: google.maps.InfoWindowOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set position(position: google.maps.LatLngLiteral|google.maps.LatLng) {\n    this._position.next(position);\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n   */\n  @Output() closeclick: Observable<void> = this._eventManager.getLazyEmitter<void>('closeclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.content_changed\n   */\n  @Output()\n  contentChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('content_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n   */\n  @Output() domready: Observable<void> = this._eventManager.getLazyEmitter<void>('domready');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.position_changed\n   */\n  @Output()\n  positionChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('position_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.zindex_changed\n   */\n  @Output()\n  zindexChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('zindex_changed');\n\n  constructor(private readonly _googleMap: GoogleMap,\n              private _elementRef: ElementRef<HTMLElement>,\n              private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      const combinedOptionsChanges = this._combineOptions();\n\n      combinedOptionsChanges.pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.infoWindow = new google.maps.InfoWindow(options);\n        });\n\n        this._eventManager.setTarget(this.infoWindow);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForPositionChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroy.next();\n    this._destroy.complete();\n\n    // If no info window has been created on the server, we do not try closing it.\n    // On the server, an info window cannot be created and this would cause errors.\n    if (this.infoWindow) {\n      this.close();\n    }\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n   */\n  close() {\n    this._assertInitialized();\n    this.infoWindow.close();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n   */\n  getContent(): string|Node {\n    this._assertInitialized();\n    return this.infoWindow.getContent();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.getPosition\n   */\n  getPosition(): google.maps.LatLng|null {\n    this._assertInitialized();\n    return this.infoWindow.getPosition();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n   */\n  getZIndex(): number {\n    this._assertInitialized();\n    return this.infoWindow.getZIndex();\n  }\n\n  /**\n   * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n   * then the position property of the options input is used instead.\n   */\n  open(anchor?: MapAnchorPoint) {\n    this._assertInitialized();\n    const anchorObject = anchor ? anchor.getAnchor() : undefined;\n\n    // Prevent the info window from initializing when trying to reopen on the same anchor.\n    // Note that when the window is opened for the first time, the anchor will always be\n    // undefined. If that's the case, we have to allow it to open in order to handle the\n    // case where the window doesn't have an anchor, but is placed at a particular position.\n    if (this.infoWindow.get('anchor') !== anchorObject || !anchorObject) {\n      this._elementRef.nativeElement.style.display = '';\n      this.infoWindow.open(this._googleMap.googleMap, anchorObject);\n    }\n  }\n\n  private _combineOptions(): Observable<google.maps.InfoWindowOptions> {\n    return combineLatest([this._options, this._position]).pipe(map(([options, position]) => {\n      const combinedOptions: google.maps.InfoWindowOptions = {\n        ...options,\n        position: position || options.position,\n        content: this._elementRef.nativeElement,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroy)).subscribe(options => {\n      this._assertInitialized();\n      this.infoWindow.setOptions(options);\n    });\n  }\n\n  private _watchForPositionChanges() {\n    this._position.pipe(takeUntil(this._destroy)).subscribe(position => {\n      if (position) {\n        this._assertInitialized();\n        this.infoWindow.setPosition(position);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {infoWindow: google.maps.InfoWindow} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.infoWindow) {\n        throw Error(\n            'Cannot interact with a Google Map Info Window before it has been ' +\n            'initialized. Please wait for the Info Window to load before trying to interact with ' +\n            'it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Directive,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps KML Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n */\n@Directive({\n  selector: 'map-kml-layer',\n  exportAs: 'mapKmlLayer',\n})\nexport class MapKmlLayer implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.KmlLayerOptions>({});\n  private readonly _url = new BehaviorSubject<string>('');\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.KmlLayer object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n   */\n  kmlLayer?: google.maps.KmlLayer;\n\n  @Input()\n  set options(options: google.maps.KmlLayerOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set url(url: string) {\n    this._url.next(url);\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.click\n   */\n  @Output()\n  kmlClick: Observable<google.maps.KmlMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.KmlMouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/kml\n   * #KmlLayer.defaultviewport_changed\n   */\n  @Output()\n  defaultviewportChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('defaultviewport_changed');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.status_changed\n   */\n  @Output()\n  statusChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('status_changed');\n\n  constructor(private readonly _map: GoogleMap, private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => this.kmlLayer = new google.maps.KmlLayer(options));\n        this._assertInitialized();\n        this.kmlLayer.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.kmlLayer);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForUrlChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.kmlLayer) {\n      this.kmlLayer.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getDefaultViewport\n   */\n  getDefaultViewport(): google.maps.LatLngBounds {\n    this._assertInitialized();\n    return this.kmlLayer.getDefaultViewport();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getMetadata\n   */\n  getMetadata(): google.maps.KmlLayerMetadata {\n    this._assertInitialized();\n    return this.kmlLayer.getMetadata();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getStatus\n   */\n  getStatus(): google.maps.KmlLayerStatus {\n    this._assertInitialized();\n    return this.kmlLayer.getStatus();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getUrl\n   */\n  getUrl(): string {\n    this._assertInitialized();\n    return this.kmlLayer.getUrl();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getZIndex\n   */\n  getZIndex(): number {\n    this._assertInitialized();\n    return this.kmlLayer.getZIndex();\n  }\n\n  private _combineOptions(): Observable<google.maps.KmlLayerOptions> {\n    return combineLatest([this._options, this._url]).pipe(map(([options, url]) => {\n      const combinedOptions: google.maps.KmlLayerOptions = {\n        ...options,\n        url: url || options.url,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      if (this.kmlLayer) {\n        this._assertInitialized();\n        this.kmlLayer.setOptions(options);\n      }\n    });\n  }\n\n  private _watchForUrlChanges() {\n    this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n      if (url && this.kmlLayer) {\n        this._assertInitialized();\n        this.kmlLayer.setUrl(url);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is { kmlLayer: google.maps.KmlLayer } {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.kmlLayer) {\n        throw Error(\n            'Cannot interact with a Google Map KmlLayer before it has been ' +\n            'initialized. Please wait for the KmlLayer to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  NgZone,\n  Directive,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\nimport {MapAnchorPoint} from '../map-anchor-point';\n\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\nexport const DEFAULT_MARKER_OPTIONS = {\n  position: {lat: 37.421995, lng: -122.084092},\n};\n\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\n@Directive({\n  selector: 'map-marker',\n  exportAs: 'mapMarker',\n})\nexport class MapMarker implements OnInit, OnChanges, OnDestroy, MapAnchorPoint {\n  private _eventManager = new MapEventManager(this._ngZone);\n\n  /**\n   * Title of the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.title\n   */\n  @Input()\n  set title(title: string) {\n    this._title = title;\n  }\n  private _title: string;\n\n  /**\n   * Title of the marker. See:\n   * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.position\n   */\n  @Input()\n  set position(position: google.maps.LatLngLiteral|google.maps.LatLng) {\n    this._position = position;\n  }\n  private _position: google.maps.LatLngLiteral|google.maps.LatLng;\n\n  /**\n   * Label for the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.label\n   */\n  @Input()\n  set label(label: string|google.maps.MarkerLabel) {\n    this._label = label;\n  }\n  private _label: string|google.maps.MarkerLabel;\n\n  /**\n   * Whether the marker is clickable. See:\n   * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.clickable\n   */\n  @Input()\n  set clickable(clickable: boolean) {\n    this._clickable = clickable;\n  }\n  private _clickable: boolean;\n\n  /**\n   * Options used to configure the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions\n   */\n  @Input()\n  set options(options: google.maps.MarkerOptions) {\n    this._options = options;\n  }\n  private _options: google.maps.MarkerOptions;\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n   */\n  @Output()\n  animationChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('animation_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n   */\n  @Output()\n  mapClick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n   */\n  @Output()\n  clickableChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('clickable_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n   */\n  @Output()\n  cursorChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('cursor_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n   */\n  @Output()\n  mapDblclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dblclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n   */\n  @Output()\n  mapDrag: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('drag');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n   */\n  @Output()\n  mapDragend: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragend');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n   */\n  @Output()\n  draggableChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('draggable_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n   */\n  @Output()\n  mapDragstart: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragstart');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n   */\n  @Output() flatChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('flat_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n   */\n  @Output() iconChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('icon_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n   */\n  @Output()\n  mapMousedown: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousedown');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n   */\n  @Output()\n  mapMouseout: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseout');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n   */\n  @Output()\n  mapMouseover: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseover');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n   */\n  @Output()\n  mapMouseup: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseup');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n   */\n  @Output()\n  positionChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('position_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n   */\n  @Output()\n  mapRightclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('rightclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n   */\n  @Output() shapeChanged:\n  Observable<void> = this._eventManager.getLazyEmitter<void>('shape_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n   */\n  @Output()\n  titleChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('title_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n   */\n  @Output()\n  visibleChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('visible_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n   */\n  @Output()\n  zindexChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('zindex_changed');\n\n  /**\n   * The underlying google.maps.Marker object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/marker#Marker\n   */\n  marker?: google.maps.Marker;\n\n  constructor(\n    private readonly _googleMap: GoogleMap,\n    private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.marker = new google.maps.Marker(this._combineOptions());\n      });\n      this._assertInitialized();\n      this.marker.setMap(this._googleMap.googleMap!);\n      this._eventManager.setTarget(this.marker);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const {marker, _title, _position, _label, _clickable} = this;\n\n    if (marker) {\n      if (changes['options']) {\n        marker.setOptions(this._combineOptions());\n      }\n\n      if (changes['title'] && _title !== undefined) {\n        marker.setTitle(_title);\n      }\n\n      if (changes['position'] && _position) {\n        marker.setPosition(_position);\n      }\n\n      if (changes['label'] && _label !== undefined) {\n        marker.setLabel(_label);\n      }\n\n      if (changes['clickable'] && _clickable !== undefined) {\n        marker.setClickable(_clickable);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    if (this.marker) {\n      this.marker.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n   */\n  getAnimation(): google.maps.Animation|null {\n    this._assertInitialized();\n    return this.marker.getAnimation() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n   */\n  getClickable(): boolean {\n    this._assertInitialized();\n    return this.marker.getClickable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n   */\n  getCursor(): string|null {\n    this._assertInitialized();\n    return this.marker.getCursor() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return !!this.marker.getDraggable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n   */\n  getIcon(): string|google.maps.Icon|google.maps.Symbol|null {\n    this._assertInitialized();\n    return this.marker.getIcon() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n   */\n  getLabel(): google.maps.MarkerLabel|null {\n    this._assertInitialized();\n    return this.marker.getLabel() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n   */\n  getOpacity(): number|null {\n    this._assertInitialized();\n    return this.marker.getOpacity() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n   */\n  getPosition(): google.maps.LatLng|null {\n    this._assertInitialized();\n    return this.marker.getPosition() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n   */\n  getShape(): google.maps.MarkerShape|null {\n    this._assertInitialized();\n    return this.marker.getShape() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n   */\n  getTitle(): string|null {\n    this._assertInitialized();\n    return this.marker.getTitle() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.marker.getVisible();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n   */\n  getZIndex(): number|null {\n    this._assertInitialized();\n    return this.marker.getZIndex() || null;\n  }\n\n  /** Gets the anchor point that can be used to attach other Google Maps objects. */\n  getAnchor(): google.maps.MVCObject {\n    this._assertInitialized();\n    return this.marker;\n  }\n\n  /** Creates a combined options object using the passed-in options and the individual inputs. */\n  private _combineOptions(): google.maps.MarkerOptions {\n    const options = this._options || DEFAULT_MARKER_OPTIONS;\n    return {\n      ...options,\n      title: this._title || options.title,\n      position: this._position || options.position,\n      label: this._label || options.label,\n      clickable: this._clickable !== undefined ? this._clickable : options.clickable,\n      map: this._googleMap.googleMap,\n    };\n  }\n\n  private _assertInitialized(): asserts this is {marker: google.maps.Marker} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.marker) {\n        throw Error(\n            'Cannot interact with a Google Map Marker before it has been ' +\n            'initialized. Please wait for the Marker to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n/// <reference path=\"marker-clusterer-types.ts\" />\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\nimport {MapMarker} from '../map-marker/map-marker';\n\n/** Default options for a clusterer. */\nconst DEFAULT_CLUSTERER_OPTIONS: MarkerClustererOptions = {};\n\n/**\n * Angular component for implementing a Google Maps Marker Clusterer.\n *\n * See https://developers.google.com/maps/documentation/javascript/marker-clustering\n */\n@Component({\n  selector: 'map-marker-clusterer',\n  exportAs: 'mapMarkerClusterer',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MapMarkerClusterer implements OnInit, AfterContentInit, OnChanges, OnDestroy {\n  private readonly _currentMarkers = new Set<google.maps.Marker>();\n  private readonly _eventManager = new MapEventManager(this._ngZone);\n  private readonly _destroy = new Subject<void>();\n\n  /** Whether the clusterer is allowed to be initialized. */\n  private readonly _canInitialize: boolean;\n\n  @Input()\n  ariaLabelFn: AriaLabelFn = () => ''\n\n  @Input()\n  set averageCenter(averageCenter: boolean) {\n    this._averageCenter = averageCenter;\n  }\n  private _averageCenter: boolean;\n\n  @Input() batchSize?: number;\n\n  @Input()\n  set batchSizeIE(batchSizeIE: number) {\n    this._batchSizeIE = batchSizeIE;\n  }\n  private _batchSizeIE: number;\n\n  @Input()\n  set calculator(calculator: Calculator) {\n    this._calculator = calculator;\n  }\n  private _calculator: Calculator;\n\n  @Input()\n  set clusterClass(clusterClass: string) {\n    this._clusterClass = clusterClass;\n  }\n  private _clusterClass: string;\n\n  @Input()\n  set enableRetinaIcons(enableRetinaIcons: boolean) {\n    this._enableRetinaIcons = enableRetinaIcons;\n  }\n  private _enableRetinaIcons: boolean;\n\n  @Input()\n  set gridSize(gridSize: number) {\n    this._gridSize = gridSize;\n  }\n  private _gridSize: number;\n\n  @Input()\n  set ignoreHidden(ignoreHidden: boolean) {\n    this._ignoreHidden = ignoreHidden;\n  }\n  private _ignoreHidden: boolean;\n\n  @Input()\n  set imageExtension(imageExtension: string) {\n    this._imageExtension = imageExtension;\n  }\n  private _imageExtension: string;\n\n  @Input()\n  set imagePath(imagePath: string) {\n    this._imagePath = imagePath;\n  }\n  private _imagePath: string;\n\n  @Input()\n  set imageSizes(imageSizes: number[]) {\n    this._imageSizes = imageSizes;\n  }\n  private _imageSizes: number[];\n\n  @Input()\n  set maxZoom(maxZoom: number) {\n    this._maxZoom = maxZoom;\n  }\n  private _maxZoom: number;\n\n  @Input()\n  set minimumClusterSize(minimumClusterSize: number) {\n    this._minimumClusterSize = minimumClusterSize;\n  }\n  private _minimumClusterSize: number;\n\n  @Input()\n  set styles(styles: ClusterIconStyle[]) {\n    this._styles = styles;\n  }\n  private _styles: ClusterIconStyle[];\n\n  @Input()\n  set title(title: string) {\n    this._title = title;\n  }\n  private _title: string;\n\n  @Input()\n  set zIndex(zIndex: number) {\n    this._zIndex = zIndex;\n  }\n  private _zIndex: number;\n\n  @Input()\n  set zoomOnClick(zoomOnClick: boolean) {\n    this._zoomOnClick = zoomOnClick;\n  }\n  private _zoomOnClick: boolean;\n\n  @Input()\n  set options(options: MarkerClustererOptions) {\n    this._options = options;\n  }\n  private _options: MarkerClustererOptions;\n\n  /**\n   * See\n   * googlemaps.github.io/v3-utility-library/modules/\n   * _google_markerclustererplus.html#clusteringbegin\n   */\n  @Output()\n  clusteringbegin: Observable<void> = this._eventManager.getLazyEmitter<void>('clusteringbegin');\n\n  /**\n   * See\n   * googlemaps.github.io/v3-utility-library/modules/_google_markerclustererplus.html#clusteringend\n   */\n  @Output()\n  clusteringend: Observable<void> = this._eventManager.getLazyEmitter<void>('clusteringend');\n\n  @ContentChildren(MapMarker, {descendants: true}) _markers: QueryList<MapMarker>;\n\n  /**\n   * The underlying MarkerClusterer object.\n   *\n   * See\n   * googlemaps.github.io/v3-utility-library/classes/\n   * _google_markerclustererplus.markerclusterer.html\n   */\n  markerClusterer?: MarkerClusterer;\n\n  constructor(private readonly _googleMap: GoogleMap, private readonly _ngZone: NgZone) {\n    this._canInitialize = this._googleMap._isBrowser;\n  }\n\n  ngOnInit() {\n    if (this._canInitialize) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.markerClusterer = new MarkerClusterer(this._googleMap.googleMap!, [],\n            this._combineOptions());\n      });\n\n      this._assertInitialized();\n      this._eventManager.setTarget(this.markerClusterer);\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this._canInitialize) {\n      this._watchForMarkerChanges();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const {\n      markerClusterer: clusterer, ariaLabelFn, _averageCenter, _batchSizeIE, _calculator, _styles,\n      _clusterClass, _enableRetinaIcons, _gridSize, _ignoreHidden, _imageExtension, _imagePath,\n      _imageSizes, _maxZoom, _minimumClusterSize, _title, _zIndex, _zoomOnClick\n    } = this;\n\n    if (clusterer) {\n      if (changes['options']) {\n        clusterer.setOptions(this._combineOptions());\n      }\n      if (changes['ariaLabelFn']) {\n        clusterer.ariaLabelFn = ariaLabelFn;\n      }\n      if (changes['averageCenter'] && _averageCenter !== undefined) {\n        clusterer.setAverageCenter(_averageCenter);\n      }\n      if (changes['batchSizeIE'] && _batchSizeIE !== undefined) {\n        clusterer.setBatchSizeIE(_batchSizeIE);\n      }\n      if (changes['calculator'] && _calculator) {\n        clusterer.setCalculator(_calculator);\n      }\n      if (changes['clusterClass'] && _clusterClass !== undefined) {\n        clusterer.setClusterClass(_clusterClass);\n      }\n      if (changes['enableRetinaIcons'] && _enableRetinaIcons !== undefined) {\n        clusterer.setEnableRetinaIcons(_enableRetinaIcons);\n      }\n      if (changes['gridSize'] && _gridSize !== undefined) {\n        clusterer.setGridSize(_gridSize);\n      }\n      if (changes['ignoreHidden'] && _ignoreHidden !== undefined) {\n        clusterer.setIgnoreHidden(_ignoreHidden);\n      }\n      if (changes['imageExtension'] && _imageExtension !== undefined) {\n        clusterer.setImageExtension(_imageExtension);\n      }\n      if (changes['imagePath'] && _imagePath !== undefined) {\n        clusterer.setImagePath(_imagePath);\n      }\n      if (changes['imageSizes'] && _imageSizes) {\n        clusterer.setImageSizes(_imageSizes);\n      }\n      if (changes['maxZoom'] && _maxZoom !== undefined) {\n        clusterer.setMaxZoom(_maxZoom);\n      }\n      if (changes['minimumClusterSize'] && _minimumClusterSize !== undefined) {\n        clusterer.setMinimumClusterSize(_minimumClusterSize);\n      }\n      if (changes['styles'] && _styles) {\n        clusterer.setStyles(_styles);\n      }\n      if (changes['title'] && _title !== undefined) {\n        clusterer.setTitle(_title);\n      }\n      if (changes['zIndex'] && _zIndex !== undefined) {\n        clusterer.setZIndex(_zIndex);\n      }\n      if (changes['zoomOnClick'] && _zoomOnClick !== undefined) {\n        clusterer.setZoomOnClick(_zoomOnClick);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n    this._eventManager.destroy();\n    if (this.markerClusterer) {\n      this.markerClusterer.setMap(null);\n    }\n  }\n\n  fitMapToMarkers(padding: number|google.maps.Padding) {\n    this._assertInitialized();\n    this.markerClusterer.fitMapToMarkers(padding);\n  }\n\n  getAverageCenter(): boolean {\n    this._assertInitialized();\n    return this.markerClusterer.getAverageCenter();\n  }\n\n  getBatchSizeIE(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getBatchSizeIE();\n  }\n\n  getCalculator(): Calculator {\n    this._assertInitialized();\n    return this.markerClusterer.getCalculator();\n  }\n\n  getClusterClass(): string {\n    this._assertInitialized();\n    return this.markerClusterer.getClusterClass();\n  }\n\n  getClusters(): Cluster[] {\n    this._assertInitialized();\n    return this.markerClusterer.getClusters();\n  }\n\n  getEnableRetinaIcons(): boolean {\n    this._assertInitialized();\n    return this.markerClusterer.getEnableRetinaIcons();\n  }\n\n  getGridSize(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getGridSize();\n  }\n\n  getIgnoreHidden(): boolean {\n    this._assertInitialized();\n    return this.markerClusterer.getIgnoreHidden();\n  }\n\n  getImageExtension(): string {\n    this._assertInitialized();\n    return this.markerClusterer.getImageExtension();\n  }\n\n  getImagePath(): string {\n    this._assertInitialized();\n    return this.markerClusterer.getImagePath();\n  }\n\n  getImageSizes(): number[] {\n    this._assertInitialized();\n    return this.markerClusterer.getImageSizes();\n  }\n\n  getMaxZoom(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getMaxZoom();\n  }\n\n  getMinimumClusterSize(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getMinimumClusterSize();\n  }\n\n  getStyles(): ClusterIconStyle[] {\n    this._assertInitialized();\n    return this.markerClusterer.getStyles();\n  }\n\n  getTitle(): string {\n    this._assertInitialized();\n    return this.markerClusterer.getTitle();\n  }\n\n  getTotalClusters(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getTotalClusters();\n  }\n\n  getTotalMarkers(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getTotalMarkers();\n  }\n\n  getZIndex(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getZIndex();\n  }\n\n  getZoomOnClick(): boolean {\n    this._assertInitialized();\n    return this.markerClusterer.getZoomOnClick();\n  }\n\n  private _combineOptions(): MarkerClustererOptions {\n    const options = this._options || DEFAULT_CLUSTERER_OPTIONS;\n    return {\n      ...options,\n      ariaLabelFn: this.ariaLabelFn ?? options.ariaLabelFn,\n      averageCenter: this._averageCenter ?? options.averageCenter,\n      batchSize: this.batchSize ?? options.batchSize,\n      batchSizeIE: this._batchSizeIE ?? options.batchSizeIE,\n      calculator: this._calculator ?? options.calculator,\n      clusterClass: this._clusterClass ?? options.clusterClass,\n      enableRetinaIcons: this._enableRetinaIcons ?? options.enableRetinaIcons,\n      gridSize: this._gridSize ?? options.gridSize,\n      ignoreHidden: this._ignoreHidden ?? options.ignoreHidden,\n      imageExtension: this._imageExtension ?? options.imageExtension,\n      imagePath: this._imagePath ?? options.imagePath,\n      imageSizes: this._imageSizes ?? options.imageSizes,\n      maxZoom: this._maxZoom ?? options.maxZoom,\n      minimumClusterSize: this._minimumClusterSize ?? options.minimumClusterSize,\n      styles: this._styles ?? options.styles,\n      title: this._title ?? options.title,\n      zIndex: this._zIndex ?? options.zIndex,\n      zoomOnClick: this._zoomOnClick ?? options.zoomOnClick,\n    };\n  }\n\n  private _watchForMarkerChanges() {\n    this._assertInitialized();\n    const initialMarkers: google.maps.Marker[] = [];\n    for (const marker of this._getInternalMarkers(this._markers.toArray())) {\n      this._currentMarkers.add(marker);\n      initialMarkers.push(marker);\n    }\n    this.markerClusterer.addMarkers(initialMarkers);\n\n    this._markers.changes.pipe(takeUntil(this._destroy)).subscribe(\n      (markerComponents: MapMarker[]) => {\n        this._assertInitialized();\n        const newMarkers = new Set<google.maps.Marker>(this._getInternalMarkers(markerComponents));\n        const markersToAdd: google.maps.Marker[] = [];\n        const markersToRemove: google.maps.Marker[] = [];\n        for (const marker of Array.from(newMarkers)) {\n          if (!this._currentMarkers.has(marker)) {\n            this._currentMarkers.add(marker);\n            markersToAdd.push(marker);\n          }\n        }\n        for (const marker of Array.from(this._currentMarkers)) {\n          if (!newMarkers.has(marker)) {\n            markersToRemove.push(marker);\n          }\n        }\n        this.markerClusterer.addMarkers(markersToAdd, true);\n        this.markerClusterer.removeMarkers(markersToRemove, true);\n        this.markerClusterer.repaint();\n        for (const marker of markersToRemove) {\n          this._currentMarkers.delete(marker);\n        }\n    });\n  }\n\n  private _getInternalMarkers(markers: MapMarker[]): google.maps.Marker[] {\n    return markers.filter(markerComponent => !!markerComponent.marker)\n        .map(markerComponent => markerComponent.marker!);\n  }\n\n  private _assertInitialized(): asserts this is {markerClusterer: MarkerClusterer} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.markerClusterer) {\n        throw Error(\n          'Cannot interact with a MarkerClusterer before it has been initialized. ' +\n          'Please wait for the MarkerClusterer to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Directive,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  NgZone,\n} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Polygon via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n */\n@Directive({\n  selector: 'map-polygon',\n  exportAs: 'mapPolygon',\n})\nexport class MapPolygon implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.PolygonOptions>({});\n  private readonly _paths =\n      new BehaviorSubject<google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>>|\n                          google.maps.MVCArray<google.maps.LatLng>|google.maps.LatLng[]|\n                          google.maps.LatLngLiteral[]|undefined>(undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.Polygon object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n   */\n  polygon?: google.maps.Polygon;\n\n  @Input()\n  set options(options: google.maps.PolygonOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set paths(paths: google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>>|\n            google.maps.MVCArray<google.maps.LatLng>|google.maps.LatLng[]|\n            google.maps.LatLngLiteral[]) {\n    this._paths.next(paths);\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.click\n   */\n  @Output()\n  polygonClick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('click');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dblclick\n   */\n  @Output()\n  polygonDblclick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('dblclick');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.drag\n   */\n  @Output()\n  polygonDrag: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('drag');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragend\n   */\n  @Output()\n  polygonDragend: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragend');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragstart\n   */\n  @Output()\n  polygonDragstart: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragstart');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousedown\n   */\n  @Output()\n  polygonMousedown: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousedown');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousemove\n   */\n  @Output()\n  polygonMousemove: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousemove');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseout\n   */\n  @Output()\n  polygonMouseout: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseout');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseover\n   */\n  @Output()\n  polygonMouseover: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseover');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseup\n   */\n  @Output()\n  polygonMouseup: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseup');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.rightclick\n   */\n  @Output()\n  polygonRightclick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('rightclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.polygon = new google.maps.Polygon(options);\n        });\n        this._assertInitialized();\n        this.polygon.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.polygon);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForPathChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.polygon) {\n      this.polygon.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.polygon.getDraggable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.polygon.getEditable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPath\n   */\n  getPath(): google.maps.MVCArray<google.maps.LatLng> {\n    this._assertInitialized();\n    return this.polygon.getPath();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPaths\n   */\n  getPaths(): google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>> {\n    this._assertInitialized();\n    return this.polygon.getPaths();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.polygon.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.PolygonOptions> {\n    return combineLatest([this._options, this._paths]).pipe(map(([options, paths]) => {\n      const combinedOptions: google.maps.PolygonOptions = {\n        ...options,\n        paths: paths || options.paths,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.polygon.setOptions(options);\n    });\n  }\n\n  private _watchForPathChanges() {\n    this._paths.pipe(takeUntil(this._destroyed)).subscribe(paths => {\n      if (paths) {\n        this._assertInitialized();\n        this.polygon.setPaths(paths);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {polygon: google.maps.Polygon} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.polygon) {\n        throw Error(\n            'Cannot interact with a Google Map Polygon before it has been ' +\n            'initialized. Please wait for the Polygon to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Directive,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  NgZone,\n} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Polyline via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n */\n@Directive({\n  selector: 'map-polyline',\n  exportAs: 'mapPolyline',\n})\nexport class MapPolyline implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.PolylineOptions>({});\n  private readonly _path =\n      new BehaviorSubject<google.maps.MVCArray<google.maps.LatLng>|google.maps.LatLng[]|\n                          google.maps.LatLngLiteral[]|undefined>(undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.Polyline object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n   */\n  polyline?: google.maps.Polyline;\n\n  @Input()\n  set options(options: google.maps.PolylineOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set path(path: google.maps.MVCArray<google.maps.LatLng>|google.maps.LatLng[]|\n           google.maps.LatLngLiteral[]) {\n    this._path.next(path);\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.click\n   */\n  @Output()\n  polylineClick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('click');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dblclick\n   */\n  @Output()\n  polylineDblclick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('dblclick');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.drag\n   */\n  @Output()\n  polylineDrag: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('drag');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragend\n   */\n  @Output()\n  polylineDragend: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragend');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragstart\n   */\n  @Output()\n  polylineDragstart: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragstart');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousedown\n   */\n  @Output()\n  polylineMousedown: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousedown');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousemove\n   */\n  @Output()\n  polylineMousemove: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousemove');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseout\n   */\n  @Output()\n  polylineMouseout: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseout');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseover\n   */\n  @Output()\n  polylineMouseover: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseover');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseup\n   */\n  @Output()\n  polylineMouseup: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseup');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.rightclick\n   */\n  @Output()\n  polylineRightclick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('rightclick');\n\n  constructor(\n    private readonly _map: GoogleMap,\n    private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => this.polyline = new google.maps.Polyline(options));\n        this._assertInitialized();\n        this.polyline.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.polyline);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForPathChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.polyline) {\n      this.polyline.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.polyline.getDraggable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.polyline.getEditable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getPath\n   */\n  getPath(): google.maps.MVCArray<google.maps.LatLng> {\n    this._assertInitialized();\n    return this.polyline.getPath();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.polyline.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.PolylineOptions> {\n    return combineLatest([this._options, this._path]).pipe(map(([options, path]) => {\n      const combinedOptions: google.maps.PolylineOptions = {\n        ...options,\n        path: path || options.path,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.polyline.setOptions(options);\n    });\n  }\n\n  private _watchForPathChanges() {\n    this._path.pipe(takeUntil(this._destroyed)).subscribe(path => {\n      if (path) {\n        this._assertInitialized();\n        this.polyline.setPath(path);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {polyline: google.maps.Polyline} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.polyline) {\n        throw Error(\n            'Cannot interact with a Google Map Polyline before it has been ' +\n            'initialized. Please wait for the Polyline to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, Input, OnDestroy, OnInit, Output, NgZone} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Rectangle via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n */\n@Directive({\n  selector: 'map-rectangle',\n  exportAs: 'mapRectangle',\n})\nexport class MapRectangle implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.RectangleOptions>({});\n  private readonly _bounds =\n      new BehaviorSubject<google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral|undefined>(\n          undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.Rectangle object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n   */\n  rectangle?: google.maps.Rectangle;\n\n  @Input()\n  set options(options: google.maps.RectangleOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set bounds(bounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral) {\n    this._bounds.next(bounds);\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.boundsChanged\n   */\n  @Output()\n  boundsChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('bounds_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.click\n   */\n  @Output()\n  rectangleClick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dblclick\n   */\n  @Output()\n  rectangleDblclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dblclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.drag\n   */\n  @Output()\n  rectangleDrag: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('drag');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragend\n   */\n  @Output()\n  rectangleDragend: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragend');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragstart\n   */\n  @Output()\n  rectangleDragstart: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragstart');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousedown\n   */\n  @Output()\n  rectangleMousedown: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousedown');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousemove\n   */\n  @Output()\n  rectangleMousemove: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousemove');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseout\n   */\n  @Output()\n  rectangleMouseout: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseout');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseover\n   */\n  @Output()\n  rectangleMouseover: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseover');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseup\n   */\n  @Output()\n  rectangleMouseup: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseup');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.rightclick\n   */\n  @Output()\n  rectangleRightclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('rightclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.rectangle = new google.maps.Rectangle(options);\n        });\n        this._assertInitialized();\n        this.rectangle.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.rectangle);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForBoundsChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.rectangle) {\n      this.rectangle.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds {\n    this._assertInitialized();\n    return this.rectangle.getBounds();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.rectangle.getDraggable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.rectangle.getEditable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.rectangle.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.RectangleOptions> {\n    return combineLatest([this._options, this._bounds]).pipe(map(([options, bounds]) => {\n      const combinedOptions: google.maps.RectangleOptions = {\n        ...options,\n        bounds: bounds || options.bounds,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.rectangle.setOptions(options);\n    });\n  }\n\n  private _watchForBoundsChanges() {\n    this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n      if (bounds) {\n        this._assertInitialized();\n        this.rectangle.setBounds(bounds);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {rectangle: google.maps.Rectangle} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.rectangle) {\n        throw Error(\n            'Cannot interact with a Google Map Rectangle before it has been initialized. ' +\n            'Please wait for the Rectangle to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, Input, NgZone, OnDestroy, OnInit} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\n\n/**\n * Angular component that renders a Google Maps Traffic Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n */\n@Directive({\n  selector: 'map-traffic-layer',\n  exportAs: 'mapTrafficLayer',\n})\nexport class MapTrafficLayer implements OnInit, OnDestroy {\n  private readonly _autoRefresh = new BehaviorSubject<boolean>(true);\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.TrafficLayer object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n   */\n  trafficLayer?: google.maps.TrafficLayer;\n\n  /**\n   * Whether the traffic layer refreshes with updated information automatically.\n   */\n  @Input()\n  set autoRefresh(autoRefresh: boolean) {\n    this._autoRefresh.next(autoRefresh);\n  }\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        this._ngZone.runOutsideAngular(() => {\n          this.trafficLayer = new google.maps.TrafficLayer(options);\n        });\n        this._assertInitialized();\n        this.trafficLayer.setMap(this._map.googleMap!);\n      });\n\n      this._watchForAutoRefreshChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.trafficLayer) {\n      this.trafficLayer.setMap(null);\n    }\n  }\n\n  private _combineOptions(): Observable<google.maps.TrafficLayerOptions> {\n    return this._autoRefresh.pipe(map(autoRefresh => {\n      const combinedOptions: google.maps.TrafficLayerOptions = {autoRefresh};\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForAutoRefreshChanges() {\n    this._combineOptions().pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.trafficLayer.setOptions(options);\n    });\n  }\n\n  private _assertInitialized(): asserts this is {trafficLayer: google.maps.TrafficLayer} {\n    if (!this._map.googleMap) {\n      throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.');\n    }\n    if (!this.trafficLayer) {\n      throw Error(\n          'Cannot interact with a Google Map Traffic Layer before it has been initialized. ' +\n          'Please wait for the Traffic Layer to load before trying to interact with it.');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive} from '@angular/core';\n\nimport {MapBaseLayer} from '../map-base-layer';\n\n/**\n * Angular component that renders a Google Maps Transit Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n */\n@Directive({\n  selector: 'map-transit-layer',\n  exportAs: 'mapTransitLayer',\n})\nexport class MapTransitLayer extends MapBaseLayer {\n  /**\n   * The underlying google.maps.TransitLayer object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n   */\n  transitLayer?: google.maps.TransitLayer;\n\n  protected _initializeObject() {\n    this.transitLayer = new google.maps.TransitLayer();\n  }\n\n  protected _setMap() {\n    this._assertLayerInitialized();\n    this.transitLayer.setMap(this._map.googleMap!);\n  }\n\n  protected _unsetMap() {\n    if (this.transitLayer) {\n      this.transitLayer.setMap(null);\n    }\n  }\n\n  private _assertLayerInitialized(): asserts this is {transitLayer: google.maps.TransitLayer} {\n    if (!this.transitLayer) {\n      throw Error(\n          'Cannot interact with a Google Map Transit Layer before it has been initialized. ' +\n          'Please wait for the Transit Layer to load before trying to interact with it.');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Input,\n  OnDestroy,\n  OnInit,\n  NgZone,\n  Directive,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\n\nimport {GoogleMap} from '../google-map/google-map';\n\n/** Possible data that can be shown on a heatmap layer. */\nexport type HeatmapData =\n  google.maps.MVCArray<\n    google.maps.LatLng | google.maps.visualization.WeightedLocation | google.maps.LatLngLiteral> |\n  (google.maps.LatLng | google.maps.visualization.WeightedLocation | google.maps.LatLngLiteral)[];\n\n\n/**\n * Angular directive that renders a Google Maps heatmap via the Google Maps JavaScript API.\n *\n * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n */\n@Directive({\n  selector: 'map-heatmap-layer',\n  exportAs: 'mapHeatmapLayer',\n})\nexport class MapHeatmapLayer implements OnInit, OnChanges, OnDestroy {\n  /**\n   * Data shown on the heatmap.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n   */\n  @Input()\n  set data(data: HeatmapData) {\n    this._data = data;\n  }\n  private _data: HeatmapData;\n\n  /**\n   * Options used to configure the heatmap. See:\n   * developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayerOptions\n   */\n  @Input()\n  set options(options: Partial<google.maps.visualization.HeatmapLayerOptions>) {\n    this._options = options;\n  }\n  private _options: Partial<google.maps.visualization.HeatmapLayerOptions>;\n\n  /**\n   * The underlying google.maps.visualization.HeatmapLayer object.\n   *\n   * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n   */\n  heatmap?: google.maps.visualization.HeatmapLayer;\n\n  constructor(\n    private readonly _googleMap: GoogleMap,\n    private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      if (!window.google?.maps?.visualization && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(\n            'Namespace `google.maps.visualization` not found, cannot construct heatmap. ' +\n            'Please install the Google Maps JavaScript API with the \"visualization\" library: ' +\n            'https://developers.google.com/maps/documentation/javascript/visualization');\n      }\n\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.heatmap = new google.maps.visualization.HeatmapLayer(this._combineOptions());\n      });\n      this._assertInitialized();\n      this.heatmap.setMap(this._googleMap.googleMap!);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const {_data, heatmap} = this;\n\n    if (heatmap) {\n      if (changes['options']) {\n        heatmap.setOptions(this._combineOptions());\n      }\n\n      if (changes['data'] && _data !== undefined) {\n        heatmap.setData(this._normalizeData(_data));\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.heatmap) {\n      this.heatmap.setMap(null);\n    }\n  }\n\n  /**\n   * Gets the data that is currently shown on the heatmap.\n   * See: developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayer\n   */\n  getData(): HeatmapData {\n    this._assertInitialized();\n    return this.heatmap.getData();\n  }\n\n  /** Creates a combined options object using the passed-in options and the individual inputs. */\n  private _combineOptions(): google.maps.visualization.HeatmapLayerOptions {\n    const options = this._options || {};\n    return {\n      ...options,\n      data: this._normalizeData(this._data || options.data || []),\n      map: this._googleMap.googleMap,\n    };\n  }\n\n  /**\n   * Most Google Maps APIs support both `LatLng` objects and `LatLngLiteral`. The latter is more\n   * convenient to write out, because the Google Maps API doesn't have to have been loaded in order\n   * to construct them. The `HeatmapLayer` appears to be an exception that only allows a `LatLng`\n   * object, or it throws a runtime error. Since it's more convenient and we expect that Angular\n   * users will load the API asynchronously, we allow them to pass in a `LatLngLiteral` and we\n   * convert it to a `LatLng` object before passing it off to Google Maps.\n   */\n  private _normalizeData(data: HeatmapData) {\n    const result: (google.maps.LatLng|google.maps.visualization.WeightedLocation)[] = [];\n\n    data.forEach(item => {\n      result.push(isLatLngLiteral(item) ? new google.maps.LatLng(item.lat, item.lng) : item);\n    });\n\n    return result;\n  }\n\n  /** Asserts that the heatmap object has been initialized. */\n  private _assertInitialized(): asserts this is {heatmap: google.maps.visualization.HeatmapLayer} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.heatmap) {\n        throw Error(\n            'Cannot interact with a Google Map HeatmapLayer before it has been ' +\n            'initialized. Please wait for the heatmap to load before trying to interact with it.');\n      }\n    }\n  }\n}\n\n/** Asserts that an object is a `LatLngLiteral`. */\nfunction isLatLngLiteral(value: any): value is google.maps.LatLngLiteral {\n  return value && typeof value.lat === 'number' && typeof value.lng === 'number';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {GoogleMap} from './google-map/google-map';\nimport {MapBaseLayer} from './map-base-layer';\nimport {MapBicyclingLayer} from './map-bicycling-layer/map-bicycling-layer';\nimport {MapCircle} from './map-circle/map-circle';\nimport {MapDirectionsRenderer} from './map-directions-renderer/map-directions-renderer';\nimport {MapGroundOverlay} from './map-ground-overlay/map-ground-overlay';\nimport {MapInfoWindow} from './map-info-window/map-info-window';\nimport {MapKmlLayer} from './map-kml-layer/map-kml-layer';\nimport {MapMarker} from './map-marker/map-marker';\nimport {MapMarkerClusterer} from './map-marker-clusterer/map-marker-clusterer';\nimport {MapPolygon} from './map-polygon/map-polygon';\nimport {MapPolyline} from './map-polyline/map-polyline';\nimport {MapRectangle} from './map-rectangle/map-rectangle';\nimport {MapTrafficLayer} from './map-traffic-layer/map-traffic-layer';\nimport {MapTransitLayer} from './map-transit-layer/map-transit-layer';\nimport {MapHeatmapLayer} from './map-heatmap-layer/map-heatmap-layer';\n\nconst COMPONENTS = [\n  GoogleMap,\n  MapBaseLayer,\n  MapBicyclingLayer,\n  MapCircle,\n  MapDirectionsRenderer,\n  MapGroundOverlay,\n  MapInfoWindow,\n  MapKmlLayer,\n  MapMarker,\n  MapMarkerClusterer,\n  MapPolygon,\n  MapPolyline,\n  MapRectangle,\n  MapTrafficLayer,\n  MapTransitLayer,\n  MapHeatmapLayer,\n];\n\n@NgModule({\n  declarations: COMPONENTS,\n  exports: COMPONENTS,\n})\nexport class GoogleMapsModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Injectable, NgZone} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nexport interface MapDirectionsResponse {\n  status: google.maps.DirectionsStatus;\n  result?: google.maps.DirectionsResult;\n}\n\n/**\n * Angular service that wraps the Google Maps DirectionsService from the Google Maps JavaScript\n * API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsService\n */\n@Injectable({providedIn: 'root'})\nexport class MapDirectionsService {\n  private readonly _directionsService: google.maps.DirectionsService;\n\n  constructor(private readonly _ngZone: NgZone) {\n    this._directionsService = new google.maps.DirectionsService();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsService.route\n   */\n  route(request: google.maps.DirectionsRequest): Observable<MapDirectionsResponse> {\n    return new Observable(observer => {\n      const callback =\n          (\n            result: google.maps.DirectionsResult|undefined,\n            status: google.maps.DirectionsStatus\n          ) => {\n        this._ngZone.run(() => {\n          observer.next({result, status});\n          observer.complete();\n        });\n      };\n      this._directionsService.route(request, callback);\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Injectable, NgZone} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nexport interface MapGeocoderResponse {\n  status: google.maps.GeocoderStatus;\n  results: google.maps.GeocoderResult[];\n}\n\n/**\n * Angular service that wraps the Google Maps Geocoder from the Google Maps JavaScript API.\n * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder\n */\n@Injectable({providedIn: 'root'})\nexport class MapGeocoder {\n  private readonly _geocoder: google.maps.Geocoder;\n\n  constructor(private readonly _ngZone: NgZone) {\n    this._geocoder = new google.maps.Geocoder();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder.geocode\n   */\n  geocode(request: google.maps.GeocoderRequest): Observable<MapGeocoderResponse> {\n    return new Observable(observer => {\n      this._geocoder.geocode(request, (results, status) => {\n        this._ngZone.run(() => {\n          observer.next({results, status});\n          observer.complete();\n        });\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {GoogleMap} from './google-map/google-map';\nexport {GoogleMapsModule} from './google-maps-module';\nexport {MapAnchorPoint} from './map-anchor-point';\nexport {MapBaseLayer} from './map-base-layer';\nexport {MapBicyclingLayer} from './map-bicycling-layer/map-bicycling-layer';\nexport {MapCircle} from './map-circle/map-circle';\nexport {MapDirectionsRenderer} from './map-directions-renderer/map-directions-renderer';\nexport {\n  MapDirectionsService,\n  MapDirectionsResponse,\n} from './map-directions-renderer/map-directions-service';\nexport {MapGroundOverlay} from './map-ground-overlay/map-ground-overlay';\nexport {MapInfoWindow} from './map-info-window/map-info-window';\nexport {MapKmlLayer} from './map-kml-layer/map-kml-layer';\nexport {MapMarker} from './map-marker/map-marker';\nexport {MapMarkerClusterer} from './map-marker-clusterer/map-marker-clusterer';\nexport {MapPolygon} from './map-polygon/map-polygon';\nexport {MapPolyline} from './map-polyline/map-polyline';\nexport {MapRectangle} from './map-rectangle/map-rectangle';\nexport {MapTrafficLayer} from './map-traffic-layer/map-traffic-layer';\nexport {MapTransitLayer} from './map-transit-layer/map-transit-layer';\nexport {MapHeatmapLayer, HeatmapData} from './map-heatmap-layer/map-heatmap-layer';\nexport {MapGeocoder, MapGeocoderResponse} from './map-geocoder/map-geocoder';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}