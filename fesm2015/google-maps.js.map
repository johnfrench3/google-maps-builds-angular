{"version":3,"file":"google-maps.js","sources":["../../../../../../src/google-maps/map-event-manager.ts","../../../../../../src/google-maps/google-map/google-map.ts","../../../../../../src/google-maps/map-circle/map-circle.ts","../../../../../../src/google-maps/map-ground-overlay/map-ground-overlay.ts","../../../../../../src/google-maps/map-info-window/map-info-window.ts","../../../../../../src/google-maps/map-marker/map-marker.ts","../../../../../../src/google-maps/map-polygon/map-polygon.ts","../../../../../../src/google-maps/map-polyline/map-polyline.ts","../../../../../../src/google-maps/map-rectangle/map-rectangle.ts","../../../../../../src/google-maps/google-maps-module.ts","../../../../../../src/google-maps/public-api.ts","../../../../../../src/google-maps/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgZone} from '@angular/core';\nimport {Observable, Subscriber} from 'rxjs';\n\ntype MapEventManagerTarget = {\n  addListener: (name: string, callback: (...args: any[]) => void) => google.maps.MapsEventListener;\n} | undefined;\n\n/** Manages event on a Google Maps object, ensuring that events are added only when necessary. */\nexport class MapEventManager {\n  /** Pending listeners that were added before the target was set. */\n  private _pending: {observable: Observable<any>, observer: Subscriber<any>}[] = [];\n  private _listeners: google.maps.MapsEventListener[] = [];\n  private _target: MapEventManagerTarget;\n\n  /** Clears all currently-registered event listeners. */\n  private _clearListeners() {\n    for (let listener of this._listeners) {\n      listener.remove();\n    }\n\n    this._listeners = [];\n  }\n\n  constructor(private _ngZone: NgZone) {}\n\n  /** Gets an observable that adds an event listener to the map when a consumer subscribes to it. */\n  getLazyEmitter<T>(name: string): Observable<T> {\n    const observable = new Observable<T>(observer => {\n      // If the target hasn't been initialized yet, cache the observer so it can be added later.\n      if (!this._target) {\n        this._pending.push({observable, observer});\n        return undefined;\n      }\n\n      const listener = this._target.addListener(name, (event: T) => {\n        this._ngZone.run(() => observer.next(event));\n      });\n      this._listeners.push(listener);\n      return () => listener.remove();\n    });\n\n    return observable;\n  }\n\n  /** Sets the current target that the manager should bind events to. */\n  setTarget(target: MapEventManagerTarget) {\n    if (target === this._target) {\n      return;\n    }\n\n    // Clear the listeners from the pre-existing target.\n    if (this._target) {\n      this._clearListeners();\n      this._pending = [];\n    }\n\n    this._target = target;\n\n    // Add the listeners that were bound before the map was initialized.\n    this._pending.forEach(subscriber => subscriber.observable.subscribe(subscriber.observer));\n    this._pending = [];\n  }\n\n  /** Destroys the manager and clears the event listeners. */\n  destroy() {\n    this._clearListeners();\n    this._pending = [];\n    this._target = undefined;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n  NgZone,\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, shareReplay, take, takeUntil} from 'rxjs/operators';\nimport {MapEventManager} from '../map-event-manager';\n\ninterface GoogleMapsWindow extends Window {\n  google?: typeof google;\n}\n\n/** default options set to the Googleplex */\nexport const DEFAULT_OPTIONS: google.maps.MapOptions = {\n  center: {lat: 37.421995, lng: -122.084092},\n  zoom: 17\n};\n\n/** Arbitrary default height for the map element */\nexport const DEFAULT_HEIGHT = '500px';\n/** Arbitrary default width for the map element */\nexport const DEFAULT_WIDTH = '500px';\n\n/**\n * Angular component that renders a Google Map via the Google Maps JavaScript\n * API.\n * @see https://developers.google.com/maps/documentation/javascript/reference/\n */\n@Component({\n  selector: 'google-map',\n  exportAs: 'googleMap',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<div class=\"map-container\"></div><ng-content></ng-content>',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class GoogleMap implements OnChanges, OnInit, OnDestroy {\n  private _eventManager: MapEventManager = new MapEventManager(this._ngZone);\n  private _googleMapChanges: Observable<google.maps.Map>;\n\n  private readonly _options = new BehaviorSubject<google.maps.MapOptions>(DEFAULT_OPTIONS);\n  private readonly _center =\n      new BehaviorSubject<google.maps.LatLngLiteral|google.maps.LatLng|undefined>(undefined);\n  private readonly _zoom = new BehaviorSubject<number|undefined>(undefined);\n  private readonly _destroy = new Subject<void>();\n  private _mapEl: HTMLElement;\n\n  /**\n   * The underlying google.maps.Map object\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/map#Map\n   */\n  googleMap?: google.maps.Map;\n\n  /** Whether we're currently rendering inside a browser. */\n  _isBrowser: boolean;\n\n  /** Height of the map. */\n  @Input() height: string | number = DEFAULT_HEIGHT;\n\n  /** Width of the map. */\n  @Input() width: string | number = DEFAULT_WIDTH;\n\n  /**\n   * Type of map that should be rendered. E.g. hybrid map, terrain map etc.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/map#MapTypeId\n   */\n  @Input() mapTypeId: google.maps.MapTypeId | undefined;\n\n  @Input()\n  set center(center: google.maps.LatLngLiteral|google.maps.LatLng) {\n    this._center.next(center);\n  }\n  @Input()\n  set zoom(zoom: number) {\n    this._zoom.next(zoom);\n  }\n  @Input()\n  set options(options: google.maps.MapOptions) {\n    this._options.next(options || DEFAULT_OPTIONS);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n   */\n  @Output()\n  boundsChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('bounds_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n   */\n  @Output()\n  centerChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('center_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n   */\n  @Output()\n  mapClick: Observable<google.maps.MouseEvent|google.maps.IconMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent|google.maps.IconMouseEvent>('click');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n   */\n  @Output()\n  mapDblclick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dblclick');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n   */\n  @Output() mapDrag: Observable<void> = this._eventManager.getLazyEmitter<void>('drag');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n   */\n  @Output() mapDragend: Observable<void> = this._eventManager.getLazyEmitter<void>('dragend');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n   */\n  @Output() mapDragstart: Observable<void> = this._eventManager.getLazyEmitter<void>('dragstart');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n   */\n  @Output()\n  headingChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('heading_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n   */\n  @Output() idle: Observable<void> = this._eventManager.getLazyEmitter<void>('idle');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n   */\n  @Output()\n  maptypeidChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('maptypeid_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n   */\n  @Output()\n  mapMousemove: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mousemove');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n   */\n  @Output()\n  mapMouseout: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mouseout');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n   */\n  @Output()\n  mapMouseover: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mouseover');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n   */\n  @Output()\n  projectionChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('projection_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n   */\n  @Output()\n  mapRightclick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('rightclick');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n   */\n  @Output() tilesloaded: Observable<void> = this._eventManager.getLazyEmitter<void>('tilesloaded');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n   */\n  @Output() tiltChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('tilt_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n   */\n  @Output() zoomChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('zoom_changed');\n\n  constructor(\n    private readonly _elementRef: ElementRef,\n    private _ngZone: NgZone,\n    /**\n     * @deprecated `platformId` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    @Optional() @Inject(PLATFORM_ID) platformId?: Object) {\n\n    // @breaking-change 10.0.0 Remove null check for `platformId`.\n    this._isBrowser =\n        platformId ? isPlatformBrowser(platformId) : typeof window === 'object' && !!window;\n\n    if (this._isBrowser) {\n      const googleMapsWindow: GoogleMapsWindow = window;\n      if (!googleMapsWindow.google) {\n        throw Error(\n            'Namespace google not found, cannot construct embedded google ' +\n            'map. Please install the Google Maps JavaScript API: ' +\n            'https://developers.google.com/maps/documentation/javascript/' +\n            'tutorial#Loading_the_Maps_API');\n      }\n    }\n  }\n\n  ngOnChanges() {\n    this._setSize();\n    if (this.googleMap && this.mapTypeId) {\n      this.googleMap.setMapTypeId(this.mapTypeId);\n    }\n  }\n\n  ngOnInit() {\n    // It should be a noop during server-side rendering.\n    if (this._isBrowser) {\n      this._mapEl = this._elementRef.nativeElement.querySelector('.map-container')!;\n      this._setSize();\n      this._googleMapChanges = this._initializeMap(this._combineOptions());\n      this._googleMapChanges.subscribe((googleMap: google.maps.Map) => {\n        this.googleMap = googleMap;\n        this._eventManager.setTarget(this.googleMap);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForCenterChanges();\n      this._watchForZoomChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n   */\n  fitBounds(\n      bounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral,\n      padding?: number|google.maps.Padding) {\n    this._assertInitialized();\n    this.googleMap.fitBounds(bounds, padding);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n   */\n  panBy(x: number, y: number) {\n    this._assertInitialized();\n    this.googleMap.panBy(x, y);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n   */\n  panTo(latLng: google.maps.LatLng|google.maps.LatLngLiteral) {\n    this._assertInitialized();\n    this.googleMap.panTo(latLng);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n   */\n  panToBounds(\n      latLngBounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral,\n      padding?: number|google.maps.Padding) {\n    this._assertInitialized();\n    this.googleMap.panToBounds(latLngBounds, padding);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds|null {\n    this._assertInitialized();\n    return this.googleMap.getBounds() || null;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n   */\n  getCenter(): google.maps.LatLng {\n    this._assertInitialized();\n    return this.googleMap.getCenter();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n   */\n  getClickableIcons(): boolean {\n    this._assertInitialized();\n    return this.googleMap.getClickableIcons();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n   */\n  getHeading(): number {\n    this._assertInitialized();\n    return this.googleMap.getHeading();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n   */\n  getMapTypeId(): google.maps.MapTypeId|string {\n    this._assertInitialized();\n    return this.googleMap.getMapTypeId();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n   */\n  getProjection(): google.maps.Projection|null {\n    this._assertInitialized();\n    return this.googleMap.getProjection();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n   */\n  getStreetView(): google.maps.StreetViewPanorama {\n    this._assertInitialized();\n    return this.googleMap.getStreetView();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n   */\n  getTilt(): number {\n    this._assertInitialized();\n    return this.googleMap.getTilt();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n   */\n  getZoom(): number {\n    this._assertInitialized();\n    return this.googleMap.getZoom();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n   */\n  get controls(): Array<google.maps.MVCArray<Node>> {\n    this._assertInitialized();\n    return this.googleMap.controls;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n   */\n  get data(): google.maps.Data {\n    this._assertInitialized();\n    return this.googleMap.data;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n   */\n  get mapTypes(): google.maps.MapTypeRegistry {\n    this._assertInitialized();\n    return this.googleMap.mapTypes;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n   */\n  get overlayMapTypes(): google.maps.MVCArray<google.maps.MapType> {\n    this._assertInitialized();\n    return this.googleMap.overlayMapTypes;\n  }\n\n  private _setSize() {\n    if (this._mapEl) {\n      const styles = this._mapEl.style;\n      styles.height = coerceCssPixelValue(this.height) || DEFAULT_HEIGHT;\n      styles.width = coerceCssPixelValue(this.width) || DEFAULT_WIDTH;\n    }\n  }\n\n  /** Combines the center and zoom and the other map options into a single object */\n  private _combineOptions(): Observable<google.maps.MapOptions> {\n    return combineLatest([this._options, this._center, this._zoom])\n        .pipe(map(([options, center, zoom]) => {\n          const combinedOptions: google.maps.MapOptions = {\n            ...options,\n            center: center || options.center,\n            zoom: zoom !== undefined ? zoom : options.zoom,\n            mapTypeId: this.mapTypeId\n          };\n          return combinedOptions;\n        }));\n  }\n\n  private _initializeMap(optionsChanges: Observable<google.maps.MapOptions>):\n      Observable<google.maps.Map> {\n    return optionsChanges.pipe(\n        take(1),\n        map(options => {\n          // Create the object outside the zone so its events don't trigger change detection.\n          // We'll bring it back in inside the `MapEventManager` only for the events that the\n          // user has subscribed to.\n          return this._ngZone.runOutsideAngular(() => new google.maps.Map(this._mapEl, options));\n        }),\n        shareReplay(1));\n  }\n\n  private _watchForOptionsChanges() {\n    combineLatest([this._googleMapChanges, this._options])\n        .pipe(takeUntil(this._destroy))\n        .subscribe(([googleMap, options]) => {\n          googleMap.setOptions(options);\n        });\n  }\n\n  private _watchForCenterChanges() {\n    combineLatest([this._googleMapChanges, this._center])\n        .pipe(takeUntil(this._destroy))\n        .subscribe(([googleMap, center]) => {\n          if (center) {\n            googleMap.setCenter(center);\n          }\n        });\n  }\n\n  private _watchForZoomChanges() {\n    combineLatest([this._googleMapChanges, this._zoom])\n        .pipe(takeUntil(this._destroy))\n        .subscribe(([googleMap, zoom]) => {\n          if (zoom !== undefined) {\n            googleMap.setZoom(zoom);\n          }\n        });\n  }\n\n  /** Asserts that the map has been initialized. */\n  private _assertInitialized(): asserts this is {googleMap: google.maps.Map} {\n    if (!this.googleMap) {\n      throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                  'Please wait for the API to load before trying to interact with it.');\n    }\n  }\n}\n\nconst cssUnitsPattern = /([A-Za-z%]+)$/;\n\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value: any): string {\n  if (value == null) {\n    return '';\n  }\n\n  return cssUnitsPattern.test(value) ? value : `${value}px`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, Input, NgZone, OnDestroy, OnInit, Output} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n */\n@Directive({\n  selector: 'map-circle',\n  exportAs: 'mapCircle',\n})\nexport class MapCircle implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.CircleOptions>({});\n  private readonly _center =\n      new BehaviorSubject<google.maps.LatLng|google.maps.LatLngLiteral|undefined>(undefined);\n  private readonly _radius = new BehaviorSubject<number|undefined>(undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * Underlying google.maps.Circle object.\n   *\n   * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n   */\n  circle?: google.maps.Circle;  // initialized in ngOnInit\n\n  @Input()\n  set options(options: google.maps.CircleOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set center(center: google.maps.LatLng|google.maps.LatLngLiteral) {\n    this._center.next(center);\n  }\n\n  @Input()\n  set radius(radius: number) {\n    this._radius.next(radius);\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n   */\n  @Output()\n  centerChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('center_changed');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n   */\n  @Output()\n  circleClick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('click');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n   */\n  @Output()\n  circleDblclick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dblclick');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n   */\n  @Output()\n  circleDrag: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('drag');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n   */\n  @Output()\n  circleDragend: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dragend');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n   */\n  @Output()\n  circleDragstart: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dragstart');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n   */\n  @Output()\n  circleMousedown: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mousedown');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n   */\n  @Output()\n  circleMousemove: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mousemove');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n   */\n  @Output()\n  circleMouseout: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mouseout');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n   */\n  @Output()\n  circleMouseover: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mouseover');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n   */\n  @Output()\n  circleMouseup: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mouseup');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n   */\n  @Output()\n  radiusChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('radius_changed');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n   */\n  @Output()\n  circleRightclick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('rightclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.circle = new google.maps.Circle(options);\n        });\n        this._assertInitialized();\n        this.circle.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.circle);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForCenterChanges();\n      this._watchForRadiusChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.circle) {\n      this.circle.setMap(null);\n    }\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds {\n    this._assertInitialized();\n    return this.circle.getBounds();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n   */\n  getCenter(): google.maps.LatLng {\n    this._assertInitialized();\n    return this.circle.getCenter();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.circle.getDraggable();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.circle.getEditable();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n   */\n  getRadius(): number {\n    this._assertInitialized();\n    return this.circle.getRadius();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.circle.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.CircleOptions> {\n    return combineLatest([this._options, this._center, this._radius])\n        .pipe(map(([options, center, radius]) => {\n          const combinedOptions: google.maps.CircleOptions = {\n            ...options,\n            center: center || options.center,\n            radius: radius !== undefined ? radius : options.radius,\n          };\n          return combinedOptions;\n        }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.circle.setOptions(options);\n    });\n  }\n\n  private _watchForCenterChanges() {\n    this._center.pipe(takeUntil(this._destroyed)).subscribe(center => {\n      if (center) {\n        this._assertInitialized();\n        this.circle.setCenter(center);\n      }\n    });\n  }\n\n  private _watchForRadiusChanges() {\n    this._radius.pipe(takeUntil(this._destroyed)).subscribe(radius => {\n      if (radius !== undefined) {\n        this._assertInitialized();\n        this.circle.setRadius(radius);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {circle: google.maps.Circle} {\n    if (!this._map.googleMap) {\n      throw Error(\n        'Cannot access Google Map information before the API has been initialized. ' +\n        'Please wait for the API to load before trying to interact with it.');\n    }\n    if (!this.circle) {\n      throw Error(\n        'Cannot interact with a Google Map Circle before it has been ' +\n        'initialized. Please wait for the Circle to load before trying to interact with it.');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, Input, NgZone, OnDestroy, OnInit, Output} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Ground Overlay via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n */\n@Directive({\n  selector: 'map-ground-overlay',\n  exportAs: 'mapGroundOverlay',\n})\nexport class MapGroundOverlay implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n\n  private readonly _opacity = new BehaviorSubject<number>(1);\n  private readonly _url = new BehaviorSubject<string>('');\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.GroundOverlay object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n   */\n  groundOverlay?: google.maps.GroundOverlay;\n\n  /** URL of the image that will be shown in the overlay. */\n  @Input()\n  set url(url: string) {\n    this._url.next(url);\n  }\n\n  /** Bounds for the overlay. */\n  @Input() bounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral;\n\n  /** Whether the overlay is clickable */\n  @Input() clickable: boolean = false;\n\n  /** Opacity of the overlay. */\n  @Input()\n  set opacity(opacity: number) {\n    this._opacity.next(opacity);\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay.click\n   */\n  @Output()\n  mapClick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.dblclick\n   */\n  @Output()\n  mapDblclick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dblclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!this.bounds) {\n      throw Error('Image bounds are required');\n    }\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.groundOverlay =\n              new google.maps.GroundOverlay(this._url.getValue(), this.bounds, options);\n        });\n        this._assertInitialized();\n        this.groundOverlay.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.groundOverlay);\n      });\n\n      this._watchForOpacityChanges();\n      this._watchForUrlChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.groundOverlay) {\n      this.groundOverlay.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds {\n    this._assertInitialized();\n    return this.groundOverlay.getBounds();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getOpacity\n   */\n  getOpacity(): number {\n    this._assertInitialized();\n    return this.groundOverlay.getOpacity();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getUrl\n   */\n  getUrl(): string {\n    this._assertInitialized();\n    return this.groundOverlay.getUrl();\n  }\n\n  private _combineOptions(): Observable<google.maps.GroundOverlayOptions> {\n    return this._opacity.pipe(map(opacity => {\n      const combinedOptions: google.maps.GroundOverlayOptions = {\n        clickable: this.clickable,\n        opacity,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOpacityChanges() {\n    this._opacity.pipe(takeUntil(this._destroyed)).subscribe(opacity => {\n      if (opacity) {\n        this._assertInitialized();\n        this.groundOverlay.setOpacity(opacity);\n      }\n    });\n  }\n\n  private _watchForUrlChanges() {\n    this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n      this._assertInitialized();\n      const overlay = this.groundOverlay;\n      overlay.set('url', url);\n\n      // Google Maps only redraws the overlay if we re-set the map.\n      overlay.setMap(null);\n      overlay.setMap(this._map.googleMap!);\n    });\n  }\n\n  private _assertInitialized(): asserts this is {groundOverlay: google.maps.GroundOverlay} {\n    if (!this._map.googleMap) {\n      throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.');\n    }\n    if (!this.groundOverlay) {\n      throw Error(\n          'Cannot interact with a Google Map GroundOverlay before it has been initialized. ' +\n          'Please wait for the GroundOverlay to load before trying to interact with it.');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\nimport {MapAnchorPoint} from '../map-anchor-point';\n\n/**\n * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/info-window\n */\n@Directive({\n  selector: 'map-info-window',\n  exportAs: 'mapInfoWindow',\n  host: {'style': 'display: none'},\n})\nexport class MapInfoWindow implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.InfoWindowOptions>({});\n  private readonly _position =\n      new BehaviorSubject<google.maps.LatLngLiteral|google.maps.LatLng|undefined>(undefined);\n  private readonly _destroy = new Subject<void>();\n\n  /**\n   * Underlying google.maps.InfoWindow\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow\n   */\n  infoWindow?: google.maps.InfoWindow;\n\n  @Input()\n  set options(options: google.maps.InfoWindowOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set position(position: google.maps.LatLngLiteral|google.maps.LatLng) {\n    this._position.next(position);\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n   */\n  @Output() closeclick: Observable<void> = this._eventManager.getLazyEmitter<void>('closeclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.content_changed\n   */\n  @Output()\n  contentChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('content_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n   */\n  @Output() domready: Observable<void> = this._eventManager.getLazyEmitter<void>('domready');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.position_changed\n   */\n  @Output()\n  positionChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('position_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.zindex_changed\n   */\n  @Output()\n  zindexChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('zindex_changed');\n\n  constructor(private readonly _googleMap: GoogleMap,\n              private _elementRef: ElementRef<HTMLElement>,\n              private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      const combinedOptionsChanges = this._combineOptions();\n\n      combinedOptionsChanges.pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.infoWindow = new google.maps.InfoWindow(options);\n        });\n\n        this._eventManager.setTarget(this.infoWindow);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForPositionChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroy.next();\n    this._destroy.complete();\n\n    // If no info window has been created on the server, we do not try closing it.\n    // On the server, an info window cannot be created and this would cause errors.\n    if (this.infoWindow) {\n      this.close();\n    }\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n   */\n  close() {\n    this._assertInitialized();\n    this.infoWindow.close();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n   */\n  getContent(): string|Node {\n    this._assertInitialized();\n    return this.infoWindow.getContent();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.getPosition\n   */\n  getPosition(): google.maps.LatLng|null {\n    this._assertInitialized();\n    return this.infoWindow.getPosition();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n   */\n  getZIndex(): number {\n    this._assertInitialized();\n    return this.infoWindow.getZIndex();\n  }\n\n  /**\n   * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n   * then the position property of the options input is used instead.\n   */\n  open(anchor?: MapAnchorPoint) {\n    this._assertInitialized();\n    this._elementRef.nativeElement.style.display = '';\n    this.infoWindow.open(this._googleMap.googleMap, anchor ? anchor.getAnchor() : undefined);\n  }\n\n  private _combineOptions(): Observable<google.maps.InfoWindowOptions> {\n    return combineLatest([this._options, this._position]).pipe(map(([options, position]) => {\n      const combinedOptions: google.maps.InfoWindowOptions = {\n        ...options,\n        position: position || options.position,\n        content: this._elementRef.nativeElement,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroy)).subscribe(options => {\n      this._assertInitialized();\n      this.infoWindow.setOptions(options);\n    });\n  }\n\n  private _watchForPositionChanges() {\n    this._position.pipe(takeUntil(this._destroy)).subscribe(position => {\n      if (position) {\n        this._assertInitialized();\n        this.infoWindow.setPosition(position);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {infoWindow: google.maps.InfoWindow} {\n    if (!this._googleMap.googleMap) {\n      throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.');\n    }\n    if (!this.infoWindow) {\n      throw Error(\n          'Cannot interact with a Google Map Info Window before it has been ' +\n          'initialized. Please wait for the Info Window to load before trying to interact with ' +\n          'it.');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n  NgZone\n} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\nimport {MapAnchorPoint} from '../map-anchor-point';\n\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\nexport const DEFAULT_MARKER_OPTIONS = {\n  position: {lat: 37.421995, lng: -122.084092},\n};\n\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\n@Component({\n  selector: 'map-marker',\n  exportAs: 'mapMarker',\n  template: '<ng-content></ng-content>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MapMarker implements OnInit, OnDestroy, MapAnchorPoint {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options =\n      new BehaviorSubject<google.maps.MarkerOptions>(DEFAULT_MARKER_OPTIONS);\n  private readonly _title = new BehaviorSubject<string|undefined>(undefined);\n  private readonly _position =\n      new BehaviorSubject<google.maps.LatLngLiteral|google.maps.LatLng|undefined>(undefined);\n  private readonly _label =\n      new BehaviorSubject<string|google.maps.MarkerLabel|undefined>(undefined);\n  private readonly _clickable = new BehaviorSubject<boolean|undefined>(undefined);\n  private readonly _destroy = new Subject<void>();\n\n  @Input()\n  set options(options: google.maps.MarkerOptions) {\n    this._options.next(options || DEFAULT_MARKER_OPTIONS);\n  }\n\n  @Input()\n  set title(title: string) {\n    this._title.next(title);\n  }\n\n  @Input()\n  set position(position: google.maps.LatLngLiteral|google.maps.LatLng) {\n    this._position.next(position);\n  }\n\n  @Input()\n  set label(label: string|google.maps.MarkerLabel) {\n    this._label.next(label);\n  }\n\n  @Input()\n  set clickable(clickable: boolean) {\n    this._clickable.next(clickable);\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n   */\n  @Output()\n  animationChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('animation_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n   */\n  @Output()\n  mapClick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n   */\n  @Output()\n  clickableChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('clickable_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n   */\n  @Output()\n  cursorChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('cursor_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n   */\n  @Output()\n  mapDblclick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dblclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n   */\n  @Output()\n  mapDrag: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('drag');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n   */\n  @Output()\n  mapDragend: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dragend');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n   */\n  @Output()\n  draggableChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('draggable_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n   */\n  @Output()\n  mapDragstart: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dragstart');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n   */\n  @Output() flatChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('flat_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n   */\n  @Output() iconChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('icon_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n   */\n  @Output()\n  mapMousedown: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mousedown');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n   */\n  @Output()\n  mapMouseout: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mouseout');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n   */\n  @Output()\n  mapMouseover: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mouseover');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n   */\n  @Output()\n  mapMouseup: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mouseup');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n   */\n  @Output()\n  positionChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('position_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n   */\n  @Output()\n  mapRightclick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('rightclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n   */\n  @Output() shapeChanged:\n  Observable<void> = this._eventManager.getLazyEmitter<void>('shape_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n   */\n  @Output()\n  titleChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('title_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n   */\n  @Output()\n  visibleChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('visible_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n   */\n  @Output()\n  zindexChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('zindex_changed');\n\n  /**\n   * The underlying google.maps.Marker object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/marker#Marker\n   */\n  marker?: google.maps.Marker;\n\n  constructor(\n    private readonly _googleMap: GoogleMap,\n    private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => this.marker = new google.maps.Marker(options));\n        this._assertInitialized();\n        this.marker.setMap(this._googleMap.googleMap!);\n        this._eventManager.setTarget(this.marker);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForTitleChanges();\n      this._watchForPositionChanges();\n      this._watchForLabelChanges();\n      this._watchForClickableChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n    this._eventManager.destroy();\n    if (this.marker) {\n      this.marker.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n   */\n  getAnimation(): google.maps.Animation|null {\n    this._assertInitialized();\n    return this.marker.getAnimation() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n   */\n  getClickable(): boolean {\n    this._assertInitialized();\n    return this.marker.getClickable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n   */\n  getCursor(): string|null {\n    this._assertInitialized();\n    return this.marker.getCursor() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return !!this.marker.getDraggable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n   */\n  getIcon(): string|google.maps.Icon|google.maps.Symbol|null {\n    this._assertInitialized();\n    return this.marker.getIcon() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n   */\n  getLabel(): google.maps.MarkerLabel|null {\n    this._assertInitialized();\n    return this.marker.getLabel() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n   */\n  getOpacity(): number|null {\n    this._assertInitialized();\n    return this.marker.getOpacity() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n   */\n  getPosition(): google.maps.LatLng|null {\n    this._assertInitialized();\n    return this.marker.getPosition() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n   */\n  getShape(): google.maps.MarkerShape|null {\n    this._assertInitialized();\n    return this.marker.getShape() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n   */\n  getTitle(): string|null {\n    this._assertInitialized();\n    return this.marker.getTitle() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.marker.getVisible();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n   */\n  getZIndex(): number|null {\n    this._assertInitialized();\n    return this.marker.getZIndex() || null;\n  }\n\n  /** Gets the anchor point that can be used to attach other Google Maps objects. */\n  getAnchor(): google.maps.MVCObject {\n    this._assertInitialized();\n    return this.marker;\n  }\n\n  private _combineOptions(): Observable<google.maps.MarkerOptions> {\n    return combineLatest([this._options, this._title, this._position, this._label, this._clickable])\n        .pipe(map(([options, title, position, label, clickable]) => {\n          const combinedOptions: google.maps.MarkerOptions = {\n            ...options,\n            title: title || options.title,\n            position: position || options.position,\n            label: label || options.label,\n            clickable: clickable !== undefined ? clickable : options.clickable,\n            map: this._googleMap.googleMap,\n          };\n          return combinedOptions;\n        }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroy)).subscribe(options => {\n      if (this.marker) {\n        this._assertInitialized();\n        this.marker.setOptions(options);\n      }\n    });\n  }\n\n  private _watchForTitleChanges() {\n    this._title.pipe(takeUntil(this._destroy)).subscribe(title => {\n      if (this.marker && title !== undefined) {\n        this._assertInitialized();\n        this.marker.setTitle(title);\n      }\n    });\n  }\n\n  private _watchForPositionChanges() {\n    this._position.pipe(takeUntil(this._destroy)).subscribe(position => {\n      if (this.marker && position) {\n        this._assertInitialized();\n        this.marker.setPosition(position);\n      }\n    });\n  }\n\n  private _watchForLabelChanges() {\n    this._label.pipe(takeUntil(this._destroy)).subscribe(label => {\n      if (this.marker && label !== undefined) {\n        this._assertInitialized();\n        this.marker.setLabel(label);\n      }\n    });\n  }\n\n  private _watchForClickableChanges() {\n    this._clickable.pipe(takeUntil(this._destroy)).subscribe(clickable => {\n      if (this.marker && clickable !== undefined) {\n        this._assertInitialized();\n        this.marker.setClickable(clickable);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {marker: google.maps.Marker} {\n    if (!this._googleMap.googleMap) {\n      throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.');\n    }\n    if (!this.marker) {\n      throw Error(\n          'Cannot interact with a Google Map Marker before it has been ' +\n          'initialized. Please wait for the Marker to load before trying to interact with it.');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Directive,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  NgZone,\n} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Polygon via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n */\n@Directive({\n  selector: 'map-polygon',\n  exportAs: 'mapPolygon',\n})\nexport class MapPolygon implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.PolygonOptions>({});\n  private readonly _paths =\n      new BehaviorSubject<google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>>|\n                          google.maps.MVCArray<google.maps.LatLng>|google.maps.LatLng[]|\n                          google.maps.LatLngLiteral[]|undefined>(undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.Polygon object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n   */\n  polygon?: google.maps.Polygon;\n\n  @Input()\n  set options(options: google.maps.PolygonOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set paths(paths: google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>>|\n            google.maps.MVCArray<google.maps.LatLng>|google.maps.LatLng[]|\n            google.maps.LatLngLiteral[]) {\n    this._paths.next(paths);\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.click\n   */\n  @Output()\n  polygonClick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('click');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dblclick\n   */\n  @Output()\n  polygonDblclick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('dblclick');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.drag\n   */\n  @Output()\n  polygonDrag: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('drag');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragend\n   */\n  @Output()\n  polygonDragend: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dragend');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragstart\n   */\n  @Output()\n  polygonDragstart: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dragstart');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousedown\n   */\n  @Output()\n  polygonMousedown: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousedown');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousemove\n   */\n  @Output()\n  polygonMousemove: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousemove');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseout\n   */\n  @Output()\n  polygonMouseout: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseout');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseover\n   */\n  @Output()\n  polygonMouseover: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseover');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseup\n   */\n  @Output()\n  polygonMouseup: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseup');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.rightclick\n   */\n  @Output()\n  polygonRightclick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('rightclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.polygon = new google.maps.Polygon(options);\n        });\n        this._assertInitialized();\n        this.polygon.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.polygon);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForPathChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.polygon) {\n      this.polygon.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.polygon.getDraggable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.polygon.getEditable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPath\n   */\n  getPath(): google.maps.MVCArray<google.maps.LatLng> {\n    this._assertInitialized();\n    return this.polygon.getPath();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPaths\n   */\n  getPaths(): google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>> {\n    this._assertInitialized();\n    return this.polygon.getPaths();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.polygon.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.PolygonOptions> {\n    return combineLatest([this._options, this._paths]).pipe(map(([options, paths]) => {\n      const combinedOptions: google.maps.PolygonOptions = {\n        ...options,\n        paths: paths || options.paths,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.polygon.setOptions(options);\n    });\n  }\n\n  private _watchForPathChanges() {\n    this._paths.pipe(takeUntil(this._destroyed)).subscribe(paths => {\n      if (paths) {\n        this._assertInitialized();\n        this.polygon.setPaths(paths);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {polygon: google.maps.Polygon} {\n    if (!this._map.googleMap) {\n      throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.');\n    }\n    if (!this.polygon) {\n      throw Error(\n          'Cannot interact with a Google Map Polygon before it has been ' +\n          'initialized. Please wait for the Polygon to load before trying to interact with it.');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Directive,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  NgZone,\n} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Polyline via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n */\n@Directive({\n  selector: 'map-polyline',\n  exportAs: 'mapPolyline',\n})\nexport class MapPolyline implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.PolylineOptions>({});\n  private readonly _path =\n      new BehaviorSubject<google.maps.MVCArray<google.maps.LatLng>|google.maps.LatLng[]|\n                          google.maps.LatLngLiteral[]|undefined>(undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.Polyline object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n   */\n  polyline?: google.maps.Polyline;\n\n  @Input()\n  set options(options: google.maps.PolylineOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set path(path: google.maps.MVCArray<google.maps.LatLng>|google.maps.LatLng[]|\n           google.maps.LatLngLiteral[]) {\n    this._path.next(path);\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.click\n   */\n  @Output()\n  polylineClick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('click');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dblclick\n   */\n  @Output()\n  polylineDblclick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('dblclick');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.drag\n   */\n  @Output()\n  polylineDrag: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('drag');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragend\n   */\n  @Output()\n  polylineDragend: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dragend');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragstart\n   */\n  @Output()\n  polylineDragstart: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dragstart');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousedown\n   */\n  @Output()\n  polylineMousedown: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousedown');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousemove\n   */\n  @Output()\n  polylineMousemove: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousemove');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseout\n   */\n  @Output()\n  polylineMouseout: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseout');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseover\n   */\n  @Output()\n  polylineMouseover: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseover');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseup\n   */\n  @Output()\n  polylineMouseup: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseup');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.rightclick\n   */\n  @Output()\n  polylineRightclick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('rightclick');\n\n  constructor(\n    private readonly _map: GoogleMap,\n    private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => this.polyline = new google.maps.Polyline(options));\n        this._assertInitialized();\n        this.polyline.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.polyline);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForPathChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.polyline) {\n      this.polyline.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.polyline.getDraggable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.polyline.getEditable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getPath\n   */\n  getPath(): google.maps.MVCArray<google.maps.LatLng> {\n    this._assertInitialized();\n    // @breaking-change 11.0.0 Make the return value nullable.\n    return this.polyline.getPath();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.polyline.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.PolylineOptions> {\n    return combineLatest([this._options, this._path]).pipe(map(([options, path]) => {\n      const combinedOptions: google.maps.PolylineOptions = {\n        ...options,\n        path: path || options.path,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.polyline.setOptions(options);\n    });\n  }\n\n  private _watchForPathChanges() {\n    this._path.pipe(takeUntil(this._destroyed)).subscribe(path => {\n      if (path) {\n        this._assertInitialized();\n        this.polyline.setPath(path);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {polyline: google.maps.Polyline} {\n    if (!this._map.googleMap) {\n      throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.');\n    }\n    if (!this.polyline) {\n      throw Error(\n          'Cannot interact with a Google Map Polyline before it has been ' +\n          'initialized. Please wait for the Polyline to load before trying to interact with it.');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, Input, OnDestroy, OnInit, Output, NgZone} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Rectangle via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n */\n@Directive({\n  selector: 'map-rectangle',\n  exportAs: 'mapRectangle',\n})\nexport class MapRectangle implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.RectangleOptions>({});\n  private readonly _bounds =\n      new BehaviorSubject<google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral|undefined>(\n          undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.Rectangle object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n   */\n  rectangle?: google.maps.Rectangle;\n\n  @Input()\n  set options(options: google.maps.RectangleOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set bounds(bounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral) {\n    this._bounds.next(bounds);\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.boundsChanged\n   */\n  @Output()\n  boundsChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('bounds_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.click\n   */\n  @Output()\n  rectangleClick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dblclick\n   */\n  @Output()\n  rectangleDblclick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dblclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.drag\n   */\n  @Output()\n  rectangleDrag: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('drag');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragend\n   */\n  @Output()\n  rectangleDragend: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dragend');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragstart\n   */\n  @Output()\n  rectangleDragstart: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dragstart');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousedown\n   */\n  @Output()\n  rectangleMousedown: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mousedown');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousemove\n   */\n  @Output()\n  rectangleMousemove: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mousemove');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseout\n   */\n  @Output()\n  rectangleMouseout: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mouseout');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseover\n   */\n  @Output()\n  rectangleMouseover: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mouseover');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseup\n   */\n  @Output()\n  rectangleMouseup: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mouseup');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.rightclick\n   */\n  @Output()\n  rectangleRightclick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('rightclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.rectangle = new google.maps.Rectangle(options);\n        });\n        this._assertInitialized();\n        this.rectangle.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.rectangle);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForBoundsChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.rectangle) {\n      this.rectangle.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds {\n    this._assertInitialized();\n    return this.rectangle.getBounds();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.rectangle.getDraggable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.rectangle.getEditable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.rectangle.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.RectangleOptions> {\n    return combineLatest([this._options, this._bounds]).pipe(map(([options, bounds]) => {\n      const combinedOptions: google.maps.RectangleOptions = {\n        ...options,\n        bounds: bounds || options.bounds,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.rectangle.setOptions(options);\n    });\n  }\n\n  private _watchForBoundsChanges() {\n    this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n      if (bounds) {\n        this._assertInitialized();\n        this.rectangle.setBounds(bounds);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {rectangle: google.maps.Rectangle} {\n    if (!this._map.googleMap) {\n      throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.');\n    }\n    if (!this.rectangle) {\n      throw Error(\n          'Cannot interact with a Google Map Rectangle before it has been ' +\n          'initialized. Please wait for the Rectangle to load before trying to interact with it.');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {GoogleMap} from './google-map/google-map';\nimport {MapCircle} from './map-circle/map-circle';\nimport {MapGroundOverlay} from './map-ground-overlay/map-ground-overlay';\nimport {MapInfoWindow} from './map-info-window/map-info-window';\nimport {MapMarker} from './map-marker/map-marker';\nimport {MapPolygon} from './map-polygon/map-polygon';\nimport {MapPolyline} from './map-polyline/map-polyline';\nimport {MapRectangle} from './map-rectangle/map-rectangle';\n\nconst COMPONENTS = [\n  GoogleMap,\n  MapCircle,\n  MapGroundOverlay,\n  MapInfoWindow,\n  MapMarker,\n  MapPolygon,\n  MapPolyline,\n  MapRectangle,\n];\n\n@NgModule({\n  declarations: COMPONENTS,\n  exports: COMPONENTS,\n})\nexport class GoogleMapsModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {GoogleMap} from './google-map/google-map';\nexport {GoogleMapsModule} from './google-maps-module';\nexport {MapCircle} from './map-circle/map-circle';\nexport {MapGroundOverlay} from './map-ground-overlay/map-ground-overlay';\nexport {MapInfoWindow} from './map-info-window/map-info-window';\nexport {MapMarker} from './map-marker/map-marker';\nexport {MapPolygon} from './map-polygon/map-polygon';\nexport {MapPolyline} from './map-polyline/map-polyline';\nexport {MapRectangle} from './map-rectangle/map-rectangle';\nexport {MapAnchorPoint} from './map-anchor-point';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;AASA,AAMA;AACA,MAAa,eAAe;IAe1B,YAAoB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;;QAb3B,aAAQ,GAA+D,EAAE,CAAC;QAC1E,eAAU,GAAoC,EAAE,CAAC;KAYlB;;IAR/B,eAAe;QACrB,KAAK,IAAI,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE;YACpC,QAAQ,CAAC,MAAM,EAAE,CAAC;SACnB;QAED,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;KACtB;;IAKD,cAAc,CAAI,IAAY;QAC5B,MAAM,UAAU,GAAG,IAAI,UAAU,CAAI,QAAQ;;YAE3C,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,UAAU,EAAE,QAAQ,EAAC,CAAC,CAAC;gBAC3C,OAAO,SAAS,CAAC;aAClB;YAED,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,KAAQ;gBACvD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aAC9C,CAAC,CAAC;YACH,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC/B,OAAO,MAAM,QAAQ,CAAC,MAAM,EAAE,CAAC;SAChC,CAAC,CAAC;QAEH,OAAO,UAAU,CAAC;KACnB;;IAGD,SAAS,CAAC,MAA6B;QACrC,IAAI,MAAM,KAAK,IAAI,CAAC,OAAO,EAAE;YAC3B,OAAO;SACR;;QAGD,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACpB;QAED,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;;QAGtB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,IAAI,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC1F,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;;IAGD,OAAO;QACL,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;KAC1B;CACF;;AC7ED;;;;;;;AAQA,AA2BA;AACA,AAAO,MAAM,eAAe,GAA2B;IACrD,MAAM,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,UAAU,EAAC;IAC1C,IAAI,EAAE,EAAE;CACT,CAAC;;AAGF,AAAO,MAAM,cAAc,GAAG,OAAO,CAAC;;AAEtC,AAAO,MAAM,aAAa,GAAG,OAAO,CAAC;;;;;;AAOrC;IAAA,MAOa,SAAS;QA4KpB,YACmB,WAAuB,EAChC,OAAe;;;;;QAKU,UAAmB;YANnC,gBAAW,GAAX,WAAW,CAAY;YAChC,YAAO,GAAP,OAAO,CAAQ;YA7KjB,kBAAa,GAAoB,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAG1D,aAAQ,GAAG,IAAI,eAAe,CAAyB,eAAe,CAAC,CAAC;YACxE,YAAO,GACpB,IAAI,eAAe,CAAyD,SAAS,CAAC,CAAC;YAC1E,UAAK,GAAG,IAAI,eAAe,CAAmB,SAAS,CAAC,CAAC;YACzD,aAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;;YAcvC,WAAM,GAAoB,cAAc,CAAC;;YAGzC,UAAK,GAAoB,aAAa,CAAC;;;;;YA0BhD,kBAAa,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,gBAAgB,CAAC,CAAC;;;;;YAO5F,kBAAa,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,gBAAgB,CAAC,CAAC;;;;;YAO5F,aAAQ,GACJ,IAAI,CAAC,aAAa,CAAC,cAAc,CAAoD,OAAO,CAAC,CAAC;;;;;YAOlG,gBAAW,GACP,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,UAAU,CAAC,CAAC;;;;;YAMhE,YAAO,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,MAAM,CAAC,CAAC;;;;;YAM5E,eAAU,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,SAAS,CAAC,CAAC;;;;;YAMlF,iBAAY,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,WAAW,CAAC,CAAC;;;;;YAOhG,mBAAc,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,iBAAiB,CAAC,CAAC;;;;;YAMpF,SAAI,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,MAAM,CAAC,CAAC;;;;;YAOnF,qBAAgB,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,mBAAmB,CAAC,CAAC;;;;;YAOlG,iBAAY,GACR,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,WAAW,CAAC,CAAC;;;;;YAO3E,gBAAW,GACP,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,UAAU,CAAC,CAAC;;;;;YAO1E,iBAAY,GACR,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,WAAW,CAAC,CAAC;;;;;YAO3E,sBAAiB,GACb,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,oBAAoB,CAAC,CAAC;;;;;YAOlE,kBAAa,GACT,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,YAAY,CAAC,CAAC;;;;;YAMlE,gBAAW,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,aAAa,CAAC,CAAC;;;;;YAMvF,gBAAW,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,cAAc,CAAC,CAAC;;;;;YAMxF,gBAAW,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,cAAc,CAAC,CAAC;;YAYhG,IAAI,CAAC,UAAU;gBACX,UAAU,GAAG,iBAAiB,CAAC,UAAU,CAAC,GAAG,OAAO,MAAM,KAAK,QAAQ,IAAI,CAAC,CAAC,MAAM,CAAC;YAExF,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,MAAM,gBAAgB,GAAqB,MAAM,CAAC;gBAClD,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;oBAC5B,MAAM,KAAK,CACP,+DAA+D;wBAC/D,sDAAsD;wBACtD,8DAA8D;wBAC9D,+BAA+B,CAAC,CAAC;iBACtC;aACF;SACF;QAlKD,IACI,MAAM,CAAC,MAAoD;YAC7D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC3B;QACD,IACI,IAAI,CAAC,IAAY;YACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvB;QACD,IACI,OAAO,CAAC,OAA+B;YACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,eAAe,CAAC,CAAC;SAChD;QAyJD,WAAW;YACT,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,EAAE;gBACpC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC7C;SACF;QAED,QAAQ;;YAEN,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,aAAa,CAAC,gBAAgB,CAAE,CAAC;gBAC9E,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;gBACrE,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,SAA0B;oBAC1D,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;oBAC3B,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAC9C,CAAC,CAAC;gBAEH,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBAC/B,IAAI,CAAC,sBAAsB,EAAE,CAAC;gBAC9B,IAAI,CAAC,oBAAoB,EAAE,CAAC;aAC7B;SACF;QAED,WAAW;YACT,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;SAC1B;;;;;QAMD,SAAS,CACL,MAAgE,EAChE,OAAoC;YACtC,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;SAC3C;;;;;QAMD,KAAK,CAAC,CAAS,EAAE,CAAS;YACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5B;;;;;QAMD,KAAK,CAAC,MAAoD;YACxD,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAC9B;;;;;QAMD,WAAW,CACP,YAAsE,EACtE,OAAoC;YACtC,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;SACnD;;;;;QAMD,SAAS;YACP,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC;SAC3C;;;;;QAMD,SAAS;YACP,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACnC;;;;;QAMD,iBAAiB;YACf,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC;SAC3C;;;;;QAMD,UAAU;YACR,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC;SACpC;;;;;QAMD,YAAY;YACV,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;SACtC;;;;;QAMD,aAAa;YACX,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;SACvC;;;;;QAMD,aAAa;YACX,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;SACvC;;;;;QAMD,OAAO;YACL,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;SACjC;;;;;QAMD,OAAO;YACL,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;SACjC;;;;;QAMD,IAAI,QAAQ;YACV,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;SAChC;;;;;QAMD,IAAI,IAAI;YACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;SAC5B;;;;;QAMD,IAAI,QAAQ;YACV,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;SAChC;;;;;QAMD,IAAI,eAAe;YACjB,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;SACvC;QAEO,QAAQ;YACd,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;gBACjC,MAAM,CAAC,MAAM,GAAG,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,cAAc,CAAC;gBACnE,MAAM,CAAC,KAAK,GAAG,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,aAAa,CAAC;aACjE;SACF;;QAGO,eAAe;YACrB,OAAO,aAAa,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC1D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC;gBAChC,MAAM,eAAe,mCAChB,OAAO,KACV,MAAM,EAAE,MAAM,IAAI,OAAO,CAAC,MAAM,EAChC,IAAI,EAAE,IAAI,KAAK,SAAS,GAAG,IAAI,GAAG,OAAO,CAAC,IAAI,EAC9C,SAAS,EAAE,IAAI,CAAC,SAAS,GAC1B,CAAC;gBACF,OAAO,eAAe,CAAC;aACxB,CAAC,CAAC,CAAC;SACT;QAEO,cAAc,CAAC,cAAkD;YAEvE,OAAO,cAAc,CAAC,IAAI,CACtB,IAAI,CAAC,CAAC,CAAC,EACP,GAAG,CAAC,OAAO;;;;gBAIT,OAAO,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;aACxF,CAAC,EACF,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;SACrB;QAEO,uBAAuB;YAC7B,aAAa,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACjD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC9B,SAAS,CAAC,CAAC,CAAC,SAAS,EAAE,OAAO,CAAC;gBAC9B,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aAC/B,CAAC,CAAC;SACR;QAEO,sBAAsB;YAC5B,aAAa,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;iBAChD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC9B,SAAS,CAAC,CAAC,CAAC,SAAS,EAAE,MAAM,CAAC;gBAC7B,IAAI,MAAM,EAAE;oBACV,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;iBAC7B;aACF,CAAC,CAAC;SACR;QAEO,oBAAoB;YAC1B,aAAa,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC9C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC9B,SAAS,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC;gBAC3B,IAAI,IAAI,KAAK,SAAS,EAAE;oBACtB,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;iBACzB;aACF,CAAC,CAAC;SACR;;QAGO,kBAAkB;YACxB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACnB,MAAM,KAAK,CAAC,4EAA4E;oBAC5E,oEAAoE,CAAC,CAAC;aACnF;SACF;;;gBA5cF,SAAS,SAAC;oBACT,QAAQ,EAAE,YAAY;oBACtB,QAAQ,EAAE,WAAW;oBACrB,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,QAAQ,EAAE,4DAA4D;oBACtE,aAAa,EAAE,iBAAiB,CAAC,IAAI;iBACtC;;;gBA3CC,UAAU;gBAUV,MAAM;gBAqN0C,MAAM,uBAAnD,QAAQ,YAAI,MAAM,SAAC,WAAW;;;yBA7JhC,KAAK;wBAGL,KAAK;4BAML,KAAK;yBAEL,KAAK;uBAIL,KAAK;0BAIL,KAAK;gCASL,MAAM;gCAON,MAAM;2BAON,MAAM;8BAQN,MAAM;0BAQN,MAAM;6BAMN,MAAM;+BAMN,MAAM;iCAMN,MAAM;uBAON,MAAM;mCAMN,MAAM;+BAON,MAAM;8BAQN,MAAM;+BAQN,MAAM;oCAQN,MAAM;gCAQN,MAAM;8BAQN,MAAM;8BAMN,MAAM;8BAMN,MAAM;;IA4RT,gBAAC;KAAA;AAED,MAAM,eAAe,GAAG,eAAe,CAAC;;AAGxC,SAAS,mBAAmB,CAAC,KAAU;IACrC,IAAI,KAAK,IAAI,IAAI,EAAE;QACjB,OAAO,EAAE,CAAC;KACX;IAED,OAAO,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,GAAG,KAAK,IAAI,CAAC;CAC3D;;AC3gBD;;;;;;;AAQA,AAUA;;;;AAIA;IAAA,MAIa,SAAS;QAqIpB,YAA6B,IAAe,EAAmB,OAAe;YAAjD,SAAI,GAAJ,IAAI,CAAW;YAAmB,YAAO,GAAP,OAAO,CAAQ;YApItE,kBAAa,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACzC,aAAQ,GAAG,IAAI,eAAe,CAA4B,EAAE,CAAC,CAAC;YAC9D,YAAO,GACpB,IAAI,eAAe,CAAyD,SAAS,CAAC,CAAC;YAC1E,YAAO,GAAG,IAAI,eAAe,CAAmB,SAAS,CAAC,CAAC;YAE3D,eAAU,GAAG,IAAI,OAAO,EAAQ,CAAC;;;;;YA6BlD,kBAAa,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,gBAAgB,CAAC,CAAC;;;;;YAO5F,gBAAW,GACP,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,OAAO,CAAC,CAAC;;;;;YAOvE,mBAAc,GACV,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,UAAU,CAAC,CAAC;;;;;YAO1E,eAAU,GACN,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,MAAM,CAAC,CAAC;;;;;YAOtE,kBAAa,GACT,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,SAAS,CAAC,CAAC;;;;;YAOzE,oBAAe,GACX,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,WAAW,CAAC,CAAC;;;;;YAO3E,oBAAe,GACX,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,WAAW,CAAC,CAAC;;;;;YAO3E,oBAAe,GACX,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,WAAW,CAAC,CAAC;;;;;YAO3E,mBAAc,GACV,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,UAAU,CAAC,CAAC;;;;;YAO1E,oBAAe,GACX,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,WAAW,CAAC,CAAC;;;;;YAO3E,kBAAa,GACT,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,SAAS,CAAC,CAAC;;;;;YAOzE,kBAAa,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,gBAAgB,CAAC,CAAC;;;;;YAO5F,qBAAgB,GACZ,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,YAAY,CAAC,CAAC;SAEM;QArHlF,IACI,OAAO,CAAC,OAAkC;YAC5C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;SACnC;QAED,IACI,MAAM,CAAC,MAAoD;YAC7D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC3B;QAED,IACI,MAAM,CAAC,MAAc;YACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC3B;QA0GD,QAAQ;YACN,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACxB,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;;;;oBAIpD,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;wBAC7B,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;qBAC/C,CAAC,CAAC;oBACH,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAU,CAAC,CAAC;oBACzC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBAC3C,CAAC,CAAC;gBAEH,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBAC/B,IAAI,CAAC,sBAAsB,EAAE,CAAC;gBAC9B,IAAI,CAAC,sBAAsB,EAAE,CAAC;aAC/B;SACF;QAED,WAAW;YACT,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;YAC3B,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAC1B;SACF;;;;;QAMD,SAAS;YACP,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;SAChC;;;;;QAMD,SAAS;YACP,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;SAChC;;;;;QAMD,YAAY;YACV,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;SACnC;;;;;QAMD,WAAW;YACT,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;SAClC;;;;;QAMD,SAAS;YACP,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;SAChC;;;;;QAMD,UAAU;YACR,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;SACjC;QAEO,eAAe;YACrB,OAAO,aAAa,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC5D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC;gBAClC,MAAM,eAAe,mCAChB,OAAO,KACV,MAAM,EAAE,MAAM,IAAI,OAAO,CAAC,MAAM,EAChC,MAAM,EAAE,MAAM,KAAK,SAAS,GAAG,MAAM,GAAG,OAAO,CAAC,MAAM,GACvD,CAAC;gBACF,OAAO,eAAe,CAAC;aACxB,CAAC,CAAC,CAAC;SACT;QAEO,uBAAuB;YAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;gBAC9D,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aACjC,CAAC,CAAC;SACJ;QAEO,sBAAsB;YAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM;gBAC5D,IAAI,MAAM,EAAE;oBACV,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;iBAC/B;aACF,CAAC,CAAC;SACJ;QAEO,sBAAsB;YAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM;gBAC5D,IAAI,MAAM,KAAK,SAAS,EAAE;oBACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;iBAC/B;aACF,CAAC,CAAC;SACJ;QAEO,kBAAkB;YACxB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACxB,MAAM,KAAK,CACT,4EAA4E;oBAC5E,oEAAoE,CAAC,CAAC;aACzE;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,MAAM,KAAK,CACT,8DAA8D;oBAC9D,oFAAoF,CAAC,CAAC;aACzF;SACF;;;gBA9QF,SAAS,SAAC;oBACT,QAAQ,EAAE,YAAY;oBACtB,QAAQ,EAAE,WAAW;iBACtB;;;gBAVO,SAAS;gBAJS,MAAM;;;0BA+B7B,KAAK;yBAKL,KAAK;yBAKL,KAAK;gCASL,MAAM;8BAON,MAAM;iCAQN,MAAM;6BAQN,MAAM;gCAQN,MAAM;kCAQN,MAAM;kCAQN,MAAM;kCAQN,MAAM;iCAQN,MAAM;kCAQN,MAAM;gCAQN,MAAM;gCAQN,MAAM;mCAON,MAAM;;IA0IT,gBAAC;;;ACrSD;;;;;;;AAQA,AAUA;;;;;AAKA;IAAA,MAIa,gBAAgB;QAiD3B,YAA6B,IAAe,EAAmB,OAAe;YAAjD,SAAI,GAAJ,IAAI,CAAW;YAAmB,YAAO,GAAP,OAAO,CAAQ;YAhDtE,kBAAa,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAEzC,aAAQ,GAAG,IAAI,eAAe,CAAS,CAAC,CAAC,CAAC;YAC1C,SAAI,GAAG,IAAI,eAAe,CAAS,EAAE,CAAC,CAAC;YACvC,eAAU,GAAG,IAAI,OAAO,EAAQ,CAAC;;YAmBzC,cAAS,GAAY,KAAK,CAAC;;;;;YAapC,aAAQ,GACJ,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,OAAO,CAAC,CAAC;;;;;;YAQvE,gBAAW,GACP,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,UAAU,CAAC,CAAC;SAEQ;;QAlClF,IACI,GAAG,CAAC,GAAW;YACjB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACrB;;QASD,IACI,OAAO,CAAC,OAAe;YACzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC7B;QAqBD,QAAQ;YACN,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,MAAM,KAAK,CAAC,2BAA2B,CAAC,CAAC;aAC1C;YACD,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACxB,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;;;;oBAIpD,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;wBAC7B,IAAI,CAAC,aAAa;4BACd,IAAI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;qBAC/E,CAAC,CAAC;oBACH,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAU,CAAC,CAAC;oBAChD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;iBAClD,CAAC,CAAC;gBAEH,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBAC/B,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC5B;SACF;QAED,WAAW;YACT,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;YAC3B,IAAI,IAAI,CAAC,aAAa,EAAE;gBACtB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACjC;SACF;;;;;;QAOD,SAAS;YACP,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;SACvC;;;;;;QAOD,UAAU;YACR,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;SACxC;;;;;;QAOD,MAAM;YACJ,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;SACpC;QAEO,eAAe;YACrB,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO;gBACnC,MAAM,eAAe,GAAqC;oBACxD,SAAS,EAAE,IAAI,CAAC,SAAS;oBACzB,OAAO;iBACR,CAAC;gBACF,OAAO,eAAe,CAAC;aACxB,CAAC,CAAC,CAAC;SACL;QAEO,uBAAuB;YAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;gBAC9D,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;iBACxC;aACF,CAAC,CAAC;SACJ;QAEO,mBAAmB;YACzB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG;gBACtD,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;gBACnC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;;gBAGxB,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACrB,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAU,CAAC,CAAC;aACtC,CAAC,CAAC;SACJ;QAEO,kBAAkB;YACxB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACxB,MAAM,KAAK,CACP,4EAA4E;oBAC5E,oEAAoE,CAAC,CAAC;aAC3E;YACD,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;gBACvB,MAAM,KAAK,CACP,kFAAkF;oBAClF,8EAA8E,CAAC,CAAC;aACrF;SACF;;;gBA/JF,SAAS,SAAC;oBACT,QAAQ,EAAE,oBAAoB;oBAC9B,QAAQ,EAAE,kBAAkB;iBAC7B;;;gBAXO,SAAS;gBAJS,MAAM;;;sBA+B7B,KAAK;yBAML,KAAK;4BAGL,KAAK;0BAGL,KAAK;2BASL,MAAM;8BASN,MAAM;;IA+GT,uBAAC;;;ACvLD;;;;;;;AAQA,AAmBA;;;;;AAKA;IAAA,MAKa,aAAa;QA4DxB,YAA6B,UAAqB,EAC9B,WAAoC,EACpC,OAAe;YAFN,eAAU,GAAV,UAAU,CAAW;YAC9B,gBAAW,GAAX,WAAW,CAAyB;YACpC,YAAO,GAAP,OAAO,CAAQ;YA7D3B,kBAAa,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACzC,aAAQ,GAAG,IAAI,eAAe,CAAgC,EAAE,CAAC,CAAC;YAClE,cAAS,GACtB,IAAI,eAAe,CAAyD,SAAS,CAAC,CAAC;YAC1E,aAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;;;;;YAuBtC,eAAU,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,YAAY,CAAC,CAAC;;;;;;YAQ/F,mBAAc,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,iBAAiB,CAAC,CAAC;;;;;YAMpF,aAAQ,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,UAAU,CAAC,CAAC;;;;;;YAQ3F,oBAAe,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,kBAAkB,CAAC,CAAC;;;;;;YAQhG,kBAAa,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,gBAAgB,CAAC,CAAC;SAIrD;QAhDvC,IACI,OAAO,CAAC,OAAsC;YAChD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;SACnC;QAED,IACI,QAAQ,CAAC,QAAsD;YACjE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC/B;QA0CD,QAAQ;YACN,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;gBAC9B,MAAM,sBAAsB,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;gBAEtD,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;;;;oBAIpD,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;wBAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;qBACvD,CAAC,CAAC;oBAEH,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;iBAC/C,CAAC,CAAC;gBAEH,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBAC/B,IAAI,CAAC,wBAAwB,EAAE,CAAC;aACjC;SACF;QAED,WAAW;YACT,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;;;YAIzB,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,IAAI,CAAC,KAAK,EAAE,CAAC;aACd;SACF;;;;QAKD,KAAK;YACH,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;SACzB;;;;;QAMD,UAAU;YACR,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;SACrC;;;;;;QAOD,WAAW;YACT,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;SACtC;;;;;QAMD,SAAS;YACP,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;SACpC;;;;;QAMD,IAAI,CAAC,MAAuB;YAC1B,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;YAClD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE,GAAG,SAAS,CAAC,CAAC;SAC1F;QAEO,eAAe;YACrB,OAAO,aAAa,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC;gBACjF,MAAM,eAAe,mCAChB,OAAO,KACV,QAAQ,EAAE,QAAQ,IAAI,OAAO,CAAC,QAAQ,EACtC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,aAAa,GACxC,CAAC;gBACF,OAAO,eAAe,CAAC;aACxB,CAAC,CAAC,CAAC;SACL;QAEO,uBAAuB;YAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;gBAC5D,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aACrC,CAAC,CAAC;SACJ;QAEO,wBAAwB;YAC9B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ;gBAC9D,IAAI,QAAQ,EAAE;oBACZ,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;iBACvC;aACF,CAAC,CAAC;SACJ;QAEO,kBAAkB;YACxB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;gBAC9B,MAAM,KAAK,CACP,4EAA4E;oBAC5E,oEAAoE,CAAC,CAAC;aAC3E;YACD,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACpB,MAAM,KAAK,CACP,mEAAmE;oBACnE,sFAAsF;oBACtF,KAAK,CAAC,CAAC;aACZ;SACF;;;gBA1LF,SAAS,SAAC;oBACT,QAAQ,EAAE,iBAAiB;oBAC3B,QAAQ,EAAE,eAAe;oBACzB,IAAI,EAAE,EAAC,OAAO,EAAE,eAAe,EAAC;iBACjC;;;gBAbO,SAAS;gBAVf,UAAU;gBAEV,MAAM;;;0BAoCL,KAAK;2BAKL,KAAK;6BASL,MAAM;iCAON,MAAM;2BAON,MAAM;kCAON,MAAM;gCAQN,MAAM;;IA6HT,oBAAC;;;AC3ND;;;;;;;AAQA,AAoBA;;;;AAIA,AAAO,MAAM,sBAAsB,GAAG;IACpC,QAAQ,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,UAAU,EAAC;CAC7C,CAAC;;;;;;AAOF;IAAA,MAOa,SAAS;QAuMpB,YACmB,UAAqB,EAC9B,OAAe;YADN,eAAU,GAAV,UAAU,CAAW;YAC9B,YAAO,GAAP,OAAO,CAAQ;YAxMjB,kBAAa,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACzC,aAAQ,GACrB,IAAI,eAAe,CAA4B,sBAAsB,CAAC,CAAC;YAC1D,WAAM,GAAG,IAAI,eAAe,CAAmB,SAAS,CAAC,CAAC;YAC1D,cAAS,GACtB,IAAI,eAAe,CAAyD,SAAS,CAAC,CAAC;YAC1E,WAAM,GACnB,IAAI,eAAe,CAA2C,SAAS,CAAC,CAAC;YAC5D,eAAU,GAAG,IAAI,eAAe,CAAoB,SAAS,CAAC,CAAC;YAC/D,aAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;;;;;YAgChD,qBAAgB,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,mBAAmB,CAAC,CAAC;;;;;YAOlG,aAAQ,GACJ,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,OAAO,CAAC,CAAC;;;;;YAOvE,qBAAgB,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,mBAAmB,CAAC,CAAC;;;;;YAOlG,kBAAa,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,gBAAgB,CAAC,CAAC;;;;;YAO5F,gBAAW,GACP,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,UAAU,CAAC,CAAC;;;;;YAO1E,YAAO,GACH,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,MAAM,CAAC,CAAC;;;;;YAOtE,eAAU,GACN,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,SAAS,CAAC,CAAC;;;;;YAOzE,qBAAgB,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,mBAAmB,CAAC,CAAC;;;;;YAOlG,iBAAY,GACR,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,WAAW,CAAC,CAAC;;;;;YAMjE,gBAAW,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,cAAc,CAAC,CAAC;;;;;YAMxF,gBAAW,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,cAAc,CAAC,CAAC;;;;;YAOlG,iBAAY,GACR,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,WAAW,CAAC,CAAC;;;;;YAO3E,gBAAW,GACP,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,UAAU,CAAC,CAAC;;;;;YAO1E,iBAAY,GACR,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,WAAW,CAAC,CAAC;;;;;YAO3E,eAAU,GACN,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,SAAS,CAAC,CAAC;;;;;YAOzE,oBAAe,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,kBAAkB,CAAC,CAAC;;;;;YAOhG,kBAAa,GACT,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,YAAY,CAAC,CAAC;;;;;YAMlE,iBAAY,GACH,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,eAAe,CAAC,CAAC;;;;;YAO5E,iBAAY,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,eAAe,CAAC,CAAC;;;;;YAO1F,mBAAc,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,iBAAiB,CAAC,CAAC;;;;;YAO9F,kBAAa,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,gBAAgB,CAAC,CAAC;SAW/D;QA7L7B,IACI,OAAO,CAAC,OAAkC;YAC5C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,sBAAsB,CAAC,CAAC;SACvD;QAED,IACI,KAAK,CAAC,KAAa;YACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACzB;QAED,IACI,QAAQ,CAAC,QAAsD;YACjE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC/B;QAED,IACI,KAAK,CAAC,KAAqC;YAC7C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACzB;QAED,IACI,SAAS,CAAC,SAAkB;YAC9B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACjC;QAwKD,QAAQ;YACN,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;gBAC9B,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;;;;oBAIpD,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;oBACpF,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,SAAU,CAAC,CAAC;oBAC/C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBAC3C,CAAC,CAAC;gBAEH,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBAC/B,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC7B,IAAI,CAAC,wBAAwB,EAAE,CAAC;gBAChC,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC7B,IAAI,CAAC,yBAAyB,EAAE,CAAC;aAClC;SACF;QAED,WAAW;YACT,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACzB,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAC1B;SACF;;;;;QAMD,YAAY;YACV,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,IAAI,CAAC;SAC3C;;;;;QAMD,YAAY;YACV,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;SACnC;;;;;QAMD,SAAS;YACP,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC;SACxC;;;;;QAMD,YAAY;YACV,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;SACrC;;;;;QAMD,OAAO;YACL,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC;SACtC;;;;;QAMD,QAAQ;YACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC;SACvC;;;;;QAMD,UAAU;YACR,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,IAAI,CAAC;SACzC;;;;;QAMD,WAAW;YACT,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC;SAC1C;;;;;QAMD,QAAQ;YACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC;SACvC;;;;;QAMD,QAAQ;YACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC;SACvC;;;;;QAMD,UAAU;YACR,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;SACjC;;;;;QAMD,SAAS;YACP,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC;SACxC;;QAGD,SAAS;YACP,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;QAEO,eAAe;YACrB,OAAO,aAAa,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;iBAC3F,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,CAAC;gBACrD,MAAM,eAAe,mCAChB,OAAO,KACV,KAAK,EAAE,KAAK,IAAI,OAAO,CAAC,KAAK,EAC7B,QAAQ,EAAE,QAAQ,IAAI,OAAO,CAAC,QAAQ,EACtC,KAAK,EAAE,KAAK,IAAI,OAAO,CAAC,KAAK,EAC7B,SAAS,EAAE,SAAS,KAAK,SAAS,GAAG,SAAS,GAAG,OAAO,CAAC,SAAS,EAClE,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,GAC/B,CAAC;gBACF,OAAO,eAAe,CAAC;aACxB,CAAC,CAAC,CAAC;SACT;QAEO,uBAAuB;YAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;gBAC5D,IAAI,IAAI,CAAC,MAAM,EAAE;oBACf,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;iBACjC;aACF,CAAC,CAAC;SACJ;QAEO,qBAAqB;YAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK;gBACxD,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,KAAK,SAAS,EAAE;oBACtC,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACF,CAAC,CAAC;SACJ;QAEO,wBAAwB;YAC9B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ;gBAC9D,IAAI,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAE;oBAC3B,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;iBACnC;aACF,CAAC,CAAC;SACJ;QAEO,qBAAqB;YAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK;gBACxD,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,KAAK,SAAS,EAAE;oBACtC,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACF,CAAC,CAAC;SACJ;QAEO,yBAAyB;YAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS;gBAChE,IAAI,IAAI,CAAC,MAAM,IAAI,SAAS,KAAK,SAAS,EAAE;oBAC1C,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;iBACrC;aACF,CAAC,CAAC;SACJ;QAEO,kBAAkB;YACxB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;gBAC9B,MAAM,KAAK,CACP,4EAA4E;oBAC5E,oEAAoE,CAAC,CAAC;aAC3E;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,MAAM,KAAK,CACP,8DAA8D;oBAC9D,oFAAoF,CAAC,CAAC;aAC3F;SACF;;;gBAxaF,SAAS,SAAC;oBACT,QAAQ,EAAE,YAAY;oBACtB,QAAQ,EAAE,WAAW;oBACrB,QAAQ,EAAE,2BAA2B;oBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;iBACtC;;;gBAvBO,SAAS;gBALf,MAAM;;;0BAyCL,KAAK;wBAKL,KAAK;2BAKL,KAAK;wBAKL,KAAK;4BAKL,KAAK;mCASL,MAAM;2BAON,MAAM;mCAQN,MAAM;gCAON,MAAM;8BAON,MAAM;0BAQN,MAAM;6BAQN,MAAM;mCAQN,MAAM;+BAON,MAAM;8BAQN,MAAM;8BAMN,MAAM;+BAMN,MAAM;8BAQN,MAAM;+BAQN,MAAM;6BAQN,MAAM;kCAQN,MAAM;gCAON,MAAM;+BAQN,MAAM;+BAON,MAAM;iCAON,MAAM;gCAON,MAAM;;IAqOT,gBAAC;;;ACldD;;;;;;;AAQA,AAiBA;;;;;AAKA;IAAA,MAIa,UAAU;QA0GrB,YAA6B,IAAe,EAAmB,OAAe;YAAjD,SAAI,GAAJ,IAAI,CAAW;YAAmB,YAAO,GAAP,OAAO,CAAQ;YAzGtE,kBAAa,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACzC,aAAQ,GAAG,IAAI,eAAe,CAA6B,EAAE,CAAC,CAAC;YAC/D,WAAM,GACnB,IAAI,eAAe,CAEwC,SAAS,CAAC,CAAC;YAEzD,eAAU,GAAG,IAAI,OAAO,EAAQ,CAAC;;;;YAyBlD,iBAAY,GACR,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,OAAO,CAAC,CAAC;;;;YAM3E,oBAAe,GACX,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,UAAU,CAAC,CAAC;;;;YAM9E,gBAAW,GACP,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,MAAM,CAAC,CAAC;;;;YAMtE,mBAAc,GACV,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,SAAS,CAAC,CAAC;;;;YAMzE,qBAAgB,GACZ,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,WAAW,CAAC,CAAC;;;;YAM3E,qBAAgB,GACZ,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,WAAW,CAAC,CAAC;;;;YAM/E,qBAAgB,GACZ,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,WAAW,CAAC,CAAC;;;;YAM/E,oBAAe,GACX,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,UAAU,CAAC,CAAC;;;;YAM9E,qBAAgB,GACZ,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,WAAW,CAAC,CAAC;;;;YAM/E,mBAAc,GACV,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,SAAS,CAAC,CAAC;;;;YAM7E,sBAAiB,GACb,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,YAAY,CAAC,CAAC;SAEE;QAzFlF,IACI,OAAO,CAAC,OAAmC;YAC7C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;SACnC;QAED,IACI,KAAK,CAAC,KAE2B;YACnC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACzB;QAiFD,QAAQ;YACN,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACxB,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;;;;oBAIpD,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;wBAC7B,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;qBACjD,CAAC,CAAC;oBACH,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAU,CAAC,CAAC;oBAC1C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC5C,CAAC,CAAC;gBAEH,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBAC/B,IAAI,CAAC,oBAAoB,EAAE,CAAC;aAC7B;SACF;QAED,WAAW;YACT,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;YAC3B,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAC3B;SACF;;;;;QAMD,YAAY;YACV,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;SACpC;;;;QAKD,WAAW;YACT,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;SACnC;;;;QAKD,OAAO;YACL,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;SAC/B;;;;QAKD,QAAQ;YACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;SAChC;;;;QAKD,UAAU;YACR,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;SAClC;QAEO,eAAe;YACrB,OAAO,aAAa,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC;gBAC3E,MAAM,eAAe,mCAChB,OAAO,KACV,KAAK,EAAE,KAAK,IAAI,OAAO,CAAC,KAAK,GAC9B,CAAC;gBACF,OAAO,eAAe,CAAC;aACxB,CAAC,CAAC,CAAC;SACL;QAEO,uBAAuB;YAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;gBAC9D,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aAClC,CAAC,CAAC;SACJ;QAEO,oBAAoB;YAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK;gBAC1D,IAAI,KAAK,EAAE;oBACT,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;iBAC9B;aACF,CAAC,CAAC;SACJ;QAEO,kBAAkB;YACxB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACxB,MAAM,KAAK,CACP,4EAA4E;oBAC5E,oEAAoE,CAAC,CAAC;aAC3E;YACD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjB,MAAM,KAAK,CACP,+DAA+D;oBAC/D,qFAAqF,CAAC,CAAC;aAC5F;SACF;;;gBA1NF,SAAS,SAAC;oBACT,QAAQ,EAAE,aAAa;oBACvB,QAAQ,EAAE,YAAY;iBACvB;;;gBAXO,SAAS;gBALf,MAAM;;;0BAkCL,KAAK;wBAKL,KAAK;+BAUL,MAAM;kCAON,MAAM;8BAON,MAAM;iCAON,MAAM;mCAON,MAAM;mCAON,MAAM;mCAON,MAAM;kCAON,MAAM;mCAON,MAAM;iCAON,MAAM;oCAON,MAAM;;IAiHT,iBAAC;;;ACzPD;;;;;;;AAQA,AAiBA;;;;;AAKA;IAAA,MAIa,WAAW;QAwGtB,YACmB,IAAe,EACxB,OAAe;YADN,SAAI,GAAJ,IAAI,CAAW;YACxB,YAAO,GAAP,OAAO,CAAQ;YAzGjB,kBAAa,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACzC,aAAQ,GAAG,IAAI,eAAe,CAA8B,EAAE,CAAC,CAAC;YAChE,UAAK,GAClB,IAAI,eAAe,CACwC,SAAS,CAAC,CAAC;YAEzD,eAAU,GAAG,IAAI,OAAO,EAAQ,CAAC;;;;YAwBlD,kBAAa,GACT,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,OAAO,CAAC,CAAC;;;;YAM3E,qBAAgB,GACZ,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,UAAU,CAAC,CAAC;;;;YAM9E,iBAAY,GACR,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,MAAM,CAAC,CAAC;;;;YAMtE,oBAAe,GACX,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,SAAS,CAAC,CAAC;;;;YAMzE,sBAAiB,GACb,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,WAAW,CAAC,CAAC;;;;YAM3E,sBAAiB,GACb,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,WAAW,CAAC,CAAC;;;;YAM/E,sBAAiB,GACb,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,WAAW,CAAC,CAAC;;;;YAM/E,qBAAgB,GACZ,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,UAAU,CAAC,CAAC;;;;YAM9E,sBAAiB,GACb,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,WAAW,CAAC,CAAC;;;;YAM/E,oBAAe,GACX,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,SAAS,CAAC,CAAC;;;;YAM7E,uBAAkB,GACd,IAAI,CAAC,aAAa,CAAC,cAAc,CAA6B,YAAY,CAAC,CAAC;SAInD;QA1F7B,IACI,OAAO,CAAC,OAAoC;YAC9C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;SACnC;QAED,IACI,IAAI,CAAC,IAC2B;YAClC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvB;QAmFD,QAAQ;YACN,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACxB,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;;;;oBAIpD,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;oBACxF,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAU,CAAC,CAAC;oBAC3C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC7C,CAAC,CAAC;gBAEH,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBAC/B,IAAI,CAAC,oBAAoB,EAAE,CAAC;aAC7B;SACF;QAED,WAAW;YACT,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;YAC3B,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAC5B;SACF;;;;;QAMD,YAAY;YACV,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;SACrC;;;;QAKD,WAAW;YACT,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;SACpC;;;;QAKD,OAAO;YACL,IAAI,CAAC,kBAAkB,EAAE,CAAC;;YAE1B,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;SAChC;;;;QAKD,UAAU;YACR,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;SACnC;QAEO,eAAe;YACrB,OAAO,aAAa,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC;gBACzE,MAAM,eAAe,mCAChB,OAAO,KACV,IAAI,EAAE,IAAI,IAAI,OAAO,CAAC,IAAI,GAC3B,CAAC;gBACF,OAAO,eAAe,CAAC;aACxB,CAAC,CAAC,CAAC;SACL;QAEO,uBAAuB;YAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;gBAC9D,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aACnC,CAAC,CAAC;SACJ;QAEO,oBAAoB;YAC1B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI;gBACxD,IAAI,IAAI,EAAE;oBACR,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;iBAC7B;aACF,CAAC,CAAC;SACJ;QAEO,kBAAkB;YACxB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACxB,MAAM,KAAK,CACP,4EAA4E;oBAC5E,oEAAoE,CAAC,CAAC;aAC3E;YACD,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,MAAM,KAAK,CACP,gEAAgE;oBAChE,sFAAsF,CAAC,CAAC;aAC7F;SACF;;;gBAjNF,SAAS,SAAC;oBACT,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE,aAAa;iBACxB;;;gBAXO,SAAS;gBALf,MAAM;;;0BAiCL,KAAK;uBAKL,KAAK;gCASL,MAAM;mCAON,MAAM;+BAON,MAAM;kCAON,MAAM;oCAON,MAAM;oCAON,MAAM;oCAON,MAAM;mCAON,MAAM;oCAON,MAAM;kCAON,MAAM;qCAON,MAAM;;IA0GT,kBAAC;;;AChPD;;;;;;;AAQA,AAUA;;;;;AAKA;IAAA,MAIa,YAAY;QAyHvB,YAA6B,IAAe,EAAmB,OAAe;YAAjD,SAAI,GAAJ,IAAI,CAAW;YAAmB,YAAO,GAAP,OAAO,CAAQ;YAxHtE,kBAAa,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACzC,aAAQ,GAAG,IAAI,eAAe,CAA+B,EAAE,CAAC,CAAC;YACjE,YAAO,GACpB,IAAI,eAAe,CACf,SAAS,CAAC,CAAC;YAEF,eAAU,GAAG,IAAI,OAAO,EAAQ,CAAC;;;;;YAwBlD,kBAAa,GAAqB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAO,gBAAgB,CAAC,CAAC;;;;;YAO5F,mBAAc,GACV,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,OAAO,CAAC,CAAC;;;;;YAOvE,sBAAiB,GACb,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,UAAU,CAAC,CAAC;;;;;YAO1E,kBAAa,GACT,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,MAAM,CAAC,CAAC;;;;;YAOtE,qBAAgB,GACZ,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,SAAS,CAAC,CAAC;;;;;YAOzE,uBAAkB,GACd,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,WAAW,CAAC,CAAC;;;;;YAO3E,uBAAkB,GACd,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,WAAW,CAAC,CAAC;;;;;YAO3E,uBAAkB,GACd,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,WAAW,CAAC,CAAC;;;;;YAO3E,sBAAiB,GACb,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,UAAU,CAAC,CAAC;;;;;YAO1E,uBAAkB,GACd,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,WAAW,CAAC,CAAC;;;;;YAO3E,qBAAgB,GACZ,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,SAAS,CAAC,CAAC;;;;;YAOzE,wBAAmB,GACf,IAAI,CAAC,aAAa,CAAC,cAAc,CAAyB,YAAY,CAAC,CAAC;SAEM;QAzGlF,IACI,OAAO,CAAC,OAAqC;YAC/C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;SACnC;QAED,IACI,MAAM,CAAC,MAAgE;YACzE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC3B;QAmGD,QAAQ;YACN,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACxB,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;;;;oBAIpD,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;wBAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;qBACrD,CAAC,CAAC;oBACH,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAU,CAAC,CAAC;oBAC5C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAC9C,CAAC,CAAC;gBAEH,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBAC/B,IAAI,CAAC,sBAAsB,EAAE,CAAC;aAC/B;SACF;QAED,WAAW;YACT,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;YAC3B,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAC7B;SACF;;;;;QAMD,SAAS;YACP,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACnC;;;;;QAMD,YAAY;YACV,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;SACtC;;;;;QAMD,WAAW;YACT,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;SACrC;;;;;QAMD,UAAU;YACR,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC;SACpC;QAEO,eAAe;YACrB,OAAO,aAAa,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC;gBAC7E,MAAM,eAAe,mCAChB,OAAO,KACV,MAAM,EAAE,MAAM,IAAI,OAAO,CAAC,MAAM,GACjC,CAAC;gBACF,OAAO,eAAe,CAAC;aACxB,CAAC,CAAC,CAAC;SACL;QAEO,uBAAuB;YAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;gBAC9D,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aACpC,CAAC,CAAC;SACJ;QAEO,sBAAsB;YAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM;gBAC5D,IAAI,MAAM,EAAE;oBACV,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;iBAClC;aACF,CAAC,CAAC;SACJ;QAEO,kBAAkB;YACxB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACxB,MAAM,KAAK,CACP,4EAA4E;oBAC5E,oEAAoE,CAAC,CAAC;aAC3E;YACD,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACnB,MAAM,KAAK,CACP,iEAAiE;oBACjE,uFAAuF,CAAC,CAAC;aAC9F;SACF;;;gBApOF,SAAS,SAAC;oBACT,QAAQ,EAAE,eAAe;oBACzB,QAAQ,EAAE,cAAc;iBACzB;;;gBAXO,SAAS;gBAJoC,MAAM;;;0BAgCxD,KAAK;yBAKL,KAAK;gCASL,MAAM;iCAON,MAAM;oCAQN,MAAM;gCAQN,MAAM;mCAQN,MAAM;qCAQN,MAAM;qCAQN,MAAM;qCAQN,MAAM;oCAQN,MAAM;qCAQN,MAAM;mCAQN,MAAM;sCAQN,MAAM;;IA4GT,mBAAC;;;AC5PD;;;;;;;AAQA,AAWA,MAAM,UAAU,GAAG;IACjB,SAAS;IACT,SAAS;IACT,gBAAgB;IAChB,aAAa;IACb,SAAS;IACT,UAAU;IACV,WAAW;IACX,YAAY;CACb,CAAC;AAEF;IAAA,MAIa,gBAAgB;;;gBAJ5B,QAAQ,SAAC;oBACR,YAAY,EAAE,UAAU;oBACxB,OAAO,EAAE,UAAU;iBACpB;;IAED,uBAAC;;;ACnCD;;;;;;GAMG;;ACNH;;GAEG;;;;"}